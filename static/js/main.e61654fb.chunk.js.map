{"version":3,"sources":["components/header/SocialLinks/SocialLinks.tsx","components/player/constants.ts","components/player/PlayerService.ts","components/player/PlayerControls/PlayButton/PlayButton.tsx","components/player/PlayerControls/VolumeControls/VolumeControls.tsx","components/player/PlayerComponent/PlayerComponent.tsx","components/header/Header.tsx","components/menu/Menu.tsx","components/menu/menu-button/MenuButton.tsx","components/content/Content.tsx","components/main/Main.tsx","components/player/Player.tsx","App.tsx","index.tsx"],"names":["withRouter","PlayerTypes","className","target","href","rel","icon","mixcloudIcon","width","color","facebookIcon","vkIcon","mailRu","instagramIcon","telegramIcon","googlePlay","DEFAULT_PLAYER_STATE","playing","muted","volume","playerService","state","playerState","track","playerStateSubject","trackNameSubject","this","Subject","updateTrackName","setInterval","bind","onNext","subscribe","data","fetch","response","json","trackName","icestats","source","title","next","isPlaying","volumeLevel","isMuted","PlayButton","playerType","useState","setPlayingMode","renderIcon","size","Main","height","onClick","pauseIcon","playIcon","FullVolumeIcon","bxsVolumeFull","MuteVolumeIcon","bxsVolumeMute","VolumeControls","setVolumeMode","ReactSlider","thumbClassName","trackClassName","defaultValue","value","Math","trunc","sliderDefaultValue","onChange","changeVolume","PlayerComponent","subscription","subscribeOnPlayerStateChange","setState","subscribeOnTrackNameChanges","props","isMainPlayer","renderMainPlayer","renderHeaderPlayer","renderPlayer","Component","to","exact","path","component","SocialLinks","render","Header","bxSearch","PAGES","Menu","menuRef","wrapperRef","toggleMenu","ref","crossIcon","map","route","toLowerCase","key","buildMenuItem","MenuButton","React","createRef","current","classList","toggle","Player","subscribeOnPlayerStateChanges","unsubscribe","url","config","file","forceAudio","App","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e61654fb.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport { Icon } from '@iconify/react';\r\nimport mixcloudIcon from '@iconify/icons-cib/mixcloud';\r\nimport facebookIcon from '@iconify/icons-cib/facebook';\r\nimport vkIcon from '@iconify/icons-cib/vk';\r\nimport mailRu from '@iconify/icons-cib/mail-ru';\r\nimport instagramIcon from '@iconify/icons-cib/instagram';\r\nimport telegramIcon from '@iconify/icons-cib/telegram';\r\nimport googlePlay from '@iconify/icons-cib/google-play';\r\n\r\nimport './SocialLinks.css'\r\n\r\n\r\nfunction SocialLinks() {\r\n    return (\r\n        <div className='social-icons'>\r\n            <a target='_blank' href='https://www.mixcloud.com/radioplato/' rel='noopener noreferrer'><Icon className='social-icon' icon={mixcloudIcon} width='1.7em' color='white'/></a>\r\n            <a target='_blank' href='https://www.facebook.com/radioplato.by/' rel='noopener noreferrer'><Icon className='social-icon' icon={facebookIcon} width='1.5em' color='white'/></a>\r\n            <a target='_blank' href='https://vk.com/radioplato' rel='noopener noreferrer'><Icon className='social-icon' icon={vkIcon} width='1.5em' color='white'/></a>\r\n            <a target='_blank' href='mailto:hey@radioplato.by' rel='noopener noreferrer'><Icon className='social-icon' icon={mailRu} width='1.5em' color='white'/></a>\r\n            <a target='_blank' href='https://www.instagram.com/radio_plato/' rel='noopener noreferrer'><Icon className='social-icon' icon={instagramIcon} width='1.5em' color='white'/></a>\r\n            <a target='_blank' href='https://t.me/radioplato' rel='noopener noreferrer'><Icon className='social-icon' icon={telegramIcon} width='1.5em' color='white'/></a>\r\n            <a target='_blank' href='https://play.google.com/store/apps/details?id=com.radioplato' rel='noopener noreferrer'><Icon className='social-icon' icon={googlePlay} width='1.5em' color='white'/></a>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withRouter(SocialLinks);","import { PlayerState } from './interfaces';\r\n\r\nexport const STREAM_URL = 'https://radioplato.radioca.st/stream';\r\nexport const DATA_URL = 'https://radioplato.radioca.st/status-json.xsl';\r\n\r\nexport const DATA_REQUEST_INTERVAL = 15000;\r\n\r\nexport const DEFAULT_PLAYER_STATE: PlayerState = {\r\n    playing: false,\r\n    muted: false,\r\n    volume: 1\r\n};\r\n\r\nexport enum PlayerTypes {\r\n    Main = 'main',\r\n    Header = 'header'\r\n};\r\n","import { Subject } from 'rxjs'\r\n\r\nimport { PlayerState } from './interfaces';\r\nimport { DEFAULT_PLAYER_STATE, DATA_URL, DATA_REQUEST_INTERVAL } from './constants';\r\n\r\nclass PlayerService {\r\n    private playerState: PlayerState;\r\n    private track = '';\r\n    private playerStateSubject: Subject<PlayerState>;\r\n    private trackNameSubject: Subject<string>;\r\n\r\n    constructor (state: PlayerState) {\r\n        this.playerState = state;\r\n        this.playerStateSubject = new Subject();\r\n        this.trackNameSubject = new Subject();\r\n\r\n        this.updateTrackName();\r\n        setInterval(this.updateTrackName.bind(this), DATA_REQUEST_INTERVAL);\r\n    }\r\n\r\n    set playing (isPlaying: boolean) {\r\n        this.playerState.playing = isPlaying;\r\n        this.playerStateSubject.next(this.playerState);\r\n    }\r\n\r\n    get playing () {\r\n        return this.playerState.playing;\r\n    }\r\n\r\n    set volume (volumeLevel: number) {\r\n        this.playerState.volume = volumeLevel;\r\n        this.playerStateSubject.next(this.playerState);\r\n    }\r\n\r\n    get volume () {\r\n        return this.playerState.volume;\r\n    }\r\n\r\n    set muted (isMuted: boolean) {\r\n        this.playerState.muted = isMuted;\r\n        this.playerStateSubject.next(this.playerState);\r\n    }\r\n\r\n    get muted () {\r\n        return this.playerState.muted;\r\n    }\r\n\r\n    get trackName () {\r\n        return this.track;\r\n    }\r\n\r\n    subscribeOnPlayerStateChanges (onNext: Function) {\r\n        return this.playerStateSubject.subscribe(data => onNext(data));\r\n    }\r\n\r\n    subscribeOnTrackNameChanges (onNext: Function) {\r\n        return this.trackNameSubject.subscribe(data => onNext(data));\r\n    }\r\n\r\n    async updateTrackName () {\r\n        const response = await fetch(DATA_URL);\r\n        const data = await response.json();\r\n        const trackName = data.icestats.source[0].title;\r\n\r\n        if (trackName !== this.track) {\r\n            this.track = trackName;\r\n            this.trackNameSubject.next(this.track);\r\n        }\r\n    }\r\n}\r\n\r\nconst playerService = new PlayerService(DEFAULT_PLAYER_STATE)\r\n\r\nexport { playerService };","import React, { useState } from 'react';\r\n\r\nimport { Icon } from '@iconify/react';\r\nimport playIcon from '@iconify/icons-el/play';\r\nimport pauseIcon from '@iconify/icons-el/pause';\r\n\r\nimport { playerService } from '../../PlayerService';\r\nimport { PlayerProps } from '../../interfaces';\r\nimport { PlayerTypes } from '../../constants';\r\n\r\nimport './PlayButton.css';\r\n\r\n\r\nconst SMALL_ICON = 10;\r\nconst LARGE_ICON = 35;\r\n\r\nfunction PlayButton({ playerType }: PlayerProps) {\r\n    const [ playing, setPlayingMode ] = useState(playerService.playing);\r\n\r\n    const togglePlayingMode = () => {\r\n        playerService.playing = !playerService.playing;\r\n        setPlayingMode(playerService.playing);\r\n    }\r\n\r\n    const isMainPlayer = () => {\r\n        return playerType === PlayerTypes.Main;\r\n    }\r\n\r\n    const renderIcon = (icon: object) => {\r\n        const size = isMainPlayer() ? LARGE_ICON : SMALL_ICON;\r\n\r\n        return <Icon icon={ icon } width={ size } height={ size }/>;\r\n    }\r\n\r\n    return (\r\n        <button \r\n            className='play-button'\r\n            onClick={ togglePlayingMode }\r\n        >\r\n            { playing ? renderIcon(pauseIcon) : renderIcon(playIcon) }\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default PlayButton;","import React, { useState } from 'react';\r\n\r\nimport ReactSlider from 'react-slider';\r\nimport { Icon } from '@iconify/react';\r\nimport bxsVolumeFull from '@iconify/icons-bx/bxs-volume-full';\r\nimport bxsVolumeMute from '@iconify/icons-bx/bxs-volume-mute';\r\n\r\nimport { playerService } from '../../PlayerService';\r\n\r\nimport './VolumeControls.css';\r\n\r\nconst FullVolumeIcon = <Icon icon={ bxsVolumeFull } width={ 16 } height={ 16 } color='#ffffff'/>;\r\nconst MuteVolumeIcon = <Icon icon={ bxsVolumeMute } width={ 16 } height={ 16 } color='#ffffff'/>;\r\n\r\nfunction VolumeControls() {\r\n    const [ muted, setVolumeMode ] = useState(playerService.muted);\r\n    \r\n    const toggleVolumeMode = () => {\r\n        playerService.muted = !playerService.muted;\r\n        setVolumeMode(playerService.muted);\r\n    }\r\n\r\n    const changeVolume = (value: any) => {\r\n        playerService.volume = value / 100;\r\n    }\r\n\r\n    const sliderDefaultValue = () => {\r\n        const value = playerService.volume * 100;\r\n        \r\n        return Math.trunc(value);\r\n    }\r\n\r\n    return (\r\n        <div className='volume-controls'>\r\n            <button \r\n                className='volume-mode-button'\r\n                onClick={ toggleVolumeMode }\r\n            >\r\n                { muted ? FullVolumeIcon : MuteVolumeIcon }\r\n            </button>\r\n            <ReactSlider\r\n                className='horizontal-slider'\r\n                thumbClassName='thumb'\r\n                trackClassName='track'\r\n                defaultValue={ sliderDefaultValue() }\r\n                onChange={ value => changeVolume(value)}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default VolumeControls;","import React, { Component } from 'react';\r\n\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport PlayButton from '../PlayerControls/PlayButton/PlayButton';\r\nimport VolumeControls from '../PlayerControls/VolumeControls/VolumeControls';\r\nimport { playerService } from '../PlayerService';\r\nimport { PlayerProps } from '../interfaces';\r\nimport { PlayerTypes } from '../constants';\r\n\r\nimport './PlayerComponent.css';\r\n\r\n\r\nconst ONAIR = 'onair';\r\n\r\nexport class PlayerComponent extends Component<PlayerProps> {\r\n    state = {\r\n        trackName: ''\r\n    };\r\n    subscription: Subscription | null = null;\r\n\r\n    get isMainPlayer () {\r\n        return this.props.playerType === PlayerTypes.Main;\r\n    }\r\n\r\n    get className () {\r\n        return `${ this.props.playerType }-player`;\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.subscribeOnPlayerStateChange();\r\n        this.setState({\r\n            trackName: playerService.trackName\r\n        });\r\n    }\r\n\r\n    subscribeOnPlayerStateChange () {\r\n        this.subscription = playerService.subscribeOnTrackNameChanges(\r\n            (trackName: string) => this.setState({ trackName })\r\n        );\r\n    }\r\n    \r\n    renderMainPlayer (trackName: string) {\r\n        return (\r\n            <>\r\n                <div className='controls-container'>\r\n                    <PlayButton playerType={ this.props.playerType }/>\r\n                    <VolumeControls />\r\n                </div>\r\n                <p className='onair'>{ ONAIR }</p>\r\n                <p className='track-title'>{ trackName }</p>\r\n            </>\r\n        );\r\n    }\r\n\r\n    renderHeaderPlayer (trackName: string) {\r\n        return (\r\n            <>\r\n                <PlayButton playerType={ this.props.playerType }/>\r\n                <div className='track-title'>\r\n                    <p>{ trackName }</p>\r\n                </div>\r\n                <VolumeControls />\r\n            </>\r\n        );\r\n    }\r\n\r\n    renderPlayer () {\r\n        const {\r\n            trackName\r\n        } = this.state;\r\n\r\n        return this.isMainPlayer ?\r\n            this.renderMainPlayer(trackName) :\r\n            this.renderHeaderPlayer(trackName);\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div className={ this.className }>\r\n                { this.renderPlayer() }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PlayerComponent;\r\n","import React from 'react'\r\n\r\nimport {\r\n  Link,\r\n  withRouter,\r\n  Switch,\r\n  Route\r\n} from 'react-router-dom';\r\n\r\nimport { Icon } from '@iconify/react';\r\nimport bxSearch from '@iconify/icons-bx/bx-search';\r\n\r\nimport SocialLinks from './SocialLinks/SocialLinks';\r\nimport PlayerComponent from '../player/PlayerComponent/PlayerComponent';\r\nimport { PlayerTypes } from '../player/constants';\r\n\r\nimport './Header.css'\r\n\r\n\r\nconst RADIO_PLATO = 'Radio Plato';\r\nconst DONATE = 'Donate';\r\n\r\nfunction Header() {\r\n    return (\r\n        <header className='header-container'>\r\n            <Link to='/' className='logo-text'>{ RADIO_PLATO }</Link>\r\n            <div className='social-container'>\r\n                <Switch>\r\n                    <Route exact path='/' component={ SocialLinks }/>\r\n                    <Route path='/' render={\r\n                        props => <PlayerComponent { ...props } playerType={ PlayerTypes.Header }/>\r\n                    }/>\r\n                </Switch>\r\n                <p className='donate'>{ DONATE }</p>\r\n                <div className='search-icon'>\r\n                    <Icon icon={ bxSearch } width='1.8em' color='white'/>\r\n                </div>\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n  \r\nexport default withRouter(Header);","import React from 'react'\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { Icon } from '@iconify/react';\r\nimport crossIcon from '@iconify/icons-gridicons/cross';\r\n\r\nimport './Menu.css'\r\n\r\n\r\nconst PAGES = [\r\n    'News',\r\n    'Shows',\r\n    'Schedule',\r\n    'About'\r\n];\r\n\r\ninterface MenuParameters {\r\n    menuRef: React.RefObject<HTMLDivElement>;\r\n    wrapperRef: React.RefObject<HTMLDivElement>;\r\n    toggleMenu: () => void;\r\n}\r\n\r\nfunction Menu({ menuRef, wrapperRef, toggleMenu }: MenuParameters) {\r\n\r\n    const buildMenuItem = (title: string) => {\r\n        const route = `/${ title.toLowerCase() }`;\r\n\r\n        return (\r\n            <li className='menu-item' key={ title }>\r\n                <Link to={ route } onClick={ toggleMenu }>{ title }</Link>\r\n            </li>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className='wrapper' ref={ wrapperRef } onClick={ toggleMenu } />\r\n            <nav ref={ menuRef }>\r\n                <div className='close-button-container'>\r\n                    <button \r\n                        className='close-button'\r\n                        onClick={ toggleMenu }\r\n                    >\r\n                        <Icon icon={ crossIcon } width={ 48 } height={ 48 }/>    \r\n                    </button>\r\n                </div>\r\n                <div className='menu-items-container'>\r\n                    <ul className='menu-items'>\r\n                        { PAGES.map(title => buildMenuItem(title)) }\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n        </>     \r\n    );\r\n  }\r\n  \r\n  export default Menu","import React from 'react'\r\n\r\nimport Menu from '../Menu';\r\n\r\nimport './MenuButton.css'\r\n\r\n\r\nconst MENU = 'menu';\r\n\r\nfunction MenuButton() {\r\n    const menuRef = React.createRef<HTMLDivElement>()\r\n    const wrapperRef = React.createRef<HTMLDivElement>()\r\n    \r\n    const toggleMenu = () => {\r\n        wrapperRef.current?.classList.toggle('wrapper-show');\r\n        menuRef.current?.classList.toggle('menu-open');\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Menu menuRef={ menuRef } wrapperRef={ wrapperRef } toggleMenu={ toggleMenu }/>\r\n            <div className='menuButton' onClick={ toggleMenu }>\r\n                <p className='label'>{ MENU }</p>\r\n            </div>\r\n        </>\r\n    );\r\n  }\r\n  \r\n  export default MenuButton","import React from 'react'\r\n\r\nimport {\r\n    Switch,\r\n    Route,\r\n    withRouter,\r\n} from 'react-router-dom';\r\n\r\nimport './Content.css'\r\n\r\n\r\nfunction Content() {\r\n\r\n    const schedule = () => (<div>Schedule</div>);\r\n\r\n    const shows = () => (<div>Shows</div>);\r\n\r\n    const news = () => (<div>News</div>);\r\n\r\n    return (\r\n        <Switch>\r\n            <Route exact path='/schedule' component={ schedule }/>\r\n            <Route exact path='/shows' component={ shows }/>\r\n            <Route exact path='/news' component={ news }/>\r\n        </Switch>\r\n    )\r\n  }\r\n  \r\n  export default withRouter(Content)","import React from 'react'\r\n\r\nimport {\r\n    Switch,\r\n    Route,\r\n    withRouter,\r\n} from 'react-router-dom';\r\n\r\nimport MenuButton from '../menu/menu-button/MenuButton'\r\nimport PlayerComponent from '../player/PlayerComponent/PlayerComponent'\r\nimport Content from '../content/Content'\r\n\r\nimport './Main.css'\r\nimport { PlayerTypes } from '../player/constants';\r\n\r\n\r\nfunction Main() {\r\n    return (\r\n        <main>\r\n            <MenuButton />\r\n                <Switch>\r\n                    <Route exact path='/' render={\r\n                        props => <PlayerComponent { ...props } playerType={ PlayerTypes.Main }/>\r\n                    }/>\r\n                </Switch>\r\n            <Content />\r\n        </main>\r\n    );\r\n}\r\n  \r\nexport default withRouter(Main);","import React, { Component } from 'react';\r\nimport ReactPlayer from 'react-player';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { playerService } from './PlayerService';\r\nimport { PlayerState } from './interfaces';\r\nimport { DEFAULT_PLAYER_STATE, STREAM_URL } from './constants';\r\n\r\nimport './Player.css';\r\n\r\nexport class Player extends Component {\r\n    state = DEFAULT_PLAYER_STATE;\r\n    subscription: Subscription | null = null;\r\n    \r\n    componentDidMount () {\r\n        this.subscribeOnPlayerStateChange();\r\n    }\r\n\r\n    subscribeOnPlayerStateChange () {\r\n        this.subscription = playerService.subscribeOnPlayerStateChanges(\r\n            (data: PlayerState) => this.setState(data)\r\n        );\r\n    }\r\n\r\n    componentWillUnmount () {\r\n        this.subscription?.unsubscribe();\r\n    }\r\n\r\n    render () {\r\n        const {\r\n            playing,\r\n            muted,\r\n            volume\r\n        } = this.state;\r\n\r\n        return (\r\n            <div className='audio'>\r\n                <ReactPlayer\r\n                    url={ STREAM_URL }\r\n                    playing={ playing }\r\n                    muted={ muted }\r\n                    volume={ volume }\r\n                    config={{\r\n                        file: {\r\n                            forceAudio: true\r\n                        }\r\n                    }}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Player;","import React from 'react';\r\n\r\nimport {\r\n    BrowserRouter as Router,\r\n} from 'react-router-dom';\r\n\r\nimport Header from './components/header/Header';\r\nimport Main from './components/main/Main';\r\nimport Player from './components/player/Player';\r\n\r\nimport './App.css';\r\n\r\nfunction App() {\r\n    return (\r\n        <Router>\r\n            <Header />\r\n            <Main />\r\n            <Player />\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}