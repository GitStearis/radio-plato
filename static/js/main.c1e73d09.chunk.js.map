{"version":3,"sources":["components/shared/interfaces.ts","components/shared/SocialLinksComponent/SocialLinksComponent.tsx","components/shared/enums.ts","components/shared/Player/constants.ts","components/shared/Player/PlayerService.ts","components/shared/Player/PlayerControls/PlayButton/PlayButton.tsx","components/shared/Player/PlayerControls/VolumeControls/VolumeControls.tsx","components/shared/Player/PlayerComponent/PlayerComponent.tsx","components/header/Header.tsx","components/menu/Menu.tsx","components/menu/menu-button/MenuButton.tsx","components/shows/ShowCardComponent/ShowCardComponent.tsx","components/shared/constants.ts","components/shows/ShowListComponent.tsx","components/shows/ShowEpisodesComponent/ShowEpisodesComponent.tsx","components/shows/ShowComponent/ShowComponent.tsx","components/about/About.tsx","components/schedule/ScheduleShowline.tsx","components/schedule/Schedule.tsx","components/content/Content.tsx","components/main/Main.tsx","components/shared/Player/Player.tsx","App.tsx","index.tsx"],"names":["Socials","SOCIAL_ICONS","Map","Mixcloud","mixcloudIcon","Spotify","spotifyIcon","Itunes","itunesIcon","Castbox","castboxIcon","Facebook","facebookIcon","Vk","vkIcon","Email","mailRu","Instagram","instagramIcon","Telegram","telegramIcon","GooglePlay","googlePlay","SocialLinksComponent","PlayerTypes","socialLinks","linkElements","Object","entries","map","entry","key","href","icon","className","target","rel","width","color","buildSocialLink","Date","getTime","get","DEFAULT_PLAYER_STATE","playing","muted","volume","playerService","state","playerState","track","playerStateSubject","trackNameSubject","this","Subject","updateTrackName","setInterval","bind","onNext","subscribe","data","fetch","response","json","trackName","icestats","source","title","next","isPlaying","volumeLevel","isMuted","PlayButton","playerType","useState","setPlayingMode","renderIcon","size","Main","height","onClick","pauseIcon","playIcon","FullVolumeIcon","bxsVolumeFull","MuteVolumeIcon","bxsVolumeMute","VolumeControls","setVolumeMode","ReactSlider","thumbClassName","trackClassName","defaultValue","value","Math","trunc","sliderDefaultValue","onChange","changeVolume","PlayerComponent","subscription","subscribeOnPlayerStateChange","setState","subscribeOnTrackNameChanges","props","isMainPlayer","renderMainPlayer","renderHeaderPlayer","renderPlayer","Component","HEADER_SOCIAL_LINKS","mixcloud","facebook","vk","email","instagram","telegram","withRouter","to","exact","path","render","Header","bxSearch","PAGES","Menu","menuRef","wrapperRef","toggleMenu","ref","crossIcon","route","toLowerCase","buildMenuItem","MenuButton","React","createRef","current","classList","toggle","ShowCardComponent","showCard","excerpt","showCover","slug","src","url","loading","alt","alternativeText","BACKEND_URL","ShowListComponent","showCards","showDto","Excerpt","ShowCover","caption","Slug","Title","then","datum","parseShowCard","fetchShows","renderShowCards","ShowEpisodesComponent","showEpisodes","name","image","pictures","date","created_time","playlistDto","length","parseShowEpisode","playlist","parseShowEpisodes","reverse","slice","episode","toISOString","split","join","episodes","renderShowEpisode","fetchPlaylist","renderShowEpisodes","ShowComponent","show","description","Description","showLinks","ShowLink","spotify","itunes","castbox","parseShow","fetchShow","imageSrc","AboutComponent","about","aboutDto","Content","aboutCover","Image","parseAbout","fetchAbout","ScheduleShowline","IndexesOfDay","PeriodicityTypes","showline","link","startTime","endTime","interval","indexByDayName","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday","DAYS_OF_WEEK","Schedule","schedule","selectedDay","moment","isoWeekday","scheduleShowlineBuilder","selectDay","day","renderButtons","index","renderDailySchedule","playlistShow","fetchSchedules","concat","parseScheduleLine","scheduleShows","organizeSchedule","scheduleDto","OnAirDateTime","onAirDateTime","weekdays","dayIndex","undefined","push","type","Type","hide","Hide","Link","startDate","StartDate","StartTime","endDate","EndDate","EndTime","periodicity","Periodicity","forEach","shouldShowBeOnAir","sort","sortShowsByDate","first","second","showStartDate","dateOfDay","add","weeksPassed","week","Daily","Weekly","includes","BiWeekly","EveryThirdWeek","SingleTime","startOf","isSame","component","routerProps","match","params","Player","subscribeOnPlayerStateChanges","unsubscribe","config","file","forceAudio","App","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c1e73d09.chunk.js","sourcesContent":["export enum Socials {\r\n    Castbox = 'castbox',\r\n    Itunes = 'itunes',\r\n    Mixcloud = 'mixcloud',\r\n    Spotify = 'spotify',\r\n    Facebook = 'facebook',\r\n    Vk = 'vk',\r\n    Email = 'email',\r\n    Instagram = 'instagram',\r\n    Telegram = 'telegram',\r\n    GooglePlay = 'googlePlay',  \r\n}\r\n\r\nexport type SocialLinks = {\r\n    [key in Socials]?: string;\r\n}\r\n\r\nexport interface StrapiObjectDto {\r\n    createdAt: string;\r\n    id: string;\r\n    updatedAt: string;\r\n    __v: number;\r\n    _id: number;\r\n}\r\n\r\nexport interface ImageDto {\r\n    ext: string;\r\n    hash: string;\r\n    height: number;\r\n    mime: string;\r\n    size: number;\r\n    url: string;\r\n    width: number;\r\n}\r\n\r\nexport interface FormatsDto {\r\n    thumbnail?: ImageDto;\r\n}\r\n","import React from 'react'\r\n\r\nimport { Icon } from '@iconify/react';\r\nimport mixcloudIcon from '@iconify/icons-cib/mixcloud';\r\nimport spotifyIcon from '@iconify/icons-cib/spotify';\r\nimport itunesIcon from '@iconify/icons-ps/itunes';\r\nimport castboxIcon from '@iconify/icons-simple-icons/castbox';\r\nimport facebookIcon from '@iconify/icons-cib/facebook';\r\nimport vkIcon from '@iconify/icons-cib/vk';\r\nimport mailRu from '@iconify/icons-cib/mail-ru';\r\nimport instagramIcon from '@iconify/icons-cib/instagram';\r\nimport telegramIcon from '@iconify/icons-cib/telegram';\r\nimport googlePlay from '@iconify/icons-cib/google-play';\r\n\r\nimport { SocialLinks, Socials } from '../interfaces';\r\n\r\nimport './SocialLinksComponent.css'\r\n\r\nconst SOCIAL_ICONS = new Map<string, object>([\r\n    [ Socials.Mixcloud, mixcloudIcon ],\r\n    [ Socials.Spotify, spotifyIcon ],\r\n    [ Socials.Itunes, itunesIcon ],\r\n    [ Socials.Castbox, castboxIcon ],\r\n    [ Socials.Facebook, facebookIcon ],\r\n    [ Socials.Vk, vkIcon ],\r\n    [ Socials.Email, mailRu ],\r\n    [ Socials.Instagram, instagramIcon ],\r\n    [ Socials.Telegram, telegramIcon ],\r\n    [ Socials.GooglePlay, googlePlay ],\r\n]);\r\n\r\ninterface SocialLinksProperties {\r\n    socialLinks: SocialLinks;\r\n}\r\n\r\nfunction buildSocialLink (key: string, href: string | undefined, icon: object | undefined) {\r\n    return href && icon ? (\r\n        <a className='social-link' target='_blank' key={ key } href={ href } rel='noopener noreferrer'>\r\n            <Icon className='social-icon' icon={ icon } width='1.5em' color='white'/>\r\n        </a>\r\n    ) : (null);\r\n}\r\n\r\nfunction SocialLinksComponent({ socialLinks }: SocialLinksProperties) {\r\n    const linkElements = Object.entries(socialLinks).map(entry => {\r\n        const key = `${ entry[0] }-${ new Date().getTime() }`;\r\n        const href = entry[1];\r\n        const icon = SOCIAL_ICONS.get(entry[0]);\r\n\r\n        return buildSocialLink(key, href, icon);\r\n    });\r\n\r\n    return (\r\n        <div className='social-icons'>\r\n            { linkElements }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SocialLinksComponent;","export enum PlayerTypes {\r\n    Main = 'main',\r\n    Header = 'header'\r\n};","import { PlayerState } from './interfaces';\r\n\r\nexport const STREAM_URL = 'https://radioplato.radioca.st/stream';\r\nexport const DATA_URL = 'https://radioplato.radioca.st/status-json.xsl';\r\n\r\nexport const DATA_REQUEST_INTERVAL = 15000;\r\n\r\nexport const DEFAULT_PLAYER_STATE: PlayerState = {\r\n    playing: false,\r\n    muted: false,\r\n    volume: 1\r\n};\r\n","import { Subject } from 'rxjs'\r\n\r\nimport { PlayerState } from './interfaces';\r\nimport { DEFAULT_PLAYER_STATE, DATA_URL, DATA_REQUEST_INTERVAL } from './constants';\r\n\r\nclass PlayerService {\r\n    private playerState: PlayerState;\r\n    private track = '';\r\n    private playerStateSubject: Subject<PlayerState>;\r\n    private trackNameSubject: Subject<string>;\r\n\r\n    constructor (state: PlayerState) {\r\n        this.playerState = state;\r\n        this.playerStateSubject = new Subject();\r\n        this.trackNameSubject = new Subject();\r\n\r\n        this.updateTrackName();\r\n        setInterval(this.updateTrackName.bind(this), DATA_REQUEST_INTERVAL);\r\n    }\r\n\r\n    set playing (isPlaying: boolean) {\r\n        this.playerState.playing = isPlaying;\r\n        this.playerStateSubject.next(this.playerState);\r\n    }\r\n\r\n    get playing () {\r\n        return this.playerState.playing;\r\n    }\r\n\r\n    set volume (volumeLevel: number) {\r\n        this.playerState.volume = volumeLevel;\r\n        this.playerStateSubject.next(this.playerState);\r\n    }\r\n\r\n    get volume () {\r\n        return this.playerState.volume;\r\n    }\r\n\r\n    set muted (isMuted: boolean) {\r\n        this.playerState.muted = isMuted;\r\n        this.playerStateSubject.next(this.playerState);\r\n    }\r\n\r\n    get muted () {\r\n        return this.playerState.muted;\r\n    }\r\n\r\n    get trackName () {\r\n        return this.track;\r\n    }\r\n\r\n    subscribeOnPlayerStateChanges (onNext: Function) {\r\n        return this.playerStateSubject.subscribe(data => onNext(data));\r\n    }\r\n\r\n    subscribeOnTrackNameChanges (onNext: Function) {\r\n        return this.trackNameSubject.subscribe(data => onNext(data));\r\n    }\r\n\r\n    async updateTrackName () {\r\n        const response = await fetch(DATA_URL);\r\n        const data = await response.json();\r\n        const trackName = data.icestats.source[0].title;\r\n\r\n        if (trackName !== this.track) {\r\n            this.track = trackName;\r\n            this.trackNameSubject.next(this.track);\r\n        }\r\n    }\r\n}\r\n\r\nconst playerService = new PlayerService(DEFAULT_PLAYER_STATE)\r\n\r\nexport { playerService };","import React, { useState } from 'react';\r\n\r\nimport { Icon } from '@iconify/react';\r\nimport playIcon from '@iconify/icons-el/play';\r\nimport pauseIcon from '@iconify/icons-el/pause';\r\n\r\nimport { playerService } from '../../PlayerService';\r\nimport { PlayerProps } from '../../interfaces';\r\nimport { PlayerTypes } from '../../../enums';\r\n\r\nimport './PlayButton.css';\r\n\r\n\r\nconst SMALL_ICON = 10;\r\nconst LARGE_ICON = 35;\r\n\r\nfunction PlayButton({ playerType }: PlayerProps) {\r\n    const [ playing, setPlayingMode ] = useState(playerService.playing);\r\n\r\n    const togglePlayingMode = () => {\r\n        playerService.playing = !playerService.playing;\r\n        setPlayingMode(playerService.playing);\r\n    }\r\n\r\n    const isMainPlayer = () => {\r\n        return playerType === PlayerTypes.Main;\r\n    }\r\n\r\n    const renderIcon = (icon: object) => {\r\n        const size = isMainPlayer() ? LARGE_ICON : SMALL_ICON;\r\n\r\n        return <Icon icon={ icon } width={ size } height={ size }/>;\r\n    }\r\n\r\n    return (\r\n        <button \r\n            className='play-button'\r\n            onClick={ togglePlayingMode }\r\n        >\r\n            { playing ? renderIcon(pauseIcon) : renderIcon(playIcon) }\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default PlayButton;","import React, { useState } from 'react';\r\n\r\nimport ReactSlider from 'react-slider';\r\nimport { Icon } from '@iconify/react';\r\nimport bxsVolumeFull from '@iconify/icons-bx/bxs-volume-full';\r\nimport bxsVolumeMute from '@iconify/icons-bx/bxs-volume-mute';\r\n\r\nimport { playerService } from '../../PlayerService';\r\n\r\nimport './VolumeControls.css';\r\n\r\nconst FullVolumeIcon = <Icon icon={ bxsVolumeFull } width={ 16 } height={ 16 } color='#ffffff'/>;\r\nconst MuteVolumeIcon = <Icon icon={ bxsVolumeMute } width={ 16 } height={ 16 } color='#ffffff'/>;\r\n\r\nfunction VolumeControls() {\r\n    const [ muted, setVolumeMode ] = useState(playerService.muted);\r\n    \r\n    const toggleVolumeMode = () => {\r\n        playerService.muted = !playerService.muted;\r\n        setVolumeMode(playerService.muted);\r\n    }\r\n\r\n    const changeVolume = (value: any) => {\r\n        playerService.volume = value / 100;\r\n    }\r\n\r\n    const sliderDefaultValue = () => {\r\n        const value = playerService.volume * 100;\r\n        \r\n        return Math.trunc(value);\r\n    }\r\n\r\n    return (\r\n        <div className='volume-controls'>\r\n            <button \r\n                className='volume-mode-button'\r\n                onClick={ toggleVolumeMode }\r\n            >\r\n                { muted ? FullVolumeIcon : MuteVolumeIcon }\r\n            </button>\r\n            <ReactSlider\r\n                className='horizontal-slider'\r\n                thumbClassName='thumb'\r\n                trackClassName='track'\r\n                defaultValue={ sliderDefaultValue() }\r\n                onChange={ value => changeVolume(value)}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default VolumeControls;","import React, { Component } from 'react';\r\n\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport PlayButton from '../PlayerControls/PlayButton/PlayButton';\r\nimport VolumeControls from '../PlayerControls/VolumeControls/VolumeControls';\r\nimport { playerService } from '../PlayerService';\r\nimport { PlayerProps } from '../interfaces';\r\nimport { PlayerTypes } from '../../enums';\r\n\r\nimport './PlayerComponent.css';\r\n\r\n\r\nconst ONAIR = 'onair';\r\n\r\nexport class PlayerComponent extends Component<PlayerProps> {\r\n    state = {\r\n        trackName: ''\r\n    };\r\n    subscription: Subscription | null = null;\r\n\r\n    get isMainPlayer () {\r\n        return this.props.playerType === PlayerTypes.Main;\r\n    }\r\n\r\n    get className () {\r\n        return `${ this.props.playerType }-player`;\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.subscribeOnPlayerStateChange();\r\n        this.setState({\r\n            trackName: playerService.trackName\r\n        });\r\n    }\r\n\r\n    subscribeOnPlayerStateChange () {\r\n        this.subscription = playerService.subscribeOnTrackNameChanges(\r\n            (trackName: string) => this.setState({ trackName })\r\n        );\r\n    }\r\n    \r\n    renderMainPlayer (trackName: string) {\r\n        return (\r\n            <>\r\n                <div className='controls-container'>\r\n                    <PlayButton playerType={ this.props.playerType }/>\r\n                    <VolumeControls />\r\n                </div>\r\n                <p className='onair'>{ ONAIR }</p>\r\n                <p className='track-title'>{ trackName }</p>\r\n            </>\r\n        );\r\n    }\r\n\r\n    renderHeaderPlayer (trackName: string) {\r\n        return (\r\n            <>\r\n                <PlayButton playerType={ this.props.playerType }/>\r\n                <div className='track-title'>\r\n                    <p>{ trackName }</p>\r\n                </div>\r\n                <VolumeControls />\r\n            </>\r\n        );\r\n    }\r\n\r\n    renderPlayer () {\r\n        const {\r\n            trackName\r\n        } = this.state;\r\n\r\n        return this.isMainPlayer ?\r\n            this.renderMainPlayer(trackName) :\r\n            this.renderHeaderPlayer(trackName);\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div className={ this.className }>\r\n                { this.renderPlayer() }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PlayerComponent;\r\n","import React from 'react'\r\n\r\nimport {\r\n  Link,\r\n  withRouter,\r\n  Switch,\r\n  Route\r\n} from 'react-router-dom';\r\n\r\nimport { Icon } from '@iconify/react';\r\nimport bxSearch from '@iconify/icons-bx/bx-search';\r\n\r\nimport SocialLinksComponent from '../shared/SocialLinksComponent/SocialLinksComponent';\r\nimport PlayerComponent from '../shared/Player/PlayerComponent/PlayerComponent';\r\nimport { SocialLinks } from '../shared/interfaces';\r\nimport { PlayerTypes } from '../shared/enums';\r\n\r\nimport './Header.css'\r\n\r\n\r\nconst RADIO_PLATO = 'Radio Plato';\r\nconst DONATE = 'Donate';\r\n\r\nconst HEADER_SOCIAL_LINKS: SocialLinks = {\r\n    mixcloud: 'https://www.mixcloud.com/radioplato/',\r\n    facebook: 'https://www.facebook.com/radioplato.by/',\r\n    vk: 'https://vk.com/radioplato',\r\n    email: 'mailto:hey@radioplato.by',\r\n    instagram: 'https://www.instagram.com/radio_plato/',\r\n    telegram: 'https://t.me/radioplato',\r\n    googlePlay: 'https://play.google.com/store/apps/details?id=com.radioplato'\r\n}\r\n\r\nfunction Header() {\r\n    return (\r\n        <header className='header-container'>\r\n            <Link to='/' className='logo-text'>{ RADIO_PLATO }</Link>\r\n            <div className='social-container'>\r\n                <Switch>\r\n                    <Route exact path='/' render={\r\n                        props => (<SocialLinksComponent { ...props } socialLinks={ HEADER_SOCIAL_LINKS }/>)\r\n                    }/>\r\n                    <Route path='/' render={\r\n                        props => (<PlayerComponent { ...props } playerType={ PlayerTypes.Header }/>)\r\n                    }/>\r\n                </Switch>\r\n                <p className='donate'>{ DONATE }</p>\r\n                <div className='search-icon'>\r\n                    <Icon icon={ bxSearch } width='1.8em' color='white'/>\r\n                </div>\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n  \r\nexport default withRouter(Header);","import React from 'react'\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { Icon } from '@iconify/react';\r\nimport crossIcon from '@iconify/icons-gridicons/cross';\r\n\r\nimport './Menu.css'\r\n\r\n\r\nconst PAGES = [\r\n    'News',\r\n    'Shows',\r\n    'Schedule',\r\n    'About'\r\n];\r\n\r\ninterface MenuParameters {\r\n    menuRef: React.RefObject<HTMLDivElement>;\r\n    wrapperRef: React.RefObject<HTMLDivElement>;\r\n    toggleMenu: () => void;\r\n}\r\n\r\nfunction Menu({ menuRef, wrapperRef, toggleMenu }: MenuParameters) {\r\n\r\n    const buildMenuItem = (title: string) => {\r\n        const route = `/${ title.toLowerCase() }`;\r\n\r\n        return (\r\n            <li className='menu-item' key={ title }>\r\n                <Link to={ route } onClick={ toggleMenu }>{ title }</Link>\r\n            </li>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className='wrapper' ref={ wrapperRef } onClick={ toggleMenu } />\r\n            <nav ref={ menuRef }>\r\n                <div className='close-button-container'>\r\n                    <button \r\n                        className='close-button'\r\n                        onClick={ toggleMenu }\r\n                    >\r\n                        <Icon icon={ crossIcon } width={ 48 } height={ 48 }/>    \r\n                    </button>\r\n                </div>\r\n                <div className='menu-items-container'>\r\n                    <ul className='menu-items'>\r\n                        { PAGES.map(title => buildMenuItem(title)) }\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n        </>     \r\n    );\r\n  }\r\n  \r\n  export default Menu","import React from 'react'\r\n\r\nimport Menu from '../Menu';\r\n\r\nimport './MenuButton.css'\r\n\r\n\r\nconst MENU = 'menu';\r\n\r\nfunction MenuButton() {\r\n    const menuRef = React.createRef<HTMLDivElement>()\r\n    const wrapperRef = React.createRef<HTMLDivElement>()\r\n    \r\n    const toggleMenu = () => {\r\n        wrapperRef.current?.classList.toggle('wrapper-show');\r\n        menuRef.current?.classList.toggle('menu-open');\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Menu menuRef={ menuRef } wrapperRef={ wrapperRef } toggleMenu={ toggleMenu }/>\r\n            <div className='menuButton' onClick={ toggleMenu }>\r\n                <p className='label'>{ MENU }</p>\r\n            </div>\r\n        </>\r\n    );\r\n  }\r\n  \r\n  export default MenuButton","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { ShowCard } from '../interfaces';\r\n\r\nimport './ShowCardComponent.css';\r\n\r\ninterface ShowCardParameters {\r\n    showCard: ShowCard\r\n}\r\n\r\nfunction ShowCardComponent({ showCard }: ShowCardParameters) {\r\n    const {\r\n        excerpt,\r\n        showCover,\r\n        slug,\r\n        title,\r\n    } = showCard;\r\n\r\n    const route = `/shows/${ slug }`;\r\n\r\n    return (\r\n        <Link to={ route }>\r\n            <div className=\"show-card\">\r\n                <img src={ showCover.url } loading='lazy' alt={ showCover.alternativeText }/>\r\n                <h2>{ title }</h2>\r\n                <p>{ excerpt }</p>\r\n            </div>    \r\n        </Link>\r\n    );\r\n}\r\n  \r\nexport default ShowCardComponent;","export const BACKEND_URL = 'https://radioplato-api.herokuapp.com';","import React, { Component } from 'react';\r\n\r\nimport ShowCardComponent from './ShowCardComponent/ShowCardComponent';\r\n\r\nimport { ShowDto, ShowCard } from './interfaces';\r\nimport { BACKEND_URL } from '../shared/constants';\r\n\r\nimport './ShowListComponent.css';\r\n\r\n\r\nexport class ShowListComponent extends Component {\r\n    state = {\r\n        showCards: []\r\n    }\r\n\r\n    parseShowCard (showDto: ShowDto): ShowCard {\r\n        return {\r\n            excerpt: showDto.Excerpt,\r\n            showCover: {\r\n                alternativeText: showDto.ShowCover.alternativeText,\r\n                caption: showDto.ShowCover.caption,\r\n                url: showDto.ShowCover.url\r\n            },\r\n            slug: showDto.Slug,\r\n            title: showDto.Title\r\n        };\r\n    }\r\n\r\n    fetchShows () {\r\n        fetch(`${ BACKEND_URL }/shows`)\r\n            .then(response => response.json())\r\n            .then(data => data.map((datum: ShowDto) => this.parseShowCard(datum)))\r\n            .then(showCards => this.setState({ showCards }));\r\n    }\r\n\r\n    renderShowCards (showCards: ShowCard[]) {\r\n        return showCards.map(showCard => (<ShowCardComponent key={ showCard.slug } showCard={ showCard }></ShowCardComponent>))\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.fetchShows();\r\n    }\r\n\r\n    render () {\r\n        const {\r\n            showCards\r\n        } = this.state;\r\n\r\n        return (\r\n            <div className=\"show-list\">\r\n                <h1>Shows</h1>\r\n                <div className=\"show-cards\">\r\n                    { this.renderShowCards(showCards) }\r\n                </div>\r\n            </div>\r\n            \r\n        );\r\n    }\r\n}\r\n  \r\nexport default ShowListComponent;","import React, { Component } from 'react';\r\n\r\nimport './ShowEpisodesComponent.css';\r\nimport { ShowEpisode } from '../interfaces';\r\n\r\n\r\ninterface ShowEpisodesProperties {\r\n    slug: string;\r\n}\r\n\r\nexport class ShowEpisodesComponent extends Component<ShowEpisodesProperties> {\r\n    state = {\r\n        showEpisodes: []\r\n    }\r\n\r\n    parseShowEpisode (datum: any): ShowEpisode {\r\n        return {\r\n            title: datum.name,\r\n            image: datum.pictures[\"1024wx1024h\"],\r\n            url: datum.url,\r\n            date: datum.created_time,\r\n            slug: datum.slug\r\n        }\r\n    }\r\n\r\n    parseShowEpisodes (playlistDto: any): ShowEpisode[] | null {\r\n        if (!playlistDto || !playlistDto.data || !playlistDto.data.length) {\r\n            return null;\r\n        }\r\n        \r\n        return playlistDto.data.map((datum: any) => this.parseShowEpisode(datum));\r\n    }\r\n\r\n    fetchPlaylist () {\r\n        const { slug } = this.props;\r\n        \r\n        fetch(`https://api.mixcloud.com/radioplato/playlists/${ slug }/cloudcasts/`)\r\n            .then(response => response.json())\r\n            .then(playlist => this.parseShowEpisodes(playlist)?.reverse().slice(0, 9))\r\n            .then(showEpisodes => this.setState({ showEpisodes }));\r\n    }\r\n\r\n    renderShowEpisode (episode: ShowEpisode) {\r\n        const key = `${ episode.slug }-${ new Date().getTime() }`;\r\n        const date = new Date(episode.date).toISOString().slice(0,10).split(\"-\").reverse().join(\".\");\r\n\r\n        return (\r\n            <a key={ key } href={ episode.url }>\r\n                <div className=\"episode-container\">\r\n                    <img className=\"episode-image\" src={ episode.image } alt={ episode.title }/>\r\n                    <div className=\"episode-information\">\r\n                        <h3>{ episode.title }</h3>\r\n                        <p>{ date }</p>\r\n                    </div>\r\n                </div>\r\n            </a>\r\n        );\r\n    }\r\n\r\n    renderShowEpisodes (episodes: ShowEpisode[]) {\r\n        return episodes ? (\r\n            <>\r\n                <h2>Latest Episodes</h2>\r\n                <div className=\"episode-cards\">\r\n                    { episodes.map(episode => this.renderShowEpisode(episode)) }\r\n                </div>\r\n            </>\r\n        ) : null;\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.fetchPlaylist();\r\n    }\r\n\r\n    render () {\r\n        const {\r\n            showEpisodes\r\n        } = this.state;\r\n\r\n        return (\r\n            <div className=\"episode-list\">\r\n                { this.renderShowEpisodes(showEpisodes) }\r\n            </div>\r\n            \r\n        );\r\n    }\r\n}\r\n  \r\nexport default ShowEpisodesComponent;","import React, { Component } from 'react';\r\n\r\nimport SocialLinksComponent from '../../shared/SocialLinksComponent/SocialLinksComponent';\r\nimport ShowEpisodesComponent from '../ShowEpisodesComponent/ShowEpisodesComponent';\r\n\r\nimport { BACKEND_URL } from '../../shared/constants';\r\nimport { ShowDto, Show } from '../interfaces';\r\n\r\nimport './ShowComponent.css';\r\n\r\n\r\ninterface ShowComponentProperties {\r\n    slug: string;\r\n}\r\n\r\ninterface ShowComponentState {\r\n    show: Show | null\r\n}\r\n\r\nexport class ShowComponent extends Component<ShowComponentProperties> {\r\n    state: ShowComponentState = {\r\n        show: null\r\n    }\r\n\r\n    parseShow(showDto: ShowDto): Show | null {\r\n        return showDto ? {\r\n            description: showDto.Description,\r\n            showCover: {\r\n                alternativeText: showDto.ShowCover.alternativeText,\r\n                caption: showDto.ShowCover.caption,\r\n                url: showDto.ShowCover.url\r\n            },\r\n            title: showDto.Title,\r\n            showLinks: {\r\n                mixcloud: showDto.ShowLink.mixcloud,\r\n                spotify: showDto.ShowLink.spotify,\r\n                itunes: showDto.ShowLink.itunes,\r\n                castbox: showDto.ShowLink.castbox,\r\n                facebook: showDto.ShowLink.facebook,\r\n                vk: showDto.ShowLink.vk,\r\n                instagram: showDto.ShowLink.instagram,\r\n                telegram: showDto.ShowLink.telegram, \r\n            }\r\n        } : null\r\n    }\r\n\r\n    fetchShow () {\r\n        const { slug } = this.props;\r\n\r\n        fetch(`${ BACKEND_URL }/shows?Slug=${ slug }`)\r\n            .then(response => response.json())\r\n            .then((data: ShowDto[]) => this.parseShow(data[0]))\r\n            .then(show => this.setState({ show }));\r\n    }\r\n    \r\n\r\n    componentDidMount () {\r\n        this.fetchShow();\r\n    }\r\n\r\n    render () {\r\n        const { show } = this.state;\r\n        const { slug } = this.props;\r\n        const imageSrc = show ? show.showCover.url : '';\r\n\r\n        return show ? (\r\n            <article className=\"show\">\r\n                <div className=\"show-description\">\r\n                    <div className=\"information\">\r\n                        <h1>{ show.title }</h1>\r\n                        <p>{ show.description }</p>\r\n                        <SocialLinksComponent socialLinks={ show.showLinks }/>\r\n                    </div>\r\n                    <div className=\"show-cover\">\r\n                        <img src={ imageSrc } loading='lazy' alt={ show.showCover.alternativeText }/>\r\n                    </div>\r\n                </div>\r\n                <ShowEpisodesComponent slug={ slug } />\r\n            </article>\r\n        ) : null;\r\n    }\r\n}\r\n  \r\nexport default ShowComponent;","import React, { Component } from 'react';\r\n\r\nimport { BACKEND_URL } from '../shared/constants';\r\nimport { AboutDto, About } from '../about/interfaces';\r\n\r\nimport './About.css';\r\n\r\ninterface AboutComponentState {\r\n    about: About | null\r\n}\r\n\r\nexport class AboutComponent extends Component {\r\n    state: AboutComponentState = {\r\n        about: null\r\n    }\r\n\r\n    parseAbout(aboutDto: AboutDto): About | null {\r\n        return aboutDto ? {\r\n            title: aboutDto.Title,\r\n            description: aboutDto.Content,\r\n            aboutCover: {\r\n                alternativeText: aboutDto.Image.alternativeText,\r\n                caption: aboutDto.Image.caption,\r\n                url: aboutDto.Image.url\r\n            }\r\n        } : null\r\n    }\r\n\r\n    fetchAbout () {\r\n        fetch(`${ BACKEND_URL }/about`)\r\n            .then(response => response.json())\r\n            .then((data: AboutDto) => this.parseAbout(data))\r\n            .then(about => this.setState({ about }));\r\n    }\r\n\r\n\r\n    componentDidMount () {\r\n        this.fetchAbout();\r\n    }\r\n\r\n    render () {\r\n        const { about } = this.state;\r\n        const imageSrc = about ? about.aboutCover.url : '';\r\n\r\n\r\n        return about ? (\r\n            <article className=\"about\">\r\n                <div className=\"information\">\r\n                    <h1>{ about.title }</h1>\r\n                    <p>{ about.description }</p>\r\n                </div>\r\n                <div className=\"image\">\r\n                    <img src={ imageSrc } loading='lazy' alt={ about.aboutCover.alternativeText }/>\r\n                </div>\r\n            </article>\r\n        ) : null;\r\n    }\r\n}\r\n\r\nexport default AboutComponent;","import React from 'react'\r\n\r\nimport { ScheduleShow } from './interfaces'\r\n\r\nimport './ScheduleShowline.css'\r\n\r\n\r\ninterface ScheduleShowlineProperties {\r\n    showline: ScheduleShow\r\n}\r\n\r\nfunction ScheduleShowline({ showline }: ScheduleShowlineProperties) {\r\n    const {\r\n        title,\r\n        description,\r\n        link,\r\n        startTime,\r\n        endTime\r\n    } = showline;\r\n    const interval = `${ startTime.slice(0, 5) } - ${ endTime.slice(0, 5) }`;\r\n    const href = link ? link : \"#\";\r\n\r\n    return (\r\n        <a href={ href }>\r\n            <div className='show-title-container'>\r\n                <div className='show-date'>\r\n                    <p>{ interval }</p>\r\n                </div>\r\n                <div className='show-title'>\r\n                    <p>{ title }</p>\r\n                </div>\r\n                <div className='show-desc'>\r\n                    <p>{ description }</p>\r\n                </div>\r\n            </div>\r\n        </a>\r\n    )\r\n  }\r\n  export default ScheduleShowline ","import React, { Component } from 'react'\r\nimport moment from 'moment';\r\n\r\nimport ScheduleShowline from './ScheduleShowline'\r\nimport { ScheduleShow, ScheduleDto } from './interfaces';\r\nimport { BACKEND_URL } from '../shared/constants';\r\nimport './Schedule.css'\r\n\r\n\r\nenum IndexesOfDay {\r\n    Monday = 0,\r\n    Tuesday,\r\n    Wednesday,\r\n    Thursday,\r\n    Friday,\r\n    Saturday,\r\n    Sunday\r\n};\r\n\r\nenum PeriodicityTypes {\r\n    SingleTime = \"SingleTime\",\r\n    Daily = \"Daily\",\r\n    Weekly = \"Weekly\",\r\n    BiWeekly = \"BiWeekly\",\r\n    EveryThirdWeek = \"Every3rdWeek\",\r\n    Monthly = \"Monthly\"\r\n}\r\n\r\nconst indexByDayName = new Map([\r\n    [ \"Monday\", IndexesOfDay.Monday ],\r\n    [ \"Tuesday\", IndexesOfDay.Tuesday ],\r\n    [ \"Wednesday\", IndexesOfDay.Wednesday ],\r\n    [ \"Thursday\", IndexesOfDay.Thursday ],\r\n    [ \"Friday\", IndexesOfDay.Friday ],\r\n    [ \"Saturday\", IndexesOfDay.Saturday ],\r\n    [ \"Sunday\", IndexesOfDay.Sunday ],\r\n]);\r\n\r\nconst DAYS_OF_WEEK = [\r\n    \"MON\",\r\n    \"TUE\",\r\n    \"WED\",\r\n    \"THU\",\r\n    \"FRI\",\r\n    \"SAT\",\r\n    \"SUN\"\r\n];\r\n\r\nconst SCHEDULE = \"SCHEDULE\";\r\n\r\nclass Schedule extends Component {\r\n    state = {\r\n        schedule: [ [], [], [], [], [], [], [] ],\r\n        selectedDay: moment().isoWeekday() - 1\r\n    };\r\n\r\n    scheduleShowlineBuilder = (showline: ScheduleShow) => {\r\n        return (\r\n            <ScheduleShowline \r\n                showline={ showline }\r\n            />\r\n        );\r\n    }\r\n\r\n    async componentDidMount () {\r\n        await this.fetchSchedules();\r\n    }\r\n\r\n    async fetchSchedules () {\r\n        await fetch(`${ BACKEND_URL }/schedules`)\r\n            .then(response => response.json())\r\n            .then(data => [].concat(...data.map((datum: ScheduleDto) => this.parseScheduleLine(datum))))\r\n            .then(scheduleShows => this.organizeSchedule(scheduleShows));\r\n    }\r\n\r\n    parseScheduleLine (scheduleDto: ScheduleDto): ScheduleShow[] {\r\n        return scheduleDto.OnAirDateTime.map(onAirDateTime => {\r\n            const weekdays = [];\r\n\r\n            for (const [ key, value ] of Object.entries(onAirDateTime)) {\r\n                const dayIndex = indexByDayName.get(key);\r\n                \r\n                value && dayIndex !== undefined && weekdays.push(dayIndex);\r\n            }\r\n    \r\n            return {\r\n                title: scheduleDto.Title,\r\n                description: scheduleDto.Description,\r\n                type: scheduleDto.Type,\r\n                hide: scheduleDto.Hide,\r\n                link: scheduleDto.Link,\r\n                startDate: onAirDateTime.StartDate,\r\n                startTime: onAirDateTime.StartTime,\r\n                endDate: onAirDateTime.EndDate,\r\n                endTime: onAirDateTime.EndTime,\r\n                periodicity: onAirDateTime.Periodicity,\r\n                weekdays\r\n            };\r\n        });\r\n    }\r\n\r\n    organizeSchedule (scheduleShows: ScheduleShow[]) {\r\n        const schedule: ScheduleShow[][]  = [];\r\n\r\n        for (let day = IndexesOfDay.Monday; day <= IndexesOfDay.Sunday; day++) {\r\n            schedule[day] = [];\r\n\r\n            scheduleShows.forEach(show => {\r\n                this.shouldShowBeOnAir(show, day) && schedule[day].push(show)\r\n            });\r\n\r\n            schedule[day].sort(this.sortShowsByDate);\r\n        }\r\n\r\n        this.setState({\r\n            schedule\r\n        });\r\n    }\r\n\r\n    sortShowsByDate (first: ScheduleShow, second: ScheduleShow) {\r\n        return +first.startTime.slice(0, 2) - +second.startTime.slice(0, 2);\r\n    }\r\n\r\n    shouldShowBeOnAir (show: ScheduleShow, day: IndexesOfDay): boolean {\r\n        if (show.hide) {\r\n            return false;\r\n        }\r\n\r\n        const showStartDate = moment(show.startDate);\r\n        const dateOfDay = moment().add(moment().isoWeekday() - day + 1, 'days');\r\n        const weeksPassed = +(moment().week() - showStartDate.week());\r\n\r\n        switch (show.periodicity) {\r\n            case PeriodicityTypes.Daily: \r\n                return show.weekdays.includes(day);\r\n            case PeriodicityTypes.Weekly:\r\n                return show.weekdays.includes(day);\r\n            case PeriodicityTypes.BiWeekly:\r\n                return show.weekdays.includes(day) && weeksPassed % 2 === 0;\r\n            case PeriodicityTypes.EveryThirdWeek:\r\n                return show.weekdays.includes(day) && weeksPassed % 3 === 0;\r\n            case PeriodicityTypes.SingleTime:\r\n                return showStartDate.startOf('day').isSame(dateOfDay.startOf('day'));\r\n            default: return false;\r\n        }\r\n    }\r\n\r\n    selectDay = (day: IndexesOfDay) => {\r\n        this.setState({\r\n            selectedDay: day\r\n        });\r\n    };\r\n\r\n    renderButtons = () => {\r\n        const { selectedDay } = this.state;\r\n\r\n        return DAYS_OF_WEEK.map((day, index) => (\r\n            <button className={ `schedule-day-button ${ selectedDay === index ? \"active\" : \"\"}` }\r\n                    onClick={ () => this.selectDay(index) }\r\n            >\r\n                { day }\r\n            </button>\r\n        ))\r\n    }\r\n\r\n    renderDailySchedule = () => {\r\n        const {\r\n            schedule,\r\n            selectedDay\r\n        } = this.state;\r\n\r\n        return schedule[selectedDay].length ?\r\n            schedule[selectedDay].map((playlistShow: ScheduleShow) => this.scheduleShowlineBuilder(playlistShow)) :\r\n            [];\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div className='schedule-container'>\r\n                <div className='schedule-headline-container'>        \r\n                    <div className='schedule-title'>\r\n                        <p>{ SCHEDULE }</p>\r\n                    </div>\r\n                    <div className='schedule-day'>\r\n                        { this.renderButtons() }\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    { this.renderDailySchedule() }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n  \r\nexport default Schedule","import React from 'react';\r\n\r\nimport {\r\n    Switch,\r\n    Route,\r\n    withRouter,\r\n} from 'react-router-dom';\r\n\r\nimport ShowListComponent from '../shows/ShowListComponent';\r\nimport ShowComponent from '../shows/ShowComponent/ShowComponent';\r\nimport AboutComponent from '../about/About';\r\nimport Schedule from '../schedule/Schedule';\r\n\r\nimport './Content.css';\r\n\r\nconst SCHEDULE = '/schedule';\r\nconst SHOWS = '/shows';\r\nconst NEWS = '/news';\r\nconst ABOUT = '/about';\r\n\r\n\r\nfunction Content() {\r\n    const news = () => (<div>{ NEWS }</div>);\r\n\r\n    return (\r\n        <Switch>\r\n            <Route exact path=\"/\" component={ Schedule }/>\r\n            <Route exact path={ SCHEDULE } component={ Schedule }/>\r\n            <Route exact path={ SHOWS } component={ ShowListComponent }/>\r\n            <Route path={ `${ SHOWS }/:slug` } component={(routerProps: any) => <ShowComponent slug={routerProps.match.params.slug}/>}/>\r\n            <Route exact path={ NEWS } component={ news }/>\r\n            <Route exact path={ ABOUT } component={ AboutComponent }/>\r\n        </Switch>\r\n    );\r\n  }\r\n  \r\n  export default withRouter(Content);","import React from 'react'\r\n\r\nimport {\r\n    Switch,\r\n    Route,\r\n    withRouter,\r\n} from 'react-router-dom';\r\n\r\nimport MenuButton from '../menu/menu-button/MenuButton'\r\nimport PlayerComponent from '../shared/Player/PlayerComponent/PlayerComponent'\r\nimport Content from '../content/Content'\r\nimport { PlayerTypes } from '../shared/enums';\r\n\r\nimport './Main.css'\r\n\r\n\r\n\r\nfunction Main() {\r\n    return (\r\n        <main>\r\n            <MenuButton />\r\n            <Switch>\r\n                <Route exact path='/' render={\r\n                    props => <PlayerComponent { ...props } playerType={ PlayerTypes.Main }/>\r\n                }/>\r\n            </Switch>\r\n            <Content />         \r\n        </main>\r\n    );\r\n}\r\n  \r\nexport default withRouter(Main);","import React, { Component } from 'react';\r\nimport ReactPlayer from 'react-player';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { playerService } from './PlayerService';\r\nimport { PlayerState } from './interfaces';\r\nimport { DEFAULT_PLAYER_STATE, STREAM_URL } from './constants';\r\n\r\nimport './Player.css';\r\n\r\nexport class Player extends Component {\r\n    state = DEFAULT_PLAYER_STATE;\r\n    subscription: Subscription | null = null;\r\n    \r\n    componentDidMount () {\r\n        this.subscribeOnPlayerStateChange();\r\n    }\r\n\r\n    subscribeOnPlayerStateChange () {\r\n        this.subscription = playerService.subscribeOnPlayerStateChanges(\r\n            (data: PlayerState) => this.setState(data)\r\n        );\r\n    }\r\n\r\n    componentWillUnmount () {\r\n        this.subscription?.unsubscribe();\r\n    }\r\n\r\n    render () {\r\n        const {\r\n            playing,\r\n            muted,\r\n            volume\r\n        } = this.state;\r\n\r\n        return (\r\n            <div className='audio'>\r\n                <ReactPlayer\r\n                    url={ STREAM_URL }\r\n                    playing={ playing }\r\n                    muted={ muted }\r\n                    volume={ volume }\r\n                    config={{\r\n                        file: {\r\n                            forceAudio: true\r\n                        }\r\n                    }}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Player;","import React from 'react';\r\n\r\nimport {\r\n    BrowserRouter as Router,\r\n} from 'react-router-dom';\r\n\r\nimport Header from './components/header/Header';\r\nimport Main from './components/main/Main';\r\nimport Player from './components/shared/Player/Player';\r\n\r\nimport './App.css';\r\n\r\n\r\nfunction App() {\r\n    return (\r\n        <Router>\r\n            <Header />\r\n            <Main />\r\n            <Player />\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}