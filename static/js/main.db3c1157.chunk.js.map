{"version":3,"sources":["components/menu/Menu.tsx","components/menu/menu-button/MenuButton.tsx","components/shared/interfaces.ts","components/shared/SocialLinksComponent/SocialLinksComponent.tsx","components/shared/enums.ts","components/shared/Player/constants.ts","components/shared/Player/PlayerService.ts","components/shared/Player/PlayerControls/PlayButton/PlayButton.tsx","components/shared/Player/PlayerControls/VolumeControls/VolumeControls.tsx","components/shared/Player/PlayerComponent/PlayerComponent.tsx","components/header/Header.tsx","components/shared/wrappers/seo/Seo.tsx","components/shared/schedule/enums.ts","components/shared/constants.ts","components/gallery/GalleryService.ts","components/shared/schedule/ScheduleService.ts","components/gallery/GalleryComponent.tsx","components/news/NewsCardComponent/NewsCardComponent.tsx","components/news/constants.ts","components/advertisement/AdService.ts","components/news/NewsListComponent.tsx","components/shared/schedule/ScheduleShowline.tsx","components/shared/schedule/ScheduleComponent.tsx","components/shared/wrappers/scrollable/Scrollable.tsx","components/start-page/StartPageComponent.tsx","components/shows/ShowCardComponent/ShowCardComponent.tsx","components/shows/ShowListComponent.tsx","components/shows/ShowEpisodesComponent/ShowEpisodesComponent.tsx","components/shows/ShowComponent/ShowComponent.tsx","components/advertisement/AdComponent/AdComponent.tsx","components/news/News/NewsComponent.tsx","components/about/About.tsx","components/donate/Donate.tsx","components/content/Content.tsx","components/main/Main.tsx","components/shared/Player/Player.tsx","App.tsx","index.tsx"],"names":["PAGES","Menu","menuRef","wrapperRef","toggleMenu","device","isMobileOnly","className","ref","onClick","aria-label","icon","crossIcon","width","height","map","title","route","toLowerCase","key","to","buildMenuItem","MenuButton","Socials","useState","isOpened","changeMenuStatus","React","createRef","bodyOverflow","current","classList","toggle","document","body","style","overflow","menuIcon","color","SOCIAL_ICONS","Map","Mixcloud","mixcloudIcon","Spotify","spotifyIcon","Itunes","itunesIcon","Castbox","castboxIcon","Facebook","facebookIcon","Vk","vkIcon","Email","mailRu","Instagram","instagramIcon","Telegram","telegramIcon","GooglePlay","googlePlay","SocialLinksComponent","PlayerTypes","NewsListTypes","socialLinks","linkElements","Object","entries","entry","service","href","Date","getTime","get","target","rel","buildSocialLink","DEFAULT_PLAYER_STATE","playing","muted","volume","playerService","state","playerState","track","playerStateSubject","trackNameSubject","this","Subject","updateTrackName","setInterval","bind","onNext","subscribe","data","fetch","response","json","trackName","icestats","source","next","isPlaying","volumeLevel","isMuted","PlayButton","playerType","setPlayingMode","renderIcon","size","Main","pauseIcon","playIcon","FullVolumeIcon","bxsVolumeFull","MuteVolumeIcon","bxsVolumeMute","VolumeControls","setVolumeMode","ReactSlider","thumbClassName","trackClassName","defaultValue","value","Math","trunc","sliderDefaultValue","onChange","changeVolume","PlayerComponent","subscription","subscribeOnPlayerStateChange","setState","subscribeOnTrackNameChanges","props","isMainPlayer","renderMainPlayer","renderHeaderPlayer","renderPlayer","PureComponent","HEADER_SOCIAL_LINKS","mixcloud","facebook","vk","email","instagram","telegram","withRouter","exact","path","render","Header","Seo","meta","description","slice","property","content","thumbnail","name","IndexesOfDay","BACKEND_URL","BASIC_SEO_IMG","galleryService","indexGallery","gallerySubject","fetchIndexGallery","then","parseIndexGallery","updateIndexGallery","dto","photoExhibition","PhotoExhibition","photoExhibitionAuthor","PhotoExhibitionAuthor","photoExhibitionDescription","PhotoExhibitionDescription","photoExhibitionLink","PhotoExhibitionLink","photoExhibitionMedia","PhotoExhibitionMedia","imageDto","mapImageDto","photoExhibitionTitle","PhotoExhibitionTitle","regularGallery","RegularGallery","video","Video","videoEmbedCode","VideoEmbedCode","alternativeText","caption","url","gallery","PeriodicityTypes","indexByDayName","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday","scheduleService","_schedule","_currentShow","scheduleSubject","currentShowSubject","fetchSchedules","updateCurrentShow","weekday","moment","isoWeekday","currentDate","toISOString","substr","schedule","find","showline","type","isBetween","startTime","start","endTime","end","concat","datum","parseScheduleLine","scheduleShows","organizeSchedule","OnAirDateTime","onAirDateTime","weekdays","dayIndex","undefined","push","Title","Description","Type","hide","Hide","link","Link","startDate","StartDate","StartTime","endDate","EndDate","EndTime","periodicity","Periodicity","image","ShowImg","day","forEach","show","shouldShowBeOnAir","sort","sortShowsByDate","first","second","showStartDate","dateOfDay","add","weeksPassed","week","Daily","Weekly","includes","BiWeekly","EveryThirdWeek","SingleTime","startOf","isSame","GalleryComponent","subscribeOnGalleryChange","subscribeOnGalleryChanges","unsubscribe","showArrows","showStatus","showThumbs","showIndicators","autoPlay","infiniteLoop","interval","photo","src","alt","currentShow","graphicContentSelection","Component","LinkElement","newsCard","children","slug","category","TagElement","tag","NewsCardComponent","AdPlacements","excerpt","newsCover","loading","adService","_advertisements","advertisementsSubject","newsCardAdSubject","newsPostAdSubject","fetchAdvertisements","parseAdvertisements","advertisements","updateAdvertisements","ad","placement","isBefore","isActive","AdActive","AdEnd","AdImage","AdLink","AdPlacement","AdStart","text","AdText","AdTitle","ads","getSpecificAdvertisementByType","NewsList","NewsPost","NewsListComponent","advertisement","newsCards","page","handleScroll","event","scrollHeight","scrollTop","fetchNews","newsDto","Excerpt","Category","PostCover","Slug","publishDate","PublishDate","diff","length","cards","sortCardsByDate","filter","toUpperCase","parseNewsCard","handleResponse","adNewsCard","advertisementToNewsCard","onScroll","Full","renderFullNewsList","renderSimpleNewsList","subscribeOnAdvertisementChange","subscribeOnNewsCardAdUpdate","renderNewsCards","ScheduleShowline","DAYS_OF_WEEK","ScheduleComponent","selectedDay","scheduleShowlineBuilder","selectDay","renderButtons","index","renderDailySchedule","playlistShow","subscribeOnScheduleChange","subscribeOnScheduleChanges","SchedulePageComponent","withSeo","StartPageComponent","Simple","ShowCardComponent","showCard","showCover","ShowListComponent","showCards","showDto","ShowCover","parseShowCard","fetchShows","renderShowCards","ShowEpisodesComponent","showEpisodes","pictures","date","created_time","playlistDto","parseShowEpisode","playlist","parseShowEpisodes","reverse","episode","split","join","episodes","renderShowEpisode","fetchPlaylist","renderShowEpisodes","ShowComponent","showLinks","ShowLink","spotify","itunes","castbox","parseShow","fetchShow","imageSrc","AdComponent","NewsComponent","news","Content","wordsBy","WordsBy","photosBy","PhotosBy","parseNews","subscribeOnNewsPostAdUpdate","imageStyle","backgroundRepeat","backgroundAttachment","backgroundSize","backgroundImage","format","escapeHtml","AboutComponent","about","aboutDto","aboutCover","Image","parseAbout","fetchAbout","DonateComponent","donate","donateDto","donateCover","parseDonate","fetchDonate","component","routerProps","match","params","Player","subscribeOnPlayerStateChanges","config","file","forceAudio","App","basename","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.db3c1157.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { isMobileOnly } from 'react-device-detect';\r\n\r\nimport { Icon } from '@iconify/react';\r\nimport crossIcon from '@iconify/icons-gridicons/cross';\r\n\r\nimport './Menu.css'\r\n\r\n\r\nconst PAGES = [\r\n    'News',\r\n    'Shows',\r\n    'Schedule',\r\n    'About'\r\n];\r\n\r\ninterface MenuParameters {\r\n    menuRef: React.RefObject<HTMLDivElement>;\r\n    wrapperRef: React.RefObject<HTMLDivElement>;\r\n    toggleMenu: () => void;\r\n}\r\n\r\nfunction Menu({ menuRef, wrapperRef, toggleMenu }: MenuParameters) {\r\n    const device = isMobileOnly ? 'mobile' : 'desktop';\r\n\r\n    const buildMenuItem = (title: string) => {\r\n        const route = `/${ title.toLowerCase() }`;\r\n\r\n        return (\r\n            <li className='menu-item' key={ title }>\r\n                <Link to={ route } onClick={ toggleMenu }>{ title }</Link>\r\n            </li>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={`wrapper ${ device }`} ref={ wrapperRef } onClick={ toggleMenu } />\r\n            <nav ref={ menuRef } className={ device }>\r\n                <div className='close-button-container'>\r\n                    <button \r\n                        className='close-button'\r\n                        aria-label='Close menu button'\r\n                        onClick={ toggleMenu }\r\n                    >\r\n                        <Icon icon={ crossIcon } width={ 48 } height={ 48 }/>    \r\n                    </button>\r\n                </div>\r\n                <div className='menu-items-container'>\r\n                    <ul className='menu-items'>\r\n                        { PAGES.map(title => buildMenuItem(title)) }\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n        </>     \r\n    );\r\n  }\r\n  \r\n  export default Menu","import React, { useState } from 'react'\r\n\r\nimport { isMobileOnly } from 'react-device-detect';\r\n\r\nimport { Icon } from '@iconify/react';\r\nimport menuIcon from '@iconify/icons-gridicons/menu';\r\n\r\nimport Menu from '../Menu';\r\n\r\nimport './MenuButton.css'\r\n\r\n\r\nconst MENU = 'menu';\r\n\r\nfunction MenuButton() {\r\n    const [ isOpened, changeMenuStatus ] = useState(true);\r\n\r\n    const menuRef = React.createRef<HTMLDivElement>()\r\n    const wrapperRef = React.createRef<HTMLDivElement>()\r\n    \r\n    const toggleMenu = () => {\r\n        const bodyOverflow = isOpened ? 'hidden' : 'unset';\r\n        \r\n        wrapperRef.current?.classList.toggle('wrapper-show');\r\n        menuRef.current?.classList.toggle('menu-open');\r\n        document.body.style.overflow = bodyOverflow;\r\n        changeMenuStatus(!isOpened);\r\n    }\r\n\r\n    const renderAsideButton = () => {\r\n        return (\r\n            <div className='menu-button-aside' onClick={ toggleMenu }>\r\n                <p className='label'>{ MENU }</p>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const renderHeaderButton = () => {\r\n        return (\r\n            <div className='menu-button-header' onClick={ toggleMenu }>\r\n                <Icon icon={ menuIcon } color='white' width={ 40 } height={ 40 }/>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Menu menuRef={ menuRef } wrapperRef={ wrapperRef } toggleMenu={ toggleMenu }/>\r\n            { isMobileOnly ? renderHeaderButton() : renderAsideButton() }\r\n        </>\r\n    );\r\n  }\r\n  \r\n  export default MenuButton","export enum Socials {\r\n    Castbox = 'castbox',\r\n    Itunes = 'itunes',\r\n    Mixcloud = 'mixcloud',\r\n    Spotify = 'spotify',\r\n    Facebook = 'facebook',\r\n    Vk = 'vk',\r\n    Email = 'email',\r\n    Instagram = 'instagram',\r\n    Telegram = 'telegram',\r\n    GooglePlay = 'googlePlay',  \r\n}\r\n\r\nexport type SocialLinks = {\r\n    [key in Socials]?: string;\r\n}\r\n\r\nexport interface StrapiObjectDto {\r\n    createdAt: string;\r\n    id: string;\r\n    updatedAt: string;\r\n    __v: number;\r\n    _id: number;\r\n}\r\n\r\nexport interface ImageDto {\r\n    ext: string;\r\n    hash: string;\r\n    height: number;\r\n    mime: string;\r\n    size: number;\r\n    url: string;\r\n    width: number;\r\n}\r\n\r\nexport interface FormatsDto {\r\n    thumbnail?: ImageDto;\r\n}\r\n\r\nexport interface CoverDto extends StrapiObjectDto, ImageDto {\r\n    alternativeText: string;\r\n    caption: string;\r\n    formats: FormatsDto;\r\n    name: string;\r\n    provider: string;\r\n    related: string[];\r\n}\r\n\r\nexport interface SimpleImage {\r\n    alternativeText?: string;\r\n    caption?: string;\r\n    url?: string;\r\n}\r\n","import React from 'react'\r\n\r\nimport { Icon } from '@iconify/react';\r\nimport mixcloudIcon from '@iconify/icons-cib/mixcloud';\r\nimport spotifyIcon from '@iconify/icons-cib/spotify';\r\nimport itunesIcon from '@iconify/icons-ps/itunes';\r\nimport castboxIcon from '@iconify/icons-simple-icons/castbox';\r\nimport facebookIcon from '@iconify/icons-cib/facebook';\r\nimport vkIcon from '@iconify/icons-cib/vk';\r\nimport mailRu from '@iconify/icons-cib/mail-ru';\r\nimport instagramIcon from '@iconify/icons-cib/instagram';\r\nimport telegramIcon from '@iconify/icons-cib/telegram';\r\nimport googlePlay from '@iconify/icons-cib/google-play';\r\n\r\nimport { SocialLinks, Socials } from '../interfaces';\r\n\r\nimport './SocialLinksComponent.css'\r\n\r\nconst SOCIAL_ICONS = new Map<string, object>([\r\n    [ Socials.Mixcloud, mixcloudIcon ],\r\n    [ Socials.Spotify, spotifyIcon ],\r\n    [ Socials.Itunes, itunesIcon ],\r\n    [ Socials.Castbox, castboxIcon ],\r\n    [ Socials.Facebook, facebookIcon ],\r\n    [ Socials.Vk, vkIcon ],\r\n    [ Socials.Email, mailRu ],\r\n    [ Socials.Instagram, instagramIcon ],\r\n    [ Socials.Telegram, telegramIcon ],\r\n    [ Socials.GooglePlay, googlePlay ],\r\n]);\r\n\r\ninterface SocialLinksProperties {\r\n    socialLinks: SocialLinks;\r\n}\r\n\r\nfunction buildSocialLink (service: string, href: string | undefined) {\r\n    const key = `${ service }-${ new Date().getTime() }`;\r\n    const icon = SOCIAL_ICONS.get(service);\r\n\r\n    return href && icon ? (\r\n        <a  className='social-link'\r\n            target='_blank'\r\n            key={ key }\r\n            href={ href }\r\n            title={ `A link to ${ service }` }\r\n            aria-label={ `A link to ${ service }` }\r\n            rel='noopener noreferrer'\r\n        >\r\n            <Icon className='social-icon' icon={ icon } width='1.5em' color='white'/>\r\n        </a>\r\n    ) : (null);\r\n}\r\n\r\nfunction SocialLinksComponent({ socialLinks }: SocialLinksProperties) {\r\n    const linkElements = Object.entries(socialLinks).map(entry => buildSocialLink(entry[0], entry[1]));\r\n\r\n    return (\r\n        <div className='social-icons'>\r\n            { linkElements }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SocialLinksComponent;","export enum PlayerTypes {\r\n    Main = 'main',\r\n    Header = 'header'\r\n};\r\n\r\nexport enum NewsListTypes {\r\n    Full = 'full',\r\n    Simple = 'simple'\r\n};","import { PlayerState } from './interfaces';\r\n\r\nexport const STREAM_URL = 'https://radioplato.radioca.st/stream';\r\nexport const DATA_URL = 'https://radioplato.radioca.st/status-json.xsl';\r\n\r\nexport const DATA_REQUEST_INTERVAL = 15000;\r\n\r\nexport const DEFAULT_PLAYER_STATE: PlayerState = {\r\n    playing: false,\r\n    muted: false,\r\n    volume: 1\r\n};\r\n","import { Subject } from 'rxjs'\r\n\r\nimport { PlayerState } from './interfaces';\r\nimport { DEFAULT_PLAYER_STATE, DATA_URL, DATA_REQUEST_INTERVAL } from './constants';\r\n\r\nclass PlayerService {\r\n    private playerState: PlayerState;\r\n    private track = '';\r\n    private playerStateSubject: Subject<PlayerState>;\r\n    private trackNameSubject: Subject<string>;\r\n\r\n    constructor (state: PlayerState) {\r\n        this.playerState = state;\r\n        this.playerStateSubject = new Subject();\r\n        this.trackNameSubject = new Subject();\r\n\r\n        this.updateTrackName();\r\n        setInterval(this.updateTrackName.bind(this), DATA_REQUEST_INTERVAL);\r\n    }\r\n\r\n    set playing (isPlaying: boolean) {\r\n        this.playerState.playing = isPlaying;\r\n        this.playerStateSubject.next(this.playerState);\r\n    }\r\n\r\n    get playing () {\r\n        return this.playerState.playing;\r\n    }\r\n\r\n    set volume (volumeLevel: number) {\r\n        this.playerState.volume = volumeLevel;\r\n        this.playerStateSubject.next(this.playerState);\r\n    }\r\n\r\n    get volume () {\r\n        return this.playerState.volume;\r\n    }\r\n\r\n    set muted (isMuted: boolean) {\r\n        this.playerState.muted = isMuted;\r\n        this.playerStateSubject.next(this.playerState);\r\n    }\r\n\r\n    get muted () {\r\n        return this.playerState.muted;\r\n    }\r\n\r\n    get trackName () {\r\n        return this.track;\r\n    }\r\n\r\n    subscribeOnPlayerStateChanges (onNext: Function) {\r\n        return this.playerStateSubject.subscribe(data => onNext(data));\r\n    }\r\n\r\n    subscribeOnTrackNameChanges (onNext: Function) {\r\n        return this.trackNameSubject.subscribe(data => onNext(data));\r\n    }\r\n\r\n    async updateTrackName () {\r\n        const response = await fetch(DATA_URL);\r\n        const data = await response.json();\r\n        const trackName = data.icestats.source[0].title;\r\n\r\n        if (trackName !== this.track) {\r\n            this.track = trackName;\r\n            this.trackNameSubject.next(this.track);\r\n        }\r\n    }\r\n}\r\n\r\nconst playerService = new PlayerService(DEFAULT_PLAYER_STATE);\r\n\r\nexport { playerService };","import React, { useState } from 'react';\r\n\r\nimport { Icon } from '@iconify/react';\r\nimport playIcon from '@iconify/icons-el/play';\r\nimport pauseIcon from '@iconify/icons-el/pause';\r\n\r\nimport { playerService } from '../../PlayerService';\r\nimport { PlayerProps } from '../../interfaces';\r\nimport { PlayerTypes } from '../../../enums';\r\n\r\nimport './PlayButton.css';\r\n\r\n\r\nconst SMALL_ICON = 10;\r\nconst LARGE_ICON = 35;\r\n\r\nfunction PlayButton({ playerType }: PlayerProps) {\r\n    const [ playing, setPlayingMode ] = useState(playerService.playing);\r\n\r\n    const togglePlayingMode = () => {\r\n        playerService.playing = !playerService.playing;\r\n        setPlayingMode(playerService.playing);\r\n    }\r\n\r\n    const isMainPlayer = () => {\r\n        return playerType === PlayerTypes.Main;\r\n    }\r\n\r\n    const renderIcon = (icon: object) => {\r\n        const size = isMainPlayer() ? LARGE_ICON : SMALL_ICON;\r\n\r\n        return <Icon icon={ icon } width={ size } height={ size }/>;\r\n    }\r\n\r\n    return (\r\n        <button \r\n            className='play-button'\r\n            aria-label='Play radio button'\r\n            onClick={ togglePlayingMode }\r\n        >\r\n            { playing ? renderIcon(pauseIcon) : renderIcon(playIcon) }\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default PlayButton;","import React, { useState } from 'react';\r\n\r\nimport ReactSlider from 'react-slider';\r\nimport { Icon } from '@iconify/react';\r\nimport bxsVolumeFull from '@iconify/icons-bx/bxs-volume-full';\r\nimport bxsVolumeMute from '@iconify/icons-bx/bxs-volume-mute';\r\n\r\nimport { playerService } from '../../PlayerService';\r\n\r\nimport './VolumeControls.css';\r\n\r\nconst FullVolumeIcon = <Icon icon={ bxsVolumeFull } width={ 16 } height={ 16 } color='#ffffff'/>;\r\nconst MuteVolumeIcon = <Icon icon={ bxsVolumeMute } width={ 16 } height={ 16 } color='#ffffff'/>;\r\n\r\nfunction VolumeControls() {\r\n    const [ muted, setVolumeMode ] = useState(playerService.muted);\r\n    \r\n    const toggleVolumeMode = () => {\r\n        playerService.muted = !playerService.muted;\r\n        setVolumeMode(playerService.muted);\r\n    }\r\n\r\n    const changeVolume = (value: any) => {\r\n        playerService.volume = value / 100;\r\n    }\r\n\r\n    const sliderDefaultValue = () => {\r\n        const value = playerService.volume * 100;\r\n        \r\n        return Math.trunc(value);\r\n    }\r\n\r\n    return (\r\n        <div className='volume-controls'>\r\n            <button \r\n                className='volume-mode-button'\r\n                aria-label='Toggle volume button'\r\n                onClick={ toggleVolumeMode }\r\n            >\r\n                { muted ? FullVolumeIcon : MuteVolumeIcon }\r\n            </button>\r\n            <ReactSlider\r\n                className='horizontal-slider'\r\n                thumbClassName='thumb'\r\n                trackClassName='track'\r\n                defaultValue={ sliderDefaultValue() }\r\n                onChange={ value => changeVolume(value)}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default VolumeControls;","import React, { PureComponent } from 'react';\r\n\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { isMobileOnly } from 'react-device-detect';\r\n\r\nimport PlayButton from '../PlayerControls/PlayButton/PlayButton';\r\nimport VolumeControls from '../PlayerControls/VolumeControls/VolumeControls';\r\nimport { playerService } from '../PlayerService';\r\nimport { PlayerProps } from '../interfaces';\r\nimport { PlayerTypes } from '../../enums';\r\n\r\nimport './PlayerComponent.css';\r\n\r\n\r\nconst ONAIR = 'onair';\r\n\r\nexport class PlayerComponent extends PureComponent<PlayerProps> {\r\n    state = {\r\n        trackName: ''\r\n    };\r\n    subscription: Subscription | null = null;\r\n\r\n    get isMainPlayer () {\r\n        return this.props.playerType === PlayerTypes.Main;\r\n    }\r\n\r\n    get className () {\r\n        return `${ this.props.playerType }-player ${ isMobileOnly ? 'mobile' : 'desktop' }`;\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.subscribeOnPlayerStateChange();\r\n        this.setState({\r\n            trackName: playerService.trackName\r\n        });\r\n    }\r\n\r\n    subscribeOnPlayerStateChange () {\r\n        this.subscription = playerService.subscribeOnTrackNameChanges(\r\n            (trackName: string) => this.setState({ trackName })\r\n        );\r\n    }\r\n    \r\n    renderMainPlayer (trackName: string) {\r\n        return (\r\n            <>\r\n                <div className='controls-container'>\r\n                    <PlayButton playerType={ this.props.playerType }/>\r\n                    <VolumeControls />\r\n                </div>\r\n                <p className='onair'>{ ONAIR }</p>\r\n                <p className='track-title'>{ trackName }</p>\r\n            </>\r\n        );\r\n    }\r\n\r\n    renderHeaderPlayer (trackName: string) {\r\n        return (\r\n            <>\r\n                <PlayButton playerType={ this.props.playerType }/>\r\n                <div className='track-title'>\r\n                    <p>{ trackName }</p>\r\n                </div>\r\n                <VolumeControls />\r\n            </>\r\n        );\r\n    }\r\n\r\n    renderPlayer () {\r\n        const {\r\n            trackName\r\n        } = this.state;\r\n\r\n        return this.isMainPlayer ?\r\n            this.renderMainPlayer(trackName) :\r\n            this.renderHeaderPlayer(trackName);\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div className={ this.className }>\r\n                { this.renderPlayer() }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PlayerComponent;\r\n","import React from 'react'\r\n\r\nimport {\r\n  Link,\r\n  withRouter,\r\n  Switch,\r\n  Route\r\n} from 'react-router-dom';\r\n\r\nimport { BrowserView, isMobileOnly } from 'react-device-detect';\r\n\r\nimport MenuButton from '../menu/menu-button/MenuButton';\r\nimport SocialLinksComponent from '../shared/SocialLinksComponent/SocialLinksComponent';\r\nimport PlayerComponent from '../shared/Player/PlayerComponent/PlayerComponent';\r\nimport { SocialLinks } from '../shared/interfaces';\r\nimport { PlayerTypes } from '../shared/enums';\r\n\r\nimport './Header.css'\r\n\r\n\r\nconst RADIO_PLATO = 'Radio Plato';\r\nconst DONATE = 'Donate';\r\n\r\nconst HEADER_SOCIAL_LINKS: SocialLinks = {\r\n    mixcloud: 'https://www.mixcloud.com/radioplato/',\r\n    facebook: 'https://www.facebook.com/radioplato.by/',\r\n    vk: 'https://vk.com/radioplato',\r\n    email: 'mailto:hey@radioplato.by',\r\n    instagram: 'https://www.instagram.com/radio_plato/',\r\n    telegram: 'https://t.me/radioplato',\r\n    googlePlay: 'https://play.google.com/store/apps/details?id=com.radioplato'\r\n}\r\n\r\nfunction Header() {\r\n    const className = `header-container ${ isMobileOnly ? 'mobile' : 'desktop' }`;\r\n\r\n    return (\r\n        <header className={ className }>\r\n            { isMobileOnly && <MenuButton /> }\r\n            <Link to='/' className='logo-text'>{ RADIO_PLATO }</Link>\r\n            <BrowserView>\r\n                <div className='social-container'>\r\n                    <Switch>\r\n                        <Route exact path='/' render={\r\n                            props => (<SocialLinksComponent { ...props } socialLinks={ HEADER_SOCIAL_LINKS }/>)\r\n                        }/>\r\n                        <Route path='/' render={\r\n                            props => (<PlayerComponent { ...props } playerType={ PlayerTypes.Header }/>)\r\n                        }/>\r\n                    </Switch>\r\n                    <Link to='/donate' className='donate-link'>{ DONATE }</Link>\r\n                </div>\r\n            </BrowserView>\r\n        </header>\r\n    );\r\n}\r\n  \r\nexport default withRouter(Header);","import React from 'react';\r\n\r\nimport { Helmet } from 'react-helmet-async';\r\n\r\n\r\nconst DESCRIPTION_LIMIT = 150;\r\n\r\ninterface MetaTagsInformation {\r\n    title?: string;\r\n    thumbnail?: string;\r\n    url?: string;\r\n    description?: string;\r\n}\r\n\r\ninterface SeoProperties {\r\n    meta?: MetaTagsInformation\r\n}\r\n\r\nfunction Seo ({ meta }: SeoProperties) {\r\n  const description = meta?.description && meta.description.slice(0, DESCRIPTION_LIMIT) + '...';\r\n\r\n  return (\r\n    <Helmet>\r\n        <title>{`Radio Plato | ${ meta?.title }`}</title>\r\n        <meta property='og:title' content={ meta?.title } />\r\n        <meta property='og:image' content={ meta?.thumbnail } />\r\n        <meta property='og:description' content={ description } />\r\n        <meta name='description' content={ description } />\r\n    </Helmet>\r\n  )\r\n}\r\n\r\nfunction withSeo (meta: MetaTagsInformation, children: React.ReactNode) {\r\n    return (\r\n        <>\r\n            <Seo meta={ meta }/>\r\n            { children }\r\n        </>\r\n    )\r\n}\r\n\r\nexport { Seo, withSeo };","export enum IndexesOfDay {\r\n    Monday = 0,\r\n    Tuesday,\r\n    Wednesday,\r\n    Thursday,\r\n    Friday,\r\n    Saturday,\r\n    Sunday\r\n};","export const BACKEND_URL = 'https://radioplato-api.herokuapp.com';\r\nexport const BASIC_SEO_IMG = 'https://res.cloudinary.com/radio-plato/image/upload/v1595347571/og_image_plato_0158fb0d85.jpg'","import { Subject } from 'rxjs';\r\n\r\nimport { IndexGallery, IndexGalleryDto } from './interfaces';\r\nimport { CoverDto, SimpleImage } from '../shared/interfaces';\r\nimport { BACKEND_URL } from '../shared/constants';\r\n\r\n\r\nconst GALLERY_REQUEST_INTERVAL = 300000;\r\n\r\nclass GalleryService {\r\n    private indexGallery: IndexGallery | null = null;\r\n    private gallerySubject: Subject<IndexGallery | null>;\r\n\r\n    constructor () {\r\n        this.gallerySubject = new Subject();\r\n\r\n        this.fetchIndexGallery();\r\n        setInterval(this.fetchIndexGallery.bind(this), GALLERY_REQUEST_INTERVAL);\r\n    }\r\n\r\n    get gallery (): IndexGallery | null {\r\n        return this.indexGallery;\r\n    }\r\n\r\n    set gallery (gallery: IndexGallery | null) {\r\n        this.indexGallery = gallery;\r\n        gallery && this.gallerySubject.next(gallery);\r\n    }\r\n\r\n    subscribeOnGalleryChanges (onNext: Function) {\r\n        return this.gallerySubject.subscribe(data => onNext(data));\r\n    }\r\n\r\n    async fetchIndexGallery () {\r\n        await fetch(`${ BACKEND_URL }/index-gallery`)\r\n            .then(response => response.json())\r\n            .then(data => this.parseIndexGallery(data))\r\n            .then(indexGallery => this.updateIndexGallery(indexGallery));\r\n    }\r\n\r\n    private parseIndexGallery (dto: IndexGalleryDto) {\r\n        return {\r\n            photoExhibition: dto.PhotoExhibition,\r\n            photoExhibitionAuthor: dto.PhotoExhibitionAuthor,\r\n            photoExhibitionDescription: dto.PhotoExhibitionDescription,\r\n            photoExhibitionLink: dto.PhotoExhibitionLink,\r\n            photoExhibitionMedia: dto.PhotoExhibitionMedia.map(imageDto => this.mapImageDto(imageDto)),\r\n            photoExhibitionTitle: dto.PhotoExhibitionTitle,\r\n            regularGallery: dto.RegularGallery.map(imageDto => this.mapImageDto(imageDto)),\r\n            video: dto.Video,\r\n            videoEmbedCode: dto.VideoEmbedCode,\r\n        }\r\n    }\r\n\r\n    private mapImageDto (imageDto: CoverDto): SimpleImage {\r\n        return {\r\n            alternativeText: imageDto.alternativeText,\r\n            caption: imageDto.caption,\r\n            url: imageDto.url\r\n        };\r\n    }\r\n\r\n    private updateIndexGallery (indexGallery: IndexGallery) {\r\n        this.gallery = indexGallery;\r\n    }\r\n}\r\n\r\nconst galleryService = new GalleryService();\r\n\r\nexport default galleryService;","import { Subject } from 'rxjs'\r\nimport moment from 'moment';\r\n\r\nimport { ScheduleShow, ScheduleDto } from './interfaces';\r\nimport { IndexesOfDay } from './enums';\r\nimport { BACKEND_URL } from '../constants';\r\n\r\n\r\nconst DATA_REQUEST_INTERVAL = 14400000;\r\nconst CURRENT_SHOW_REFRESH_INTERVAL = 300000;\r\n\r\nenum PeriodicityTypes {\r\n    SingleTime = 'SingleTime',\r\n    Daily = 'Daily',\r\n    Weekly = 'Weekly',\r\n    BiWeekly = 'BiWeekly',\r\n    EveryThirdWeek = 'Every3rdWeek',\r\n    Monthly = 'Monthly'\r\n}\r\n\r\nconst indexByDayName = new Map([\r\n    [ 'Monday', IndexesOfDay.Monday ],\r\n    [ 'Tuesday', IndexesOfDay.Tuesday ],\r\n    [ 'Wednesday', IndexesOfDay.Wednesday ],\r\n    [ 'Thursday', IndexesOfDay.Thursday ],\r\n    [ 'Friday', IndexesOfDay.Friday ],\r\n    [ 'Saturday', IndexesOfDay.Saturday ],\r\n    [ 'Sunday', IndexesOfDay.Sunday ],\r\n]);\r\n\r\nclass ScheduleService {\r\n    private _schedule: ScheduleShow[][] = [ [], [], [], [], [], [], [] ];\r\n    private _currentShow: ScheduleShow | undefined;\r\n    private scheduleSubject: Subject<ScheduleShow[][]>;\r\n    private currentShowSubject: Subject<ScheduleShow>;\r\n\r\n    constructor () {\r\n        this.scheduleSubject = new Subject();\r\n        this.currentShowSubject = new Subject();\r\n\r\n        this.fetchSchedules();\r\n        this.updateCurrentShow();\r\n        setInterval(this.fetchSchedules.bind(this), DATA_REQUEST_INTERVAL);\r\n        setInterval(this.updateCurrentShow.bind(this), CURRENT_SHOW_REFRESH_INTERVAL);\r\n    }\r\n\r\n    set schedule (schedule: ScheduleShow[][]) {\r\n        this._schedule = schedule;\r\n        this.scheduleSubject.next(schedule);\r\n    }\r\n\r\n    get schedule () {\r\n        return this._schedule;\r\n    }\r\n\r\n    get currentShow () {\r\n        return this._currentShow;\r\n    }\r\n\r\n    set currentShow (show: ScheduleShow | undefined) {\r\n        this._currentShow = show;\r\n        this.currentShowSubject.next(show)\r\n    }\r\n\r\n    updateCurrentShow () {\r\n        const weekday = moment().isoWeekday() - 1;\r\n        const currentDate = new Date().toISOString().substr(0, 10);\r\n        const start = (showline: ScheduleShow) => moment(`${ currentDate } ${ showline.startTime }`);\r\n        const end = (showline: ScheduleShow) => moment(`${ currentDate } ${ showline.endTime }`);\r\n\r\n        this._currentShow = this.schedule[weekday].find(showline => {\r\n            return showline.type === 'Show' && moment().isBetween(start(showline), end(showline));\r\n        });\r\n    }\r\n\r\n    async fetchSchedules () {\r\n        await fetch(`${ BACKEND_URL }/schedules`)\r\n            .then(response => response.json())\r\n            .then(data => [].concat(...data.map((datum: ScheduleDto) => this.parseScheduleLine(datum))))\r\n            .then(scheduleShows => this.organizeSchedule(scheduleShows));\r\n    }\r\n\r\n    subscribeOnScheduleChanges (onNext: Function) {\r\n        return this.scheduleSubject.subscribe(data => onNext(data));\r\n    }\r\n\r\n    subscribeOnCurrentShowChanges (onNext: Function) {\r\n        return this.currentShowSubject.subscribe(data => onNext(data));\r\n    }\r\n\r\n    private parseScheduleLine (dto: ScheduleDto): ScheduleShow[] {\r\n        return dto.OnAirDateTime.map(onAirDateTime => {\r\n            const weekdays = [];\r\n\r\n            for (const [ key, value ] of Object.entries(onAirDateTime)) {\r\n                const dayIndex = indexByDayName.get(key);\r\n                \r\n                value && dayIndex !== undefined && weekdays.push(dayIndex);\r\n            }\r\n    \r\n            return {\r\n                title: dto.Title,\r\n                description: dto.Description,\r\n                type: dto.Type,\r\n                hide: dto.Hide,\r\n                link: dto.Link,\r\n                startDate: onAirDateTime.StartDate,\r\n                startTime: onAirDateTime.StartTime,\r\n                endDate: onAirDateTime.EndDate,\r\n                endTime: onAirDateTime.EndTime,\r\n                periodicity: onAirDateTime.Periodicity,\r\n                weekdays,\r\n                image: dto ? {\r\n                    alternativeText: dto.ShowImg?.alternativeText,\r\n                    caption: dto.ShowImg?.caption,\r\n                    url: dto.ShowImg?.url\r\n                } : null\r\n            };\r\n        });\r\n    }\r\n\r\n    private organizeSchedule (scheduleShows: ScheduleShow[]) {\r\n        const schedule: ScheduleShow[][]  = [];\r\n\r\n        for (let day = IndexesOfDay.Monday; day <= IndexesOfDay.Sunday; day++) {\r\n            schedule[day] = [];\r\n\r\n            scheduleShows.forEach(show => {\r\n                this.shouldShowBeOnAir(show, day) && schedule[day].push(show)\r\n            });\r\n\r\n            schedule[day].sort(this.sortShowsByDate);\r\n        }\r\n\r\n        this.schedule = schedule;\r\n    }\r\n\r\n    private sortShowsByDate (first: ScheduleShow, second: ScheduleShow) {\r\n        return +first.startTime.slice(0, 2) - +second.startTime.slice(0, 2);\r\n    }\r\n\r\n    private shouldShowBeOnAir (show: ScheduleShow, day: IndexesOfDay): boolean {\r\n        if (show.hide) {\r\n            return false;\r\n        }\r\n\r\n        const showStartDate = moment(show.startDate);\r\n        const dateOfDay = moment().add(moment().isoWeekday() - day + 1, 'days');\r\n        const weeksPassed = +(moment().week() - showStartDate.week());\r\n\r\n        switch (show.periodicity) {\r\n            case PeriodicityTypes.Daily: \r\n                return show.weekdays.includes(day);\r\n            case PeriodicityTypes.Weekly:\r\n                return show.weekdays.includes(day);\r\n            case PeriodicityTypes.BiWeekly:\r\n                return show.weekdays.includes(day) && weeksPassed % 2 === 0;\r\n            case PeriodicityTypes.EveryThirdWeek:\r\n                return show.weekdays.includes(day) && weeksPassed % 3 === 0;\r\n            case PeriodicityTypes.SingleTime:\r\n                return showStartDate.startOf('day').isSame(dateOfDay.startOf('day'));\r\n            default: return false;\r\n        }\r\n    }\r\n}\r\n\r\nconst scheduleService = new ScheduleService();\r\n\r\nexport { scheduleService };","import React, { Component } from 'react';\r\nimport ReactPlayer from 'react-player'\r\nimport { Subscription } from 'rxjs';\r\nimport { Carousel } from 'react-responsive-carousel';\r\n\r\nimport galleryService from './GalleryService';\r\nimport { IndexGallery } from './interfaces';\r\n\r\nimport { scheduleService } from '../shared/schedule/ScheduleService';\r\nimport 'react-responsive-carousel/lib/styles/carousel.min.css';\r\nimport './GalleryComponent.css';\r\n\r\n\r\ninterface GalleryComponentState {\r\n    gallery: IndexGallery | null\r\n}\r\n\r\nclass GalleryComponent extends Component {\r\n    state: GalleryComponentState = { gallery: null };\r\n    subscription: Subscription | null = null;\r\n\r\n    componentDidMount() {\r\n        this.subscribeOnGalleryChange();\r\n        galleryService.fetchIndexGallery();\r\n    }\r\n\r\n    subscribeOnGalleryChange () {\r\n        this.subscription = galleryService.subscribeOnGalleryChanges(\r\n            (gallery: IndexGallery) => this.setState({ gallery })\r\n        );\r\n    }\r\n\r\n    componentWillUnmount () {\r\n        this.subscription?.unsubscribe();\r\n    }\r\n\r\n    graphicContentSelection () {\r\n        const { gallery } = this.state;\r\n\r\n        if (!gallery) {\r\n            return null;\r\n        }\r\n\r\n        if (gallery?.video) {\r\n            return (\r\n                <ReactPlayer url={ gallery.videoEmbedCode } />\r\n            );\r\n        }\r\n\r\n        if (gallery?.photoExhibition) {\r\n            return (\r\n                <Carousel className='carousel'\r\n                          showArrows={ false }\r\n                          showStatus={ false }\r\n                          showThumbs={ false }\r\n                          showIndicators={ false }\r\n                          autoPlay={ true }\r\n                          infiniteLoop={ true }\r\n                          interval={ 30000 }\r\n                >\r\n                    { gallery.photoExhibitionMedia.map(photo => (\r\n                        <div key={ photo.url }>\r\n                            <img src={ photo.url }\r\n                                 alt={ photo.alternativeText }\r\n                            />\r\n                        </div>\r\n                    ))}\r\n                </Carousel>\r\n            );\r\n        }\r\n\r\n        if (scheduleService.currentShow && scheduleService.currentShow.image) {\r\n            return (\r\n                <img className='gallery-image'\r\n                     src={ scheduleService.currentShow.image.url }\r\n                     alt={ scheduleService.currentShow.image.alternativeText }\r\n                ></img>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <Carousel className='carousel'\r\n                      showArrows={ false }\r\n                      showStatus={ false }\r\n                      showThumbs={ false }\r\n                      showIndicators={ false }\r\n                      autoPlay={ true }\r\n                      infiniteLoop={ true }\r\n                      interval={ 30000 }\r\n            >\r\n                { gallery.regularGallery.map(photo => (\r\n                    <div key={ photo.url }>\r\n                        <img src={ photo.url }\r\n                             alt={ photo.alternativeText }\r\n                        />\r\n                    </div>\r\n                ))}\r\n            </Carousel>\r\n        );\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div className='visual-container'>\r\n                { this.graphicContentSelection() }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n  \r\nexport default GalleryComponent;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { isMobileOnly } from 'react-device-detect';\r\n\r\nimport { NewsCard } from '../interfaces';\r\nimport { AD_CATEGORY } from '../constants';\r\n\r\nimport './NewsCardComponent.css';\r\n\r\n\r\ninterface LinkElementParameters {\r\n    children: React.ReactNode;\r\n    newsCard: NewsCard;\r\n}\r\n\r\ninterface TagElementParameters {\r\n    category: string;\r\n}\r\n\r\ninterface NewsCardParameters {\r\n    newsCard: NewsCard;\r\n    type?: string;\r\n}\r\n\r\nfunction LinkElement({ newsCard, children }: LinkElementParameters) {\r\n    const slug = newsCard.slug;\r\n    const route = `/news/${ newsCard.category.toLowerCase() }/${ slug }`;\r\n\r\n    return slug ? <Link to={ route } title={ newsCard.title }>{ children }</Link> : <a href={ newsCard.link } title={ newsCard.title }>{ children }</a>;\r\n}\r\n\r\nfunction TagElement({ category }: TagElementParameters) {\r\n    const link = `/news/${ category.toLowerCase() }`;\r\n    const tag = `∙ ${ category } ∙`;\r\n\r\n    return category !== AD_CATEGORY ? <Link to={ link } title={ category } className='news-card-tag'>{ tag }</Link> : <p className='news-card-tag'>{ tag }</p>\r\n}\r\n\r\nfunction NewsCardComponent({ newsCard, type }: NewsCardParameters) {\r\n    const {\r\n        excerpt,\r\n        newsCover,\r\n        title,\r\n        category\r\n    } = newsCard;\r\n    const device = isMobileOnly ? 'mobile' : 'desktop';\r\n\r\n    return (\r\n        <div className={ `news-card ${ type } ${ device }` }>\r\n            <div className='news-card-image'>\r\n                <LinkElement newsCard={ newsCard }>\r\n                    <img src={ newsCover.url } loading='lazy' alt={ newsCover.alternativeText }/>\r\n                </LinkElement>\r\n            </div>\r\n            <div className='news-card-text'>\r\n                <TagElement category={ category } />\r\n                <LinkElement newsCard={ newsCard }>\r\n                    <h2>{ title }</h2>\r\n                    <p className='news-card-excerpt'>{ excerpt }</p>\r\n                </LinkElement>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n  \r\nexport default NewsCardComponent;","export const AD_CATEGORY = 'Ad';\r\n","import { BACKEND_URL } from '../shared/constants';\r\nimport { AdvertisementDto, Advertisement } from './interfaces';\r\nimport { Subject } from 'rxjs/internal/Subject';\r\nimport moment from 'moment';\r\n\r\n\r\nenum AdPlacements {\r\n    NewsList = 'NewsList',\r\n    NewsPost = 'NewsPost'\r\n}\r\n\r\nclass AdService {\r\n    private _advertisements: Advertisement[] = [];\r\n    private advertisementsSubject: Subject<Advertisement[] | null>;\r\n    private newsCardAdSubject: Subject<Advertisement | null>;\r\n    private newsPostAdSubject: Subject<Advertisement | null>;\r\n\r\n    constructor () {\r\n        this.advertisementsSubject = new Subject();\r\n        this.newsCardAdSubject = new Subject();\r\n        this.newsPostAdSubject = new Subject();\r\n\r\n        this.fetchAdvertisements();\r\n    }\r\n\r\n    get advertisements () {\r\n        return this._advertisements;\r\n    }\r\n\r\n    set advertisements (ads: any) {\r\n        this._advertisements = ads;\r\n\r\n        this.advertisementsSubject.next(this.advertisements);\r\n        this.newsCardAdSubject.next(this.getSpecificAdvertisementByType(AdPlacements.NewsList));\r\n        this.newsPostAdSubject.next(this.getSpecificAdvertisementByType(AdPlacements.NewsPost));\r\n    }\r\n\r\n    subscribeOnAdvertisementsChanges (onNext: Function) {\r\n        return this.advertisementsSubject.subscribe(data => onNext(data));\r\n    }\r\n\r\n    subscribeOnNewsCardAdUpdate (onNext: Function) {\r\n        return this.newsCardAdSubject.subscribe(data => onNext(data));\r\n    }\r\n\r\n    subscribeOnNewsPostAdUpdate (onNext: Function) {\r\n        return this.newsPostAdSubject.subscribe(data => onNext(data));\r\n    }\r\n\r\n    async fetchAdvertisements () {\r\n        await fetch(`${ BACKEND_URL }/advertisements`)\r\n            .then(response => response.json())\r\n            .then(data => this.parseAdvertisements(data))\r\n            .then(advertisements => this.updateAdvertisements(advertisements));\r\n    }\r\n\r\n    private getSpecificAdvertisementByType (type: string) {\r\n        return this.advertisements.find((ad: Advertisement) => ad.placement === type && moment().isBefore(moment(ad.endDate)));\r\n    }\r\n\r\n    private parseAdvertisements (data: AdvertisementDto[]) {\r\n        return data.map(ad => {\r\n            return {\r\n                isActive: ad.AdActive,\r\n                endDate: ad.AdEnd,\r\n                image: {\r\n                    alternativeText: ad.AdImage.alternativeText,\r\n                    caption: ad.AdImage.caption,\r\n                    url: ad.AdImage.url\r\n                },\r\n                link: ad.AdLink,\r\n                placement: ad.AdPlacement,\r\n                startDate: ad.AdStart,\r\n                text: ad.AdText,\r\n                title: ad.AdTitle\r\n            }\r\n        });\r\n    }\r\n\r\n    private updateAdvertisements (advertisements: any) {\r\n        this.advertisements = advertisements;\r\n    }\r\n}\r\n\r\nconst adService = new AdService();\r\n\r\nexport default adService;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Subscription } from 'rxjs';\r\nimport moment from 'moment';\r\n\r\nimport NewsCardComponent from './NewsCardComponent/NewsCardComponent';\r\nimport adService from './../advertisement/AdService';\r\n\r\nimport { NewsDto, NewsCard } from './interfaces';\r\nimport { Advertisement } from '../advertisement/interfaces';\r\nimport { NewsListTypes } from '../shared/enums';\r\nimport { BACKEND_URL, BASIC_SEO_IMG } from '../shared/constants';\r\nimport { AD_CATEGORY } from './constants';\r\nimport { Seo } from '../shared/wrappers/seo/Seo'\r\n\r\nimport './NewsListComponent.css';\r\nimport { isMobileOnly } from 'react-device-detect';\r\n\r\n\r\nconst NEWS_LIMIT = 12;\r\nconst VISIBILITY_LIMIT = 800;\r\nconst NEWS = 'NEWS';\r\nconst NEWS_LIST_SEO_TITLE = 'News'\r\nconst NEWS_LIST_SEO_DESCRIPTION = 'The best place to read about electronic music, both local and global.'\r\n\r\ninterface NewsListComponentProperties {\r\n    type: string;\r\n    category?: string;\r\n}\r\n\r\nexport class NewsListComponent extends Component<NewsListComponentProperties> {\r\n    state = {\r\n        advertisement: null,\r\n        newsCards: [],\r\n        page: 0,\r\n        loading: false,\r\n        end: false\r\n    }\r\n    subscription: Subscription | null = null;\r\n\r\n    parseNewsCard (newsDto: NewsDto): NewsCard {\r\n        return {\r\n            excerpt: newsDto.Excerpt,\r\n            category: newsDto.Category,\r\n            newsCover: {\r\n                alternativeText: newsDto.PostCover.alternativeText,\r\n                caption: newsDto.PostCover.caption,\r\n                url: newsDto.PostCover.url\r\n            },\r\n            slug: newsDto.Slug,\r\n            title: newsDto.Title,\r\n            publishDate: newsDto.PublishDate\r\n        };\r\n    }\r\n\r\n    sortCardsByDate (first: NewsCard, second: NewsCard) {\r\n        return moment(second.publishDate).diff(moment(first.publishDate));\r\n    }\r\n\r\n    handleResponse (newsCards: NewsCard[]) {\r\n        if (newsCards && newsCards.length) {\r\n            const cards = [ ...this.state.newsCards, ...newsCards ].sort(this.sortCardsByDate);\r\n\r\n            this.setState({\r\n                newsCards: cards,\r\n                loading: false,\r\n                page: this.state.page + 1\r\n            });\r\n        } else {\r\n            this.setState({ end: true });\r\n        }\r\n    }\r\n\r\n    fetchNews () {\r\n        const { page } = this.state;\r\n        const { category } = this.props;\r\n        const start = page * NEWS_LIMIT;\r\n        const filter = category ? `Category=${ category[0].toUpperCase() + category.slice(1) }&` : '';\r\n\r\n        this.setState({ loading: true });\r\n\r\n        fetch(`${ BACKEND_URL }/posts?${ filter }_sort=PublishDate:DESC&_start=${ start }&_limit=${ NEWS_LIMIT }`)\r\n            .then(response => response.json())\r\n            .then(data => data.map((datum: NewsDto) => this.parseNewsCard(datum)))\r\n            .then(newsCards => this.handleResponse(newsCards));\r\n    }\r\n\r\n    advertisementToNewsCard (advertisement: Advertisement | null) {\r\n        return advertisement ? {\r\n            excerpt: advertisement ? advertisement.text : '',\r\n            category: AD_CATEGORY,\r\n            newsCover: advertisement ? advertisement.image : {},\r\n            link: advertisement ? advertisement.link : '',\r\n            title: advertisement ? advertisement.title : '',\r\n            publishDate: advertisement ? advertisement.startDate : ''\r\n        } : null;\r\n    }\r\n\r\n    renderSimpleNewsList (newsCards: NewsCard[]) {\r\n        return newsCards.length ? (\r\n            <div className='simple-news'>\r\n                <div className='news-list-title'>\r\n                    <Link to='/news'>\r\n                        <p>{ NEWS }</p>\r\n                    </Link>\r\n                </div>\r\n                { newsCards.slice(0, 3).map(newsCard => (\r\n                    <NewsCardComponent key={ newsCard.slug } newsCard={ newsCard } type='simple' />\r\n                )) }\r\n            </div>\r\n        ) : null;\r\n    }\r\n\r\n    renderFullNewsList (newsCards: NewsCard[], advertisement: Advertisement | null) {\r\n        const className = `news-list ${ isMobileOnly ? 'mobile' : 'desktop' }`;\r\n        const adNewsCard = this.advertisementToNewsCard(advertisement);\r\n\r\n        return newsCards.length ? (\r\n            <div onScroll={ this.handleScroll } className={ className }>\r\n                <Seo meta={{\r\n                        title: NEWS_LIST_SEO_TITLE,\r\n                        description: NEWS_LIST_SEO_DESCRIPTION,\r\n                        thumbnail: BASIC_SEO_IMG\r\n                    }}\r\n                />\r\n                <div className='news-cards'>\r\n                    <div className='latest-news'>\r\n                        <div className='main-news'>\r\n                            <NewsCardComponent key={ newsCards[0].slug } newsCard={ newsCards[0] } type='main' />\r\n                        </div>\r\n                        <div className='fresh-news'>\r\n                            { adNewsCard ? (<NewsCardComponent newsCard={ adNewsCard } type='fresh'/>) : null }\r\n                            { newsCards.slice(1, 5).map(newsCard => (\r\n                                <NewsCardComponent key={ newsCard.slug } newsCard={ newsCard } type='fresh' />\r\n                            )) }\r\n                            \r\n                        </div>\r\n                    </div>\r\n                    <div className='other-news'>\r\n                        { newsCards.slice(5, newsCards.length).map(newsCard => (\r\n                            <NewsCardComponent key={ newsCard.slug } newsCard={ newsCard } type='other' />\r\n                        )) }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ) : null;\r\n    }\r\n\r\n    renderNewsCards (newsCards: NewsCard[], advertisement: Advertisement | null) {\r\n        const { type } = this.props;\r\n\r\n        return type === NewsListTypes.Full ? this.renderFullNewsList(newsCards, advertisement) : this.renderSimpleNewsList(newsCards);\r\n    }\r\n\r\n    componentDidMount () {\r\n        adService.fetchAdvertisements();\r\n        this.fetchNews();\r\n        this.subscribeOnAdvertisementChange();\r\n    }\r\n\r\n    subscribeOnAdvertisementChange () {\r\n        this.subscription = adService.subscribeOnNewsCardAdUpdate(\r\n            (advertisement: Advertisement) => this.setState({ advertisement })\r\n        );\r\n    }\r\n\r\n    handleScroll = (event: any) => {\r\n        const { loading, end } = this.state;\r\n\r\n        if (event.target.scrollHeight - event.target.scrollTop < VISIBILITY_LIMIT) {\r\n            !loading && !end && this.fetchNews();\r\n        }\r\n    }\r\n\r\n    render () {\r\n        const {\r\n            advertisement,\r\n            newsCards\r\n        } = this.state;\r\n\r\n        return this.renderNewsCards(newsCards, advertisement);\r\n    }\r\n}\r\n  \r\nexport default NewsListComponent;","import React from 'react'\r\n\r\nimport { BrowserView, isMobileOnly } from 'react-device-detect';\r\n\r\nimport { ScheduleShow } from './interfaces'\r\n\r\nimport './ScheduleShowline.css'\r\n\r\n\r\ninterface ScheduleShowlineProperties {\r\n    showline: ScheduleShow\r\n}\r\n\r\nfunction ScheduleShowline({ showline }: ScheduleShowlineProperties) {\r\n    const {\r\n        title,\r\n        description,\r\n        link,\r\n        startTime,\r\n        endTime\r\n    } = showline;\r\n    const interval = startTime && endTime ? `${ startTime.slice(0, 5) } - ${ endTime.slice(0, 5) }` : '';\r\n    const href = link ? link : '';\r\n    const className = `show-title-container ${ isMobileOnly ? 'mobile' : 'desktop' }`;\r\n\r\n    return (\r\n        <a href={ href }>\r\n            <div className={ className }>\r\n                <div className='show-date'>\r\n                    <p>{ interval }</p>\r\n                </div>\r\n                <div className='show-title'>\r\n                    <p>{ title ? title : '' }</p>\r\n                </div>\r\n                <BrowserView>\r\n                    <div className='show-desc'>\r\n                        <p>{ description ? description : '' }</p>\r\n                    </div>\r\n                </BrowserView>\r\n            </div>\r\n        </a>\r\n    )\r\n  }\r\n  export default ScheduleShowline ","import React, { Component } from 'react'\r\n\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { isMobileOnly } from 'react-device-detect';\r\n\r\nimport moment from 'moment';\r\n\r\nimport ScheduleShowline from './ScheduleShowline'\r\n\r\nimport { scheduleService } from './ScheduleService';\r\n\r\nimport { ScheduleShow } from './interfaces';\r\nimport { IndexesOfDay } from './enums';\r\n\r\nimport { withSeo } from '../wrappers/seo/Seo'\r\nimport { withScroll } from '../wrappers/scrollable/Scrollable';\r\nimport { BASIC_SEO_IMG } from '../../shared/constants';\r\nimport './ScheduleComponent.css'\r\n\r\n\r\nconst DAYS_OF_WEEK = [\r\n    'MON',\r\n    'TUE',\r\n    'WED',\r\n    'THU',\r\n    'FRI',\r\n    'SAT',\r\n    'SUN'\r\n];\r\n\r\nconst SCHEDULE = 'SCHEDULE';\r\nconst SCHEDULE_SEO_TITLE = 'Schedule'\r\nconst SCHEDULE_SEO_DESCRIPTION = 'We broadcast 24/7, here is what you will hear.'\r\n\r\nclass ScheduleComponent extends Component {\r\n    subscription: Subscription | null = null;\r\n    state = {\r\n        schedule: scheduleService.schedule,\r\n        selectedDay: moment().isoWeekday() - 1\r\n    };\r\n\r\n    componentDidMount () {\r\n        this.subscribeOnScheduleChange();\r\n    }\r\n\r\n    subscribeOnScheduleChange () {\r\n        this.subscription = scheduleService.subscribeOnScheduleChanges(\r\n            (schedule: ScheduleShow[][]) => this.setState({ schedule })\r\n        );\r\n    }\r\n\r\n    scheduleShowlineBuilder = (showline: ScheduleShow) => {\r\n        return (\r\n            <ScheduleShowline \r\n                showline={ showline }\r\n                key={ `${ showline.title }-${ showline.startDate }-${ showline.endDate }` }\r\n            />\r\n        );\r\n    }\r\n\r\n    selectDay = (day: IndexesOfDay) => {\r\n        this.setState({\r\n            selectedDay: day\r\n        });\r\n    };\r\n\r\n    componentWillUnmount () {\r\n        this.subscription?.unsubscribe();\r\n    }\r\n\r\n    renderButtons = () => {\r\n        const { selectedDay } = this.state;\r\n\r\n        return DAYS_OF_WEEK.map((day, index) => (\r\n            <button className={ `schedule-day-button ${ selectedDay === index ? 'active' : ''}` }\r\n                    onClick={ () => this.selectDay(index) }\r\n                    key={ `${ day.toLowerCase() }-${ index }`}\r\n            >\r\n                { day }\r\n            </button>\r\n        ))\r\n    }\r\n\r\n    renderDailySchedule = () => {\r\n        const {\r\n            schedule,\r\n            selectedDay\r\n        } = this.state;\r\n\r\n        return schedule[selectedDay].length ?\r\n            schedule[selectedDay].map((playlistShow: ScheduleShow) => this.scheduleShowlineBuilder(playlistShow)) :\r\n            [];\r\n    }\r\n\r\n    render () {\r\n        const className = `schedule-container ${ isMobileOnly ? 'mobile' : 'desktop' }`;\r\n\r\n        return (\r\n            <div className={ className }>\r\n                <div className='schedule-headline-container'>        \r\n                    <div className='schedule-title'>\r\n                        <p>{ SCHEDULE }</p>\r\n                    </div>\r\n                    <div className='schedule-day'>\r\n                        { this.renderButtons() }\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    { this.renderDailySchedule() }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst SchedulePageComponent = () => withSeo({\r\n    title: SCHEDULE_SEO_TITLE,\r\n    description: SCHEDULE_SEO_DESCRIPTION,\r\n    thumbnail: BASIC_SEO_IMG\r\n}, withScroll(<ScheduleComponent />));\r\n  \r\nexport { ScheduleComponent, SchedulePageComponent };","import React from 'react';\r\n\r\nimport './Scrollable.css';\r\n\r\n\r\nfunction withScroll (children: React.ReactNode) {\r\n    return (\r\n        <div className='scrollable-container'>\r\n            { children }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport { withScroll };","import React from 'react';\r\nimport { BrowserView, isMobileOnly } from 'react-device-detect';\r\n\r\nimport { Seo } from '../shared/wrappers/seo/Seo'\r\nimport GalleryComponent from '../gallery/GalleryComponent';\r\nimport NewsListComponent from '../news/NewsListComponent';\r\nimport { ScheduleComponent } from '../shared/schedule/ScheduleComponent';\r\nimport { BASIC_SEO_IMG } from '../shared/constants';\r\n\r\nimport { NewsListTypes } from '../shared/enums';\r\n\r\nimport './StartPageComponent.css';\r\n\r\nconst INDEX_SEO_TITLE = 'From Minsk with ❤'\r\nconst INDEX_SEO_DESCRIPTION = 'Independent internet radio based in Minsk (Belarus). We stream classic bangers and authentic world music as well as modern indie and rhythmic DJ edits.'\r\n\r\nfunction StartPageComponent() {\r\n    const device = isMobileOnly ? 'mobile' : 'desktop';\r\n    const className = `start-page-container ${ device }`\r\n\r\n    return (\r\n        <div className={ className }>\r\n                <Seo meta={{\r\n                        title: INDEX_SEO_TITLE,\r\n                        description: INDEX_SEO_DESCRIPTION,\r\n                        thumbnail: BASIC_SEO_IMG\r\n                    }}\r\n                />\r\n            <BrowserView>\r\n                <GalleryComponent />\r\n            </BrowserView>\r\n            <NewsListComponent type={ NewsListTypes.Simple }/>\r\n            <ScheduleComponent />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default StartPageComponent;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { isMobileOnly } from 'react-device-detect';\r\n\r\nimport { ShowCard } from '../interfaces';\r\n\r\nimport './ShowCardComponent.css';\r\n\r\ninterface ShowCardParameters {\r\n    showCard: ShowCard\r\n}\r\n\r\nfunction ShowCardComponent({ showCard }: ShowCardParameters) {\r\n    const {\r\n        excerpt,\r\n        showCover,\r\n        slug,\r\n        title,\r\n    } = showCard;\r\n    const className = `show-card ${ isMobileOnly ? 'mobile' : 'desktop' }`;\r\n    const route = `/shows/${ slug }`;\r\n\r\n    return (\r\n        <Link to={ route } title={ title }>\r\n            <div className={ className }>\r\n                <img src={ showCover.url } loading='lazy' alt={ showCover.alternativeText }/>\r\n                <h2>{ title }</h2>\r\n                <p>{ excerpt }</p>\r\n            </div>    \r\n        </Link>\r\n    );\r\n}\r\n  \r\nexport default ShowCardComponent;","import React, { Component } from 'react';\r\n\r\nimport { isMobileOnly } from 'react-device-detect';\r\n\r\nimport ShowCardComponent from './ShowCardComponent/ShowCardComponent';\r\n\r\nimport { Seo } from '../shared/wrappers/seo/Seo'\r\nimport { ShowDto, ShowCard } from './interfaces';\r\nimport { BACKEND_URL, BASIC_SEO_IMG } from '../shared/constants';\r\n\r\nimport './ShowListComponent.css';\r\n\r\n\r\nconst SHOW_LIST_SEO_TITLE = 'Shows'\r\nconst SHOW_LIST_SEO_DESCRIPTION = 'Awesome shows from Radio Plato crew'\r\n\r\n\r\nexport class ShowListComponent extends Component {\r\n    state = {\r\n        showCards: []\r\n    }\r\n\r\n    parseShowCard (showDto: ShowDto): ShowCard {\r\n        return {\r\n            excerpt: showDto.Excerpt,\r\n            showCover: {\r\n                alternativeText: showDto.ShowCover.alternativeText,\r\n                caption: showDto.ShowCover.caption,\r\n                url: showDto.ShowCover.url\r\n            },\r\n            slug: showDto.Slug,\r\n            title: showDto.Title\r\n        };\r\n    }\r\n\r\n    fetchShows () {\r\n        fetch(`${ BACKEND_URL }/shows`)\r\n            .then(response => response.json())\r\n            .then(data => data.map((datum: ShowDto) => this.parseShowCard(datum)))\r\n            .then(showCards => this.setState({ showCards }));\r\n    }\r\n\r\n    renderShowCards (showCards: ShowCard[]) {\r\n        return showCards.map(showCard => (<ShowCardComponent key={ showCard.slug } showCard={ showCard }></ShowCardComponent>))\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.fetchShows();\r\n    }\r\n\r\n    render () {\r\n        const {\r\n            showCards\r\n        } = this.state;\r\n        const className = `show-list ${ isMobileOnly ? 'mobile' : 'desktop' }`;\r\n\r\n        return (\r\n            <div className={ className }>\r\n                 <Seo meta={{\r\n                        title: SHOW_LIST_SEO_TITLE,\r\n                        description: SHOW_LIST_SEO_DESCRIPTION,\r\n                        thumbnail: BASIC_SEO_IMG\r\n                    }}\r\n                />\r\n                <h1>Shows</h1>\r\n                <div className='show-cards'>\r\n                    { this.renderShowCards(showCards) }\r\n                </div>\r\n            </div>\r\n            \r\n        );\r\n    }\r\n}\r\n  \r\nexport default ShowListComponent;","import React, { Component } from 'react';\r\n\r\nimport { isMobileOnly } from 'react-device-detect';\r\n\r\nimport './ShowEpisodesComponent.css';\r\nimport { ShowEpisode } from '../interfaces';\r\n\r\n\r\ninterface ShowEpisodesProperties {\r\n    slug: string;\r\n}\r\n\r\nexport class ShowEpisodesComponent extends Component<ShowEpisodesProperties> {\r\n    state = {\r\n        showEpisodes: []\r\n    }\r\n\r\n    parseShowEpisode (datum: any): ShowEpisode {\r\n        return {\r\n            title: datum.name,\r\n            image: datum.pictures['1024wx1024h'],\r\n            url: datum.url,\r\n            date: datum.created_time,\r\n            slug: datum.slug\r\n        }\r\n    }\r\n\r\n    parseShowEpisodes (playlistDto: any): ShowEpisode[] | null {\r\n        if (!playlistDto || !playlistDto.data || !playlistDto.data.length) {\r\n            return null;\r\n        }\r\n        \r\n        return playlistDto.data.map((datum: any) => this.parseShowEpisode(datum));\r\n    }\r\n\r\n    fetchPlaylist () {\r\n        const { slug } = this.props;\r\n        \r\n        fetch(`https://api.mixcloud.com/radioplato/playlists/${ slug }/cloudcasts/`)\r\n            .then(response => response.json())\r\n            .then(playlist => this.parseShowEpisodes(playlist)?.reverse().slice(0, 9))\r\n            .then(showEpisodes => this.setState({ showEpisodes }));\r\n    }\r\n\r\n    renderShowEpisode (episode: ShowEpisode) {\r\n        const key = `${ episode.slug }-${ new Date().getTime() }`;\r\n        const date = new Date(episode.date).toISOString().slice(0,10).split('-').reverse().join('.');\r\n\r\n        return (\r\n            <a key={ key } href={ episode.url }>\r\n                <div className='episode-container'>\r\n                    <img className='episode-image' src={ episode.image } alt={ episode.title }/>\r\n                    <div className='episode-information'>\r\n                        <h3>{ episode.title }</h3>\r\n                        <p>{ date }</p>\r\n                    </div>\r\n                </div>\r\n            </a>\r\n        );\r\n    }\r\n\r\n    renderShowEpisodes (episodes: ShowEpisode[]) {\r\n        return episodes ? (\r\n            <>\r\n                <h2>Latest Episodes</h2>\r\n                <div className='episode-cards'>\r\n                    { episodes.map(episode => this.renderShowEpisode(episode)) }\r\n                </div>\r\n            </>\r\n        ) : null;\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.fetchPlaylist();\r\n    }\r\n\r\n    render () {\r\n        const {\r\n            showEpisodes\r\n        } = this.state;\r\n        const className = `episode-list ${ isMobileOnly ? 'mobile' : 'desktop' }`;\r\n\r\n        return (\r\n            <div className={ className }>\r\n                { this.renderShowEpisodes(showEpisodes) }\r\n            </div>\r\n            \r\n        );\r\n    }\r\n}\r\n  \r\nexport default ShowEpisodesComponent;","import React, { Component } from 'react';\r\n\r\nimport { isMobileOnly } from 'react-device-detect';\r\n\r\nimport SocialLinksComponent from '../../shared/SocialLinksComponent/SocialLinksComponent';\r\nimport ShowEpisodesComponent from '../ShowEpisodesComponent/ShowEpisodesComponent';\r\n\r\nimport { Seo } from '../../shared/wrappers/seo/Seo'\r\nimport { BACKEND_URL } from '../../shared/constants';\r\nimport { ShowDto, Show } from '../interfaces';\r\n\r\nimport './ShowComponent.css';\r\n\r\n\r\ninterface ShowComponentProperties {\r\n    slug: string;\r\n}\r\n\r\ninterface ShowComponentState {\r\n    show: Show | null\r\n}\r\n\r\nexport class ShowComponent extends Component<ShowComponentProperties> {\r\n    state: ShowComponentState = {\r\n        show: null\r\n    }\r\n\r\n    parseShow(showDto: ShowDto): Show | null {\r\n        return showDto ? {\r\n            description: showDto.Description,\r\n            showCover: {\r\n                alternativeText: showDto.ShowCover.alternativeText,\r\n                caption: showDto.ShowCover.caption,\r\n                url: showDto.ShowCover.url\r\n            },\r\n            title: showDto.Title,\r\n            showLinks: {\r\n                mixcloud: showDto.ShowLink.mixcloud,\r\n                spotify: showDto.ShowLink.spotify,\r\n                itunes: showDto.ShowLink.itunes,\r\n                castbox: showDto.ShowLink.castbox,\r\n                facebook: showDto.ShowLink.facebook,\r\n                vk: showDto.ShowLink.vk,\r\n                instagram: showDto.ShowLink.instagram,\r\n                telegram: showDto.ShowLink.telegram, \r\n            }\r\n        } : null\r\n    }\r\n\r\n    fetchShow () {\r\n        const { slug } = this.props;\r\n\r\n        fetch(`${ BACKEND_URL }/shows?Slug=${ slug }`)\r\n            .then(response => response.json())\r\n            .then((data: ShowDto[]) => this.parseShow(data[0]))\r\n            .then(show => this.setState({ show }));\r\n    }\r\n    \r\n\r\n    componentDidMount () {\r\n        this.fetchShow();\r\n    }\r\n\r\n    render () {\r\n        const { show } = this.state;\r\n        const { slug } = this.props;\r\n        const imageSrc = show ? show.showCover.url : '';\r\n        const className = `show ${ isMobileOnly ? 'mobile' : 'desktop' }`;\r\n\r\n        return show ? (\r\n            <article className={ className }>\r\n                <Seo meta={{\r\n                        title: show.title,\r\n                        description: show.description,\r\n                        thumbnail: imageSrc\r\n                    }}\r\n                />\r\n                <div className='show-description'>\r\n                    <div className='information'>\r\n                        <h1>{ show.title }</h1>\r\n                        <p>{ show.description }</p>\r\n                        <SocialLinksComponent socialLinks={ show.showLinks }/>\r\n                    </div>\r\n                    <div className='show-cover'>\r\n                        <img src={ imageSrc } loading='lazy' alt={ show.showCover.alternativeText }/>\r\n                    </div>\r\n                </div>\r\n                <ShowEpisodesComponent slug={ slug } />\r\n            </article>\r\n        ) : null;\r\n    }\r\n}\r\n  \r\nexport default ShowComponent;","\r\nimport React from 'react';\r\n\r\nimport { Advertisement } from '../interfaces';\r\n\r\nimport './AdComponent.css';\r\n\r\ninterface AdComponentProperties {\r\n    advertisement: Advertisement | null\r\n}\r\n\r\nfunction AdComponent ({ advertisement }: AdComponentProperties) {\r\n    return (\r\n        <a className='da-container' href={ advertisement?.link }>\r\n            <div className='da-image'>\r\n                <img src={ advertisement?.image.url } alt={ advertisement?.image.alternativeText }/>\r\n            </div>\r\n            <div className='da-text'>\r\n                <h2>\r\n                    { advertisement?.title }\r\n                </h2>\r\n                <p>\r\n                    { advertisement?.text }\r\n                </p>\r\n            </div>\r\n        </a>\r\n    );\r\n}\r\n\r\nexport default AdComponent;\r\n","import React, { Component } from 'react';\r\nimport { Subscription } from 'rxjs';\r\nimport moment from 'moment';\r\n\r\nimport ReactMarkdown from 'react-markdown'\r\n\r\nimport AdComponent from '../../advertisement/AdComponent/AdComponent';\r\nimport adService from '../../advertisement/AdService';\r\n\r\nimport { Seo } from '../../shared/wrappers/seo/Seo'\r\nimport { BACKEND_URL } from '../../shared/constants';\r\nimport { Advertisement } from '../../advertisement/interfaces';\r\nimport { NewsDto, News } from '../interfaces';\r\n\r\nimport './NewsComponent.css';\r\nimport { isMobileOnly } from 'react-device-detect';\r\n\r\n\r\ninterface NewsComponentProperties {\r\n    slug: string;\r\n}\r\n\r\ninterface NewsComponentState {\r\n    news: News | null,\r\n    advertisement: Advertisement | null\r\n}\r\n\r\nconst DATE_FORMAT = 'DD.MM.YYYY';\r\n\r\nexport class NewsComponent extends Component<NewsComponentProperties> {\r\n    state: NewsComponentState = {\r\n        news: null,\r\n        advertisement: null\r\n    };\r\n    subscription: Subscription | null = null;\r\n\r\n    parseNews(newsDto: NewsDto): News | null {\r\n        return newsDto ? {\r\n            title: newsDto.Title,\r\n            content: newsDto.Content,\r\n            category: newsDto.Category,\r\n            wordsBy: newsDto.WordsBy,\r\n            photosBy: newsDto.PhotosBy,\r\n            excerpt:  newsDto.Excerpt,\r\n            slug: newsDto.Slug,\r\n            publishDate: newsDto.PublishDate,\r\n            newsCover: {\r\n                alternativeText: newsDto.PostCover.alternativeText,\r\n                caption: newsDto.PostCover.caption,\r\n                url: newsDto.PostCover.url\r\n            }\r\n        } : null\r\n    }\r\n\r\n    fetchNews () {\r\n        const { slug } = this.props;\r\n\r\n        fetch(`${ BACKEND_URL }/posts?Slug=${ slug }`)\r\n            .then(response => response.json())\r\n            .then((data: NewsDto[]) => this.parseNews(data[0]))\r\n            .then(news => this.setState({ news }));\r\n    }\r\n    \r\n    componentDidMount () {\r\n        this.fetchNews();\r\n        this.subscribeOnGalleryChange();\r\n        adService.fetchAdvertisements();\r\n    }\r\n\r\n    subscribeOnGalleryChange () {\r\n        this.subscription = adService.subscribeOnNewsPostAdUpdate(\r\n            (advertisement: Advertisement) => this.setState({ advertisement })\r\n        );\r\n    }\r\n\r\n    render () {\r\n        const { news, advertisement } = this.state;\r\n        const className = `news ${ isMobileOnly ? 'mobile' : 'desktop' }`;\r\n        const imageSrc = news ? news.newsCover.url : '';\r\n        const imageStyle = {\r\n            backgroundRepeat: 'no-repeat',\r\n            backgroundAttachment: 'fixed',\r\n            backgroundSize: 'cover',\r\n            backgroundImage: `url(${ imageSrc })`\r\n        }\r\n        const date = moment(news?.publishDate).format(DATE_FORMAT);\r\n        const wordsBy = news?.wordsBy ? `| Author: ${ news.wordsBy }` : '';\r\n        const photosBy = news?.photosBy ? `| Ph.: ${ news.photosBy }` : '';\r\n\r\n        return news ? (\r\n            <article className={ className }>\r\n                <Seo meta={{\r\n                        title: news.title,\r\n                        description: news.excerpt,\r\n                        thumbnail: imageSrc\r\n                    }}\r\n                />\r\n                <div className='news-description' style={ imageStyle }>\r\n                    <div className='news-information'>\r\n                        <h1 className='news-title'>{ news.title }</h1>\r\n                        <p className='news-excerpt'>{ news.excerpt }</p>\r\n                        <p className='news-meta'>\r\n                            { `${ date } ${ wordsBy } ${ photosBy }` }\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n                <div className='news-content-container'>\r\n                    <div className='news-content'>\r\n                        <ReactMarkdown source={ news.content } escapeHtml={ false } />\r\n                    </div>\r\n                </div>\r\n                { advertisement ? (<AdComponent advertisement={ advertisement } />) : null }\r\n            </article>\r\n        ) : null;\r\n    }\r\n}\r\n  \r\nexport default NewsComponent;","import React, { Component } from 'react';\r\n\r\nimport { isMobileOnly } from 'react-device-detect';\r\n\r\nimport { BACKEND_URL } from '../shared/constants';\r\nimport { AboutDto, About } from '../about/interfaces';\r\nimport { Seo } from '../shared/wrappers/seo/Seo'\r\n\r\nimport './About.css';\r\n\r\ninterface AboutComponentState {\r\n    about: About | null\r\n}\r\n\r\nexport class AboutComponent extends Component {\r\n    state: AboutComponentState = {\r\n        about: null\r\n    }\r\n\r\n    parseAbout(aboutDto: AboutDto): About | null {\r\n        return aboutDto ? {\r\n            title: aboutDto.Title,\r\n            description: aboutDto.Content,\r\n            aboutCover: {\r\n                alternativeText: aboutDto.Image.alternativeText,\r\n                caption: aboutDto.Image.caption,\r\n                url: aboutDto.Image.url\r\n            }\r\n        } : null\r\n    }\r\n\r\n    fetchAbout () {\r\n        fetch(`${ BACKEND_URL }/about`)\r\n            .then(response => response.json())\r\n            .then((data: AboutDto) => this.parseAbout(data))\r\n            .then(about => this.setState({ about }));\r\n    }\r\n\r\n\r\n    componentDidMount () {\r\n        this.fetchAbout();\r\n    }\r\n\r\n    render () {\r\n        const { about } = this.state;\r\n        const className = `about ${ isMobileOnly ? 'mobile' : 'desktop' }`;\r\n        const imageSrc = about ? about.aboutCover.url : '';\r\n\r\n        return about ? (\r\n            <article className={ className }>\r\n                <Seo meta={{\r\n                        title: about.title,\r\n                        description: about.description,\r\n                        thumbnail: imageSrc\r\n                    }}\r\n                />\r\n                <div className='information'>\r\n                    <h1>{ about.title }</h1>\r\n                    <p>{ about.description }</p>\r\n                </div>\r\n                <div className='image'>\r\n                    <img src={ imageSrc } loading='lazy' alt={ about.aboutCover.alternativeText }/>\r\n                </div>\r\n            </article>\r\n        ) : null;\r\n    }\r\n}\r\n\r\nexport default AboutComponent;","import React, { Component } from 'react';\r\n\r\nimport { isMobileOnly } from 'react-device-detect';\r\n\r\nimport { BACKEND_URL } from '../shared/constants';\r\nimport { DonateDto, Donate } from '../donate/interfaces';\r\nimport { Seo } from '../shared/wrappers/seo/Seo'\r\n\r\nimport './Donate.css';\r\nimport ReactMarkdown from 'react-markdown';\r\n\r\nconst DONATE_SEO_DESCRIPTION = 'Support us!'\r\n\r\ninterface DonateComponentState {\r\n    donate: Donate | null\r\n}\r\n\r\nexport class DonateComponent extends Component {\r\n    state: DonateComponentState = {\r\n        donate: null\r\n    }\r\n\r\n    parseDonate(donateDto: DonateDto): Donate | null {\r\n        return donateDto ? {\r\n            title: donateDto.Title,\r\n            description: donateDto.Content,\r\n            donateCover: {\r\n                alternativeText: donateDto.Image.alternativeText,\r\n                caption: donateDto.Image.caption,\r\n                url: donateDto.Image.url\r\n            }\r\n        } : null\r\n    }\r\n\r\n    fetchDonate () {\r\n        fetch(`${ BACKEND_URL }/donate`)\r\n            .then(response => response.json())\r\n            .then((data: DonateDto) => this.parseDonate(data))\r\n            .then(donate => this.setState({ donate }));\r\n    }\r\n\r\n\r\n    componentDidMount () {\r\n        this.fetchDonate();\r\n    }\r\n\r\n    render () {\r\n        const { donate } = this.state;\r\n        const className = `donate ${ isMobileOnly ? 'mobile' : 'desktop' }`;\r\n        const imageSrc = donate ? donate.donateCover.url : '';\r\n\r\n        return donate ? (\r\n            <article className={ className }>\r\n                 <Seo meta={{\r\n                        title: donate.title,\r\n                        description: DONATE_SEO_DESCRIPTION,\r\n                        thumbnail: imageSrc\r\n                    }}\r\n                />\r\n                <div className='information'>\r\n                    <h1>{ donate.title }</h1>\r\n                    <div className='text-content'>\r\n                        <ReactMarkdown source={ donate.description } escapeHtml={ false } />\r\n                    </div>\r\n                </div>\r\n                <div className='image'>\r\n                    <img src={ imageSrc } loading='lazy' alt={ donate.donateCover.alternativeText }/>\r\n                </div>\r\n            </article>\r\n        ) : null;\r\n    }\r\n}\r\n\r\nexport default DonateComponent;","import React from 'react';\r\n\r\nimport {\r\n    Switch,\r\n    Route,\r\n    withRouter,\r\n} from 'react-router-dom';\r\n\r\nimport StartPageComponent from '../start-page/StartPageComponent';\r\nimport ShowListComponent from '../shows/ShowListComponent';\r\nimport NewsListComponent from '../news/NewsListComponent';\r\nimport ShowComponent from '../shows/ShowComponent/ShowComponent';\r\nimport NewsComponent from '../news/News/NewsComponent';\r\nimport AboutComponent from '../about/About';\r\nimport { SchedulePageComponent } from '../shared/schedule/ScheduleComponent';\r\nimport DonateComponent from '../donate/Donate'\r\n\r\nimport { NewsListTypes } from '../shared/enums';\r\n\r\nimport './Content.css';\r\n\r\nconst SCHEDULE = '/schedule';\r\nconst SHOWS = '/shows';\r\nconst NEWS = '/news';\r\nconst ABOUT = '/about';\r\nconst DONATE = '/donate';\r\n\r\nfunction Content() {\r\n    return (\r\n        <Switch>\r\n            <Route exact path='/' component={ StartPageComponent } />\r\n            <Route exact path={ SCHEDULE } component={ SchedulePageComponent } />\r\n            <Route exact path={ SHOWS } component={ ShowListComponent } />\r\n            <Route path={ `${ SHOWS }/:slug` } component={(routerProps: any) => <ShowComponent slug={ routerProps.match.params.slug } />} />\r\n            <Route exact path={ NEWS } component={ () => <NewsListComponent type={ NewsListTypes.Full } /> } />\r\n            <Route exact path={ `${ NEWS }/:category` } component={ (routerProps: any) => <NewsListComponent type={ NewsListTypes.Full } category={ routerProps.match.params.category } /> } />\r\n            <Route path={ `${ NEWS }/:category/:slug` } component={(routerProps: any) => <NewsComponent slug={routerProps.match.params.slug} />} />\r\n            <Route exact path={ ABOUT } component={ AboutComponent } />\r\n            <Route exact path={ DONATE } component={ DonateComponent } />\r\n        </Switch>\r\n    );\r\n}\r\n  \r\nexport default withRouter(Content);","import React from 'react'\r\n\r\nimport {\r\n    Switch,\r\n    Route,\r\n    withRouter,\r\n} from 'react-router-dom';\r\n\r\nimport { BrowserView, isMobileOnly } from 'react-device-detect';\r\n\r\nimport MenuButton from '../menu/menu-button/MenuButton'\r\nimport PlayerComponent from '../shared/Player/PlayerComponent/PlayerComponent'\r\nimport Content from '../content/Content'\r\nimport { PlayerTypes } from '../shared/enums';\r\n\r\nimport './Main.css'\r\n\r\nfunction Main() {\r\n    const device = isMobileOnly ? 'mobile' : 'desktop';\r\n\r\n    return (\r\n        <main className={ device }>\r\n            <BrowserView>\r\n                <MenuButton />\r\n            </BrowserView>\r\n            <Switch>\r\n                <Route exact path='/' render={\r\n                    props => <PlayerComponent { ...props } playerType={ PlayerTypes.Main }/>\r\n                }/>\r\n            </Switch>\r\n            <Content />\r\n        </main>\r\n    );\r\n}\r\n  \r\nexport default withRouter(Main);","import React, { Component } from 'react';\r\nimport ReactPlayer from 'react-player';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { playerService } from './PlayerService';\r\nimport { PlayerState } from './interfaces';\r\nimport { DEFAULT_PLAYER_STATE, STREAM_URL } from './constants';\r\n\r\nimport './Player.css';\r\n\r\nexport class Player extends Component {\r\n    state = DEFAULT_PLAYER_STATE;\r\n    subscription: Subscription | null = null;\r\n    \r\n    componentDidMount () {\r\n        this.subscribeOnPlayerStateChange();\r\n    }\r\n\r\n    subscribeOnPlayerStateChange () {\r\n        this.subscription = playerService.subscribeOnPlayerStateChanges(\r\n            (data: PlayerState) => this.setState(data)\r\n        );\r\n    }\r\n\r\n    componentWillUnmount () {\r\n        this.subscription?.unsubscribe();\r\n    }\r\n\r\n    render () {\r\n        const {\r\n            playing,\r\n            muted,\r\n            volume\r\n        } = this.state;\r\n\r\n        return (\r\n            <div className='audio'>\r\n                <ReactPlayer\r\n                    url={ STREAM_URL }\r\n                    playing={ playing }\r\n                    muted={ muted }\r\n                    volume={ volume }\r\n                    config={{\r\n                        file: {\r\n                            forceAudio: true\r\n                        }\r\n                    }}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Player;","import React from 'react';\r\n\r\nimport {\r\n    HashRouter,\r\n} from 'react-router-dom';\r\n\r\nimport Header from './components/header/Header';\r\nimport Main from './components/main/Main';\r\nimport Player from './components/shared/Player/Player';\r\n\r\nimport './App.css';\r\nimport { HelmetProvider } from 'react-helmet-async';\r\n\r\n\r\nfunction App() {\r\n    return (\r\n        <HelmetProvider>\r\n            <HashRouter basename='/'>\r\n                <Header />\r\n                <Main />\r\n                <Player />\r\n            </HashRouter>\r\n        </HelmetProvider>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}