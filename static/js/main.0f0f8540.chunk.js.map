{"version":3,"sources":["components/menu/Menu.tsx","components/menu/menu-button/MenuButton.tsx","components/shared/interfaces.ts","components/shared/SocialLinksComponent/SocialLinksComponent.tsx","components/shared/enums.ts","components/shared/Player/constants.ts","components/shared/Player/PlayerService.ts","components/shared/Player/PlayerControls/PlayButton/PlayButton.tsx","components/shared/Player/PlayerControls/VolumeControls/VolumeControls.tsx","components/shared/Player/PlayerComponent/PlayerComponent.tsx","components/header/Header.tsx","components/shared/wrappers/seo/Seo.tsx","components/shared/schedule/enums.ts","components/gallery/GalleryService.ts","components/shared/schedule/ScheduleService.ts","components/gallery/GalleryComponent.tsx","components/news/NewsCardComponent/NewsCardComponent.tsx","components/news/constants.ts","components/advertisement/AdService.ts","components/shared/constants.ts","components/news/NewsListComponent.tsx","components/shared/schedule/ScheduleShowline.tsx","components/shared/schedule/ScheduleComponent.tsx","components/shared/wrappers/scrollable/Scrollable.tsx","components/start-page/StartPageComponent.tsx","components/shows/ShowCardComponent/ShowCardComponent.tsx","components/shows/ShowListComponent.tsx","components/shows/ShowEpisodesComponent/ShowEpisodesComponent.tsx","components/shows/ShowComponent/ShowComponent.tsx","components/advertisement/AdComponent/AdComponent.tsx","components/news/News/NewsComponent.tsx","components/about/About.tsx","components/donate/Donate.tsx","components/content/Content.tsx","components/main/Main.tsx","components/shared/Player/Player.tsx","App.tsx","index.tsx"],"names":["PAGES","Menu","menuRef","wrapperRef","toggleMenu","device","isMobileOnly","className","ref","onClick","aria-label","icon","crossIcon","width","height","map","title","route","toLowerCase","key","to","buildMenuItem","MenuButton","Socials","useState","isOpened","changeMenuStatus","React","createRef","bodyOverflow","current","classList","toggle","document","body","style","overflow","menuIcon","color","SOCIAL_ICONS","Map","Mixcloud","mixcloudIcon","Spotify","spotifyIcon","Itunes","itunesIcon","Castbox","castboxIcon","Facebook","facebookIcon","Vk","vkIcon","Email","mailRu","Instagram","instagramIcon","Telegram","telegramIcon","GooglePlay","googlePlay","SocialLinksComponent","PlayerTypes","NewsListTypes","socialLinks","linkElements","Object","entries","entry","service","href","Date","getTime","get","target","rel","buildSocialLink","DEFAULT_PLAYER_STATE","playing","muted","volume","playerService","state","playerState","track","playerStateSubject","trackNameSubject","connection","WebSocket","process","this","Subject","onmessage","event","onMessage","data","JSON","parse","updateTrackName","now_playing","song","text","onNext","subscribe","name","next","isPlaying","volumeLevel","isMuted","PlayButton","playerType","setPlayingMode","renderIcon","size","Main","pauseIcon","playIcon","FullVolumeIcon","bxsVolumeFull","MuteVolumeIcon","bxsVolumeMute","VolumeControls","setVolumeMode","ReactSlider","thumbClassName","trackClassName","defaultValue","value","Math","trunc","sliderDefaultValue","onChange","changeVolume","PlayerComponent","trackName","subscription","subscribeOnPlayerStateChange","setState","subscribeOnTrackNameChanges","props","isMainPlayer","renderMainPlayer","renderHeaderPlayer","renderPlayer","PureComponent","HEADER_SOCIAL_LINKS","mixcloud","facebook","vk","email","instagram","telegram","Header","exact","path","render","Seo","meta","description","slice","property","content","thumbnail","IndexesOfDay","galleryService","indexGallery","gallerySubject","fetchIndexGallery","setInterval","bind","fetch","then","response","json","parseIndexGallery","updateIndexGallery","dto","photoExhibition","PhotoExhibition","photoExhibitionAuthor","PhotoExhibitionAuthor","photoExhibitionDescription","PhotoExhibitionDescription","photoExhibitionLink","PhotoExhibitionLink","photoExhibitionMedia","PhotoExhibitionMedia","imageDto","mapImageDto","photoExhibitionTitle","PhotoExhibitionTitle","regularGallery","RegularGallery","video","Video","videoEmbedCode","VideoEmbedCode","alternativeText","caption","url","gallery","PeriodicityTypes","indexByDayName","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday","scheduleService","_schedule","_currentShow","scheduleSubject","currentShowSubject","fetchSchedules","updateCurrentShow","weekday","moment","isoWeekday","currentDate","toISOString","substr","schedule","find","showline","type","isBetween","startTime","start","endTime","end","concat","datum","parseScheduleLine","scheduleShows","organizeSchedule","OnAirDateTime","onAirDateTime","weekdays","dayIndex","undefined","push","Title","Description","Type","hide","Hide","link","Link","startDate","StartDate","StartTime","endDate","EndDate","EndTime","periodicity","Periodicity","image","ShowImg","day","forEach","show","shouldShowBeOnAir","sort","sortShowsByDate","first","second","showStartDate","dateOfDay","add","weeksPassed","week","Daily","Weekly","includes","BiWeekly","EveryThirdWeek","SingleTime","startOf","isSame","GalleryComponent","subscribeOnGalleryChange","subscribeOnGalleryChanges","unsubscribe","showArrows","showStatus","showThumbs","showIndicators","autoPlay","infiniteLoop","interval","photo","src","alt","currentShow","graphicContentSelection","Component","LinkElement","newsCard","children","slug","category","TagElement","tag","NewsCardComponent","AdPlacements","excerpt","newsCover","loading","adService","_advertisements","advertisementsSubject","newsCardAdSubject","newsPostAdSubject","fetchAdvertisements","parseAdvertisements","advertisements","updateAdvertisements","ad","placement","isBefore","isActive","AdActive","AdEnd","AdImage","AdLink","AdPlacement","AdStart","AdText","AdTitle","ads","getSpecificAdvertisementByType","NewsList","NewsPost","BASIC_SEO_IMG","NewsListComponent","advertisement","newsCards","page","handleScroll","scrollHeight","scrollTop","fetchNews","newsDto","Excerpt","Category","PostCover","Slug","publishDate","PublishDate","diff","length","cards","sortCardsByDate","filter","toUpperCase","parseNewsCard","handleResponse","adNewsCard","advertisementToNewsCard","onScroll","Full","renderFullNewsList","renderSimpleNewsList","subscribeOnAdvertisementChange","subscribeOnNewsCardAdUpdate","renderNewsCards","ScheduleShowline","showlineWrapper","DAYS_OF_WEEK","ScheduleComponent","selectedDay","scheduleShowlineBuilder","selectDay","renderButtons","index","renderDailySchedule","playlistShow","subscribeOnScheduleChange","subscribeOnScheduleChanges","SchedulePageComponent","withSeo","StartPageComponent","Simple","ShowCardComponent","showCard","showCover","ShowListComponent","showCards","showDto","ShowCover","parseShowCard","fetchShows","renderShowCards","ShowEpisodesComponent","showEpisodes","pictures","date","created_time","playlistDto","parseShowEpisode","playlist","parseShowEpisodes","reverse","episode","split","join","episodes","renderShowEpisode","fetchPlaylist","renderShowEpisodes","ShowComponent","showLinks","ShowLink","spotify","itunes","castbox","parseShow","fetchShow","imageSrc","AdComponent","NewsComponent","news","Content","wordsBy","WordsBy","photosBy","PhotosBy","parseNews","subscribeOnNewsPostAdUpdate","imageStyle","backgroundPosition","backgroundRepeat","backgroundAttachment","backgroundSize","backgroundImage","format","source","escapeHtml","AboutComponent","about","aboutDto","aboutCover","Image","parseAbout","fetchAbout","DonateComponent","donate","donateDto","donateCover","parseDonate","fetchDonate","component","routerProps","match","params","Player","subscribeOnPlayerStateChanges","config","file","forceAudio","Components","App","basename","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0f0f8540.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { isMobileOnly } from 'react-device-detect';\r\n\r\nimport { Icon } from '@iconify/react';\r\nimport crossIcon from '@iconify/icons-gridicons/cross';\r\n\r\nimport './Menu.css'\r\n\r\n\r\nconst PAGES = [\r\n    'News',\r\n    'Shows',\r\n    'Schedule',\r\n    'About'\r\n];\r\n\r\ninterface MenuParameters {\r\n    menuRef: React.RefObject<HTMLDivElement>;\r\n    wrapperRef: React.RefObject<HTMLDivElement>;\r\n    toggleMenu: () => void;\r\n}\r\n\r\nfunction Menu({ menuRef, wrapperRef, toggleMenu }: MenuParameters) {\r\n    const device = isMobileOnly ? 'mobile' : 'desktop';\r\n\r\n    const buildMenuItem = (title: string) => {\r\n        const route = `/${ title.toLowerCase() }`;\r\n\r\n        return (\r\n            <li className='menu-item' key={ title }>\r\n                <Link to={ route } onClick={ toggleMenu }>{ title }</Link>\r\n            </li>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={`wrapper ${ device }`} ref={ wrapperRef } onClick={ toggleMenu } />\r\n            <nav ref={ menuRef } className={ device }>\r\n                <div className='close-button-container'>\r\n                    <button \r\n                        className='close-button'\r\n                        aria-label='Close menu button'\r\n                        onClick={ toggleMenu }\r\n                    >\r\n                        <Icon icon={ crossIcon } width={ 48 } height={ 48 }/>    \r\n                    </button>\r\n                </div>\r\n                <div className='menu-items-container'>\r\n                    <ul className='menu-items'>\r\n                        { PAGES.map(title => buildMenuItem(title)) }\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n        </>     \r\n    );\r\n  }\r\n  \r\n  export default Menu","import React, { useState } from 'react'\r\n\r\nimport { isMobileOnly } from 'react-device-detect';\r\n\r\nimport { Icon } from '@iconify/react';\r\nimport menuIcon from '@iconify/icons-gridicons/menu';\r\n\r\nimport Menu from '../Menu';\r\n\r\nimport './MenuButton.css'\r\n\r\n\r\nconst MENU = 'menu';\r\n\r\nfunction MenuButton() {\r\n    const [ isOpened, changeMenuStatus ] = useState(true);\r\n\r\n    const menuRef = React.createRef<HTMLDivElement>()\r\n    const wrapperRef = React.createRef<HTMLDivElement>()\r\n    \r\n    const toggleMenu = () => {\r\n        const bodyOverflow = isOpened ? 'hidden' : 'unset';\r\n        \r\n        wrapperRef.current?.classList.toggle('wrapper-show');\r\n        menuRef.current?.classList.toggle('menu-open');\r\n        document.body.style.overflow = bodyOverflow;\r\n        changeMenuStatus(!isOpened);\r\n    }\r\n\r\n    const renderAsideButton = () => {\r\n        return (\r\n            <div className='menu-button-aside' onClick={ toggleMenu }>\r\n                <p className='label'>{ MENU }</p>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const renderHeaderButton = () => {\r\n        return (\r\n            <div className='menu-button-header' onClick={ toggleMenu }>\r\n                <Icon icon={ menuIcon } color='white' width={ 40 } height={ 40 }/>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Menu menuRef={ menuRef } wrapperRef={ wrapperRef } toggleMenu={ toggleMenu }/>\r\n            { isMobileOnly ? renderHeaderButton() : renderAsideButton() }\r\n        </>\r\n    );\r\n  }\r\n  \r\n  export default MenuButton","export enum Socials {\r\n    Castbox = 'castbox',\r\n    Itunes = 'itunes',\r\n    Mixcloud = 'mixcloud',\r\n    Spotify = 'spotify',\r\n    Facebook = 'facebook',\r\n    Vk = 'vk',\r\n    Email = 'email',\r\n    Instagram = 'instagram',\r\n    Telegram = 'telegram',\r\n    GooglePlay = 'googlePlay',  \r\n}\r\n\r\nexport type SocialLinks = {\r\n    [key in Socials]?: string;\r\n}\r\n\r\nexport interface StrapiObjectDto {\r\n    createdAt: string;\r\n    id: string;\r\n    updatedAt: string;\r\n    __v: number;\r\n    _id: number;\r\n}\r\n\r\nexport interface ImageDto {\r\n    ext: string;\r\n    hash: string;\r\n    height: number;\r\n    mime: string;\r\n    size: number;\r\n    url: string;\r\n    width: number;\r\n}\r\n\r\nexport interface FormatsDto {\r\n    thumbnail?: ImageDto;\r\n}\r\n\r\nexport interface CoverDto extends StrapiObjectDto, ImageDto {\r\n    alternativeText: string;\r\n    caption: string;\r\n    formats: FormatsDto;\r\n    name: string;\r\n    provider: string;\r\n    related: string[];\r\n}\r\n\r\nexport interface SimpleImage {\r\n    alternativeText?: string;\r\n    caption?: string;\r\n    url?: string;\r\n}\r\n","import React from 'react'\r\n\r\nimport { Icon } from '@iconify/react';\r\nimport mixcloudIcon from '@iconify/icons-cib/mixcloud';\r\nimport spotifyIcon from '@iconify/icons-cib/spotify';\r\nimport itunesIcon from '@iconify/icons-ps/itunes';\r\nimport castboxIcon from '@iconify/icons-simple-icons/castbox';\r\nimport facebookIcon from '@iconify/icons-cib/facebook';\r\nimport vkIcon from '@iconify/icons-cib/vk';\r\nimport mailRu from '@iconify/icons-cib/mail-ru';\r\nimport instagramIcon from '@iconify/icons-cib/instagram';\r\nimport telegramIcon from '@iconify/icons-cib/telegram';\r\nimport googlePlay from '@iconify/icons-cib/google-play';\r\n\r\nimport { SocialLinks, Socials } from '../interfaces';\r\n\r\nimport './SocialLinksComponent.css'\r\n\r\nconst SOCIAL_ICONS = new Map<string, object>([\r\n    [ Socials.Mixcloud, mixcloudIcon ],\r\n    [ Socials.Spotify, spotifyIcon ],\r\n    [ Socials.Itunes, itunesIcon ],\r\n    [ Socials.Castbox, castboxIcon ],\r\n    [ Socials.Facebook, facebookIcon ],\r\n    [ Socials.Vk, vkIcon ],\r\n    [ Socials.Email, mailRu ],\r\n    [ Socials.Instagram, instagramIcon ],\r\n    [ Socials.Telegram, telegramIcon ],\r\n    [ Socials.GooglePlay, googlePlay ],\r\n]);\r\n\r\ninterface SocialLinksProperties {\r\n    socialLinks: SocialLinks;\r\n}\r\n\r\nfunction buildSocialLink (service: string, href: string | undefined) {\r\n    const key = `${ service }-${ new Date().getTime() }`;\r\n    const icon = SOCIAL_ICONS.get(service);\r\n\r\n    return href && icon ? (\r\n        <a  className='social-link'\r\n            target='_blank'\r\n            key={ key }\r\n            href={ href }\r\n            title={ `A link to ${ service }` }\r\n            aria-label={ `A link to ${ service }` }\r\n            rel='noopener noreferrer'\r\n        >\r\n            <Icon className='social-icon' icon={ icon } width='1.5em' color='white'/>\r\n        </a>\r\n    ) : (null);\r\n}\r\n\r\nfunction SocialLinksComponent({ socialLinks }: SocialLinksProperties) {\r\n    const linkElements = Object.entries(socialLinks).map(entry => buildSocialLink(entry[0], entry[1]));\r\n\r\n    return (\r\n        <div className='social-icons'>\r\n            { linkElements }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SocialLinksComponent;","export enum PlayerTypes {\r\n    Main = 'main',\r\n    Header = 'header'\r\n};\r\n\r\nexport enum NewsListTypes {\r\n    Full = 'full',\r\n    Simple = 'simple'\r\n};","import { PlayerState } from './interfaces';\r\n\r\nexport const DEFAULT_PLAYER_STATE: PlayerState = {\r\n    playing: false,\r\n    muted: false,\r\n    volume: 1\r\n};\r\n","import { Subject } from 'rxjs'\r\n\r\nimport { PlayerState } from './interfaces';\r\nimport { DEFAULT_PLAYER_STATE } from './constants';\r\n\r\nclass PlayerService {\r\n    private playerState: PlayerState;\r\n    private track = '';\r\n    private playerStateSubject: Subject<PlayerState>;\r\n    private trackNameSubject: Subject<string>;\r\n    private connection = new WebSocket(process.env.REACT_APP_DATA_URL as string);\r\n\r\n    private onMessage (event: MessageEvent) {\r\n        const data = JSON.parse(event.data);\r\n\r\n        this.updateTrackName(data.now_playing.song.text);\r\n    }\r\n\r\n    constructor (state: PlayerState) {\r\n        this.playerState = state;\r\n        this.playerStateSubject = new Subject();\r\n        this.trackNameSubject = new Subject();\r\n        this.connection.onmessage = event => this.onMessage(event);\r\n    }\r\n\r\n    set playing (isPlaying: boolean) {\r\n        this.playerState.playing = isPlaying;\r\n        this.playerStateSubject.next(this.playerState);\r\n    }\r\n\r\n    get playing () {\r\n        return this.playerState.playing;\r\n    }\r\n\r\n    set volume (volumeLevel: number) {\r\n        this.playerState.volume = volumeLevel;\r\n        this.playerStateSubject.next(this.playerState);\r\n    }\r\n\r\n    get volume () {\r\n        return this.playerState.volume;\r\n    }\r\n\r\n    set muted (isMuted: boolean) {\r\n        this.playerState.muted = isMuted;\r\n        this.playerStateSubject.next(this.playerState);\r\n    }\r\n\r\n    get muted () {\r\n        return this.playerState.muted;\r\n    }\r\n\r\n    get trackName () {\r\n        return this.track;\r\n    }\r\n\r\n    subscribeOnPlayerStateChanges (onNext: Function) {\r\n        return this.playerStateSubject.subscribe(data => onNext(data));\r\n    }\r\n\r\n    subscribeOnTrackNameChanges (onNext: Function) {\r\n        return this.trackNameSubject.subscribe(data => onNext(data));\r\n    }\r\n\r\n    async updateTrackName (name: string = '') {\r\n        if (name !== this.track) {\r\n            this.track = name;\r\n            this.trackNameSubject.next(this.track);\r\n        }\r\n    }\r\n}\r\n\r\nconst playerService = new PlayerService(DEFAULT_PLAYER_STATE);\r\n\r\nexport { playerService };","import React, { useState } from 'react';\r\n\r\nimport { Icon } from '@iconify/react';\r\nimport playIcon from '@iconify/icons-el/play';\r\nimport pauseIcon from '@iconify/icons-el/pause';\r\n\r\nimport { playerService } from '../../PlayerService';\r\nimport { PlayerProps } from '../../interfaces';\r\nimport { PlayerTypes } from '../../../enums';\r\n\r\nimport './PlayButton.css';\r\n\r\n\r\nconst SMALL_ICON = 10;\r\nconst LARGE_ICON = 35;\r\n\r\nfunction PlayButton({ playerType }: PlayerProps) {\r\n    const [ playing, setPlayingMode ] = useState(playerService.playing);\r\n\r\n    const togglePlayingMode = () => {\r\n        playerService.playing = !playerService.playing;\r\n        setPlayingMode(playerService.playing);\r\n    }\r\n\r\n    const isMainPlayer = () => {\r\n        return playerType === PlayerTypes.Main;\r\n    }\r\n\r\n    const renderIcon = (icon: object) => {\r\n        const size = isMainPlayer() ? LARGE_ICON : SMALL_ICON;\r\n\r\n        return <Icon icon={ icon } width={ size } height={ size }/>;\r\n    }\r\n\r\n    return (\r\n        <button \r\n            className='play-button'\r\n            aria-label='Play radio button'\r\n            onClick={ togglePlayingMode }\r\n        >\r\n            { playing ? renderIcon(pauseIcon) : renderIcon(playIcon) }\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default PlayButton;","import React, { useState } from 'react';\r\n\r\nimport ReactSlider from 'react-slider';\r\nimport { Icon } from '@iconify/react';\r\nimport bxsVolumeFull from '@iconify/icons-bx/bxs-volume-full';\r\nimport bxsVolumeMute from '@iconify/icons-bx/bxs-volume-mute';\r\n\r\nimport { playerService } from '../../PlayerService';\r\n\r\nimport './VolumeControls.css';\r\n\r\nconst FullVolumeIcon = <Icon icon={ bxsVolumeFull } width={ 16 } height={ 16 } color='#ffffff'/>;\r\nconst MuteVolumeIcon = <Icon icon={ bxsVolumeMute } width={ 16 } height={ 16 } color='#ffffff'/>;\r\n\r\nfunction VolumeControls() {\r\n    const [ muted, setVolumeMode ] = useState(playerService.muted);\r\n    \r\n    const toggleVolumeMode = () => {\r\n        playerService.muted = !playerService.muted;\r\n        setVolumeMode(playerService.muted);\r\n    }\r\n\r\n    const changeVolume = (value: any) => {\r\n        playerService.volume = value / 100;\r\n    }\r\n\r\n    const sliderDefaultValue = () => {\r\n        const value = playerService.volume * 100;\r\n        \r\n        return Math.trunc(value);\r\n    }\r\n\r\n    return (\r\n        <div className='volume-controls'>\r\n            <button \r\n                className='volume-mode-button'\r\n                aria-label='Toggle volume button'\r\n                onClick={ toggleVolumeMode }\r\n            >\r\n                { muted ? FullVolumeIcon : MuteVolumeIcon }\r\n            </button>\r\n            <ReactSlider\r\n                className='horizontal-slider'\r\n                thumbClassName='thumb'\r\n                trackClassName='track'\r\n                defaultValue={ sliderDefaultValue() }\r\n                onChange={ value => changeVolume(value)}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default VolumeControls;","import React, { PureComponent } from 'react';\r\n\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { isMobileOnly } from 'react-device-detect';\r\n\r\nimport PlayButton from '../PlayerControls/PlayButton/PlayButton';\r\nimport VolumeControls from '../PlayerControls/VolumeControls/VolumeControls';\r\nimport { playerService } from '../PlayerService';\r\nimport { PlayerProps } from '../interfaces';\r\nimport { PlayerTypes } from '../../enums';\r\n\r\nimport './PlayerComponent.css';\r\n\r\n\r\nconst ONAIR = 'onair';\r\n\r\nexport class PlayerComponent extends PureComponent<PlayerProps> {\r\n    state = {\r\n        trackName: ''\r\n    };\r\n    subscription: Subscription | null = null;\r\n\r\n    get isMainPlayer () {\r\n        return this.props.playerType === PlayerTypes.Main;\r\n    }\r\n\r\n    get className () {\r\n        return `${ this.props.playerType }-player ${ isMobileOnly ? 'mobile' : 'desktop' }`;\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.subscribeOnPlayerStateChange();\r\n        this.setState({\r\n            trackName: playerService.trackName\r\n        });\r\n    }\r\n\r\n    subscribeOnPlayerStateChange () {\r\n        this.subscription = playerService.subscribeOnTrackNameChanges(\r\n            (trackName: string) => this.setState({ trackName })\r\n        );\r\n    }\r\n    \r\n    renderMainPlayer (trackName: string) {\r\n        return (\r\n            <>\r\n                <div className='controls-container'>\r\n                    <PlayButton playerType={ this.props.playerType }/>\r\n                    <VolumeControls />\r\n                </div>\r\n                <p className='onair'>{ ONAIR }</p>\r\n                <p className='track-title'>{ trackName }</p>\r\n            </>\r\n        );\r\n    }\r\n\r\n    renderHeaderPlayer (trackName: string) {\r\n        return (\r\n            <>\r\n                <PlayButton playerType={ this.props.playerType }/>\r\n                <div className='track-title'>\r\n                    <p>{ trackName }</p>\r\n                </div>\r\n                <VolumeControls />\r\n            </>\r\n        );\r\n    }\r\n\r\n    renderPlayer () {\r\n        const {\r\n            trackName\r\n        } = this.state;\r\n\r\n        return this.isMainPlayer ?\r\n            this.renderMainPlayer(trackName) :\r\n            this.renderHeaderPlayer(trackName);\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div className={ this.className }>\r\n                { this.renderPlayer() }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PlayerComponent;\r\n","import React from 'react'\r\n\r\nimport {\r\n  Link,\r\n  Switch,\r\n  Route\r\n} from 'react-router-dom';\r\n\r\nimport { BrowserView, isMobileOnly } from 'react-device-detect';\r\n\r\nimport MenuButton from '../menu/menu-button/MenuButton';\r\nimport SocialLinksComponent from '../shared/SocialLinksComponent/SocialLinksComponent';\r\nimport PlayerComponent from '../shared/Player/PlayerComponent/PlayerComponent';\r\nimport { SocialLinks } from '../shared/interfaces';\r\nimport { PlayerTypes } from '../shared/enums';\r\n\r\nimport './Header.css'\r\n\r\n\r\nconst RADIO_PLATO = 'Radio Plato';\r\nconst DONATE = 'Donate';\r\n\r\nconst HEADER_SOCIAL_LINKS: SocialLinks = {\r\n    mixcloud: 'https://www.mixcloud.com/radioplato/',\r\n    facebook: 'https://www.facebook.com/radioplato.by/',\r\n    vk: 'https://vk.com/radioplato',\r\n    email: 'mailto:hey@radioplato.by',\r\n    instagram: 'https://www.instagram.com/radio_plato/',\r\n    telegram: 'https://t.me/radioplato',\r\n    googlePlay: 'https://play.google.com/store/apps/details?id=com.radioplato'\r\n}\r\n\r\nfunction Header() {\r\n    const className = `header-container ${ isMobileOnly ? 'mobile' : 'desktop' }`;\r\n\r\n    return (\r\n        <header className={ className }>\r\n            { isMobileOnly && <MenuButton /> }\r\n            <Link to='/' className='logo-text'>{ RADIO_PLATO }</Link>\r\n            <BrowserView>\r\n                <div className='social-container'>\r\n                    <Switch>\r\n                        <Route exact path='/' render={\r\n                            props => (<SocialLinksComponent { ...props } socialLinks={ HEADER_SOCIAL_LINKS }/>)\r\n                        }/>\r\n                        <Route path='/' render={\r\n                            props => (<PlayerComponent { ...props } playerType={ PlayerTypes.Header }/>)\r\n                        }/>\r\n                    </Switch>\r\n                    <Link to='/donate' className='donate-link'>{ DONATE }</Link>\r\n                </div>\r\n            </BrowserView>\r\n        </header>\r\n    );\r\n}\r\n  \r\nexport default Header;","import React from 'react';\r\n\r\nimport { Helmet } from 'react-helmet-async';\r\n\r\n\r\nconst DESCRIPTION_LIMIT = 150;\r\n\r\ninterface MetaTagsInformation {\r\n    title?: string;\r\n    thumbnail?: string;\r\n    url?: string;\r\n    description?: string;\r\n}\r\n\r\ninterface SeoProperties {\r\n    meta?: MetaTagsInformation\r\n}\r\n\r\nfunction Seo ({ meta }: SeoProperties) {\r\n  const description = meta?.description && meta.description.slice(0, DESCRIPTION_LIMIT) + '...';\r\n\r\n  return (\r\n    <Helmet>\r\n        <title>{`Radio Plato | ${ meta?.title }`}</title>\r\n        <meta property='og:title' content={ meta?.title } />\r\n        <meta property='og:image' content={ meta?.thumbnail } />\r\n        <meta property='og:description' content={ description } />\r\n        <meta name='description' content={ description } />\r\n    </Helmet>\r\n  )\r\n}\r\n\r\nfunction withSeo (meta: MetaTagsInformation, children: React.ReactNode) {\r\n    return (\r\n        <>\r\n            <Seo meta={ meta }/>\r\n            { children }\r\n        </>\r\n    )\r\n}\r\n\r\nexport { Seo, withSeo };","export enum IndexesOfDay {\r\n    Monday = 0,\r\n    Tuesday,\r\n    Wednesday,\r\n    Thursday,\r\n    Friday,\r\n    Saturday,\r\n    Sunday\r\n};","import { Subject } from 'rxjs';\r\n\r\nimport { IndexGallery, IndexGalleryDto } from './interfaces';\r\nimport { CoverDto, SimpleImage } from '../shared/interfaces';\r\n\r\n\r\nconst GALLERY_REQUEST_INTERVAL = 300000;\r\n\r\nclass GalleryService {\r\n    private indexGallery: IndexGallery | null = null;\r\n    private gallerySubject: Subject<IndexGallery | null>;\r\n\r\n    constructor () {\r\n        this.gallerySubject = new Subject();\r\n\r\n        this.fetchIndexGallery();\r\n        setInterval(this.fetchIndexGallery.bind(this), GALLERY_REQUEST_INTERVAL);\r\n    }\r\n\r\n    get gallery (): IndexGallery | null {\r\n        return this.indexGallery;\r\n    }\r\n\r\n    set gallery (gallery: IndexGallery | null) {\r\n        this.indexGallery = gallery;\r\n        gallery && this.gallerySubject.next(gallery);\r\n    }\r\n\r\n    subscribeOnGalleryChanges (onNext: Function) {\r\n        return this.gallerySubject.subscribe(data => onNext(data));\r\n    }\r\n\r\n    async fetchIndexGallery () {\r\n        await fetch(`${ process.env.REACT_APP_BACKEND_URL }/index-gallery`)\r\n            .then(response => response.json())\r\n            .then(data => this.parseIndexGallery(data))\r\n            .then(indexGallery => this.updateIndexGallery(indexGallery));\r\n    }\r\n\r\n    private parseIndexGallery (dto: IndexGalleryDto) {\r\n        return {\r\n            photoExhibition: dto.PhotoExhibition,\r\n            photoExhibitionAuthor: dto.PhotoExhibitionAuthor,\r\n            photoExhibitionDescription: dto.PhotoExhibitionDescription,\r\n            photoExhibitionLink: dto.PhotoExhibitionLink,\r\n            photoExhibitionMedia: dto.PhotoExhibitionMedia.map(imageDto => this.mapImageDto(imageDto)),\r\n            photoExhibitionTitle: dto.PhotoExhibitionTitle,\r\n            regularGallery: dto.RegularGallery.map(imageDto => this.mapImageDto(imageDto)),\r\n            video: dto.Video,\r\n            videoEmbedCode: dto.VideoEmbedCode,\r\n        }\r\n    }\r\n\r\n    private mapImageDto (imageDto: CoverDto): SimpleImage {\r\n        return {\r\n            alternativeText: imageDto.alternativeText,\r\n            caption: imageDto.caption,\r\n            url: imageDto.url\r\n        };\r\n    }\r\n\r\n    private updateIndexGallery (indexGallery: IndexGallery) {\r\n        this.gallery = indexGallery;\r\n    }\r\n}\r\n\r\nconst galleryService = new GalleryService();\r\n\r\nexport default galleryService;","import { Subject } from 'rxjs'\r\nimport moment from 'moment';\r\n\r\nimport { ScheduleShow, ScheduleDto } from './interfaces';\r\nimport { IndexesOfDay } from './enums';\r\n\r\n\r\nconst DATA_REQUEST_INTERVAL = 14400000;\r\nconst CURRENT_SHOW_REFRESH_INTERVAL = 300000;\r\n\r\nenum PeriodicityTypes {\r\n    SingleTime = 'SingleTime',\r\n    Daily = 'Daily',\r\n    Weekly = 'Weekly',\r\n    BiWeekly = 'BiWeekly',\r\n    EveryThirdWeek = 'Every3rdWeek',\r\n    Monthly = 'Monthly'\r\n}\r\n\r\nconst indexByDayName = new Map([\r\n    [ 'Monday', IndexesOfDay.Monday ],\r\n    [ 'Tuesday', IndexesOfDay.Tuesday ],\r\n    [ 'Wednesday', IndexesOfDay.Wednesday ],\r\n    [ 'Thursday', IndexesOfDay.Thursday ],\r\n    [ 'Friday', IndexesOfDay.Friday ],\r\n    [ 'Saturday', IndexesOfDay.Saturday ],\r\n    [ 'Sunday', IndexesOfDay.Sunday ],\r\n]);\r\n\r\nclass ScheduleService {\r\n    private _schedule: ScheduleShow[][] = [ [], [], [], [], [], [], [] ];\r\n    private _currentShow: ScheduleShow | undefined;\r\n    private scheduleSubject: Subject<ScheduleShow[][]>;\r\n    private currentShowSubject: Subject<ScheduleShow>;\r\n\r\n    constructor () {\r\n        this.scheduleSubject = new Subject();\r\n        this.currentShowSubject = new Subject();\r\n\r\n        this.fetchSchedules();\r\n        this.updateCurrentShow();\r\n        setInterval(this.fetchSchedules.bind(this), DATA_REQUEST_INTERVAL);\r\n        setInterval(this.updateCurrentShow.bind(this), CURRENT_SHOW_REFRESH_INTERVAL);\r\n    }\r\n\r\n    set schedule (schedule: ScheduleShow[][]) {\r\n        this._schedule = schedule;\r\n        this.scheduleSubject.next(schedule);\r\n    }\r\n\r\n    get schedule () {\r\n        return this._schedule;\r\n    }\r\n\r\n    get currentShow () {\r\n        return this._currentShow;\r\n    }\r\n\r\n    set currentShow (show: ScheduleShow | undefined) {\r\n        this._currentShow = show;\r\n        this.currentShowSubject.next(show)\r\n    }\r\n\r\n    updateCurrentShow () {\r\n        const weekday = moment().isoWeekday() - 1;\r\n        const currentDate = new Date().toISOString().substr(0, 10);\r\n        const start = (showline: ScheduleShow) => moment(`${ currentDate } ${ showline.startTime }`);\r\n        const end = (showline: ScheduleShow) => moment(`${ currentDate } ${ showline.endTime }`);\r\n\r\n        this._currentShow = this.schedule[weekday].find(showline => {\r\n            return showline.type === 'Show' && moment().isBetween(start(showline), end(showline));\r\n        });\r\n    }\r\n\r\n    async fetchSchedules () {\r\n        await fetch(`${ process.env.REACT_APP_BACKEND_URL }/schedules`)\r\n            .then(response => response.json())\r\n            .then(data => [].concat(...data.map((datum: ScheduleDto) => this.parseScheduleLine(datum))))\r\n            .then(scheduleShows => this.organizeSchedule(scheduleShows));\r\n    }\r\n\r\n    subscribeOnScheduleChanges (onNext: Function) {\r\n        return this.scheduleSubject.subscribe(data => onNext(data));\r\n    }\r\n\r\n    subscribeOnCurrentShowChanges (onNext: Function) {\r\n        return this.currentShowSubject.subscribe(data => onNext(data));\r\n    }\r\n\r\n    private parseScheduleLine (dto: ScheduleDto): ScheduleShow[] {\r\n        return dto.OnAirDateTime.map(onAirDateTime => {\r\n            const weekdays = [];\r\n\r\n            for (const [ key, value ] of Object.entries(onAirDateTime)) {\r\n                const dayIndex = indexByDayName.get(key);\r\n                \r\n                value && dayIndex !== undefined && weekdays.push(dayIndex);\r\n            }\r\n    \r\n            return {\r\n                title: dto.Title,\r\n                description: dto.Description,\r\n                type: dto.Type,\r\n                hide: dto.Hide,\r\n                link: dto.Link,\r\n                startDate: onAirDateTime.StartDate,\r\n                startTime: onAirDateTime.StartTime,\r\n                endDate: onAirDateTime.EndDate,\r\n                endTime: onAirDateTime.EndTime,\r\n                periodicity: onAirDateTime.Periodicity,\r\n                weekdays,\r\n                image: dto ? {\r\n                    alternativeText: dto.ShowImg?.alternativeText,\r\n                    caption: dto.ShowImg?.caption,\r\n                    url: dto.ShowImg?.url\r\n                } : null\r\n            };\r\n        });\r\n    }\r\n\r\n    private organizeSchedule (scheduleShows: ScheduleShow[]) {\r\n        const schedule: ScheduleShow[][]  = [];\r\n\r\n        for (let day = IndexesOfDay.Monday; day <= IndexesOfDay.Sunday; day++) {\r\n            schedule[day] = [];\r\n\r\n            scheduleShows.forEach(show => {\r\n                this.shouldShowBeOnAir(show, day) && schedule[day].push(show)\r\n            });\r\n\r\n            schedule[day].sort(this.sortShowsByDate);\r\n        }\r\n\r\n        this.schedule = schedule;\r\n    }\r\n\r\n    private sortShowsByDate (first: ScheduleShow, second: ScheduleShow) {\r\n        return +first.startTime.slice(0, 2) - +second.startTime.slice(0, 2);\r\n    }\r\n\r\n    private shouldShowBeOnAir (show: ScheduleShow, day: IndexesOfDay): boolean {\r\n        if (show.hide) {\r\n            return false;\r\n        }\r\n\r\n        const showStartDate = moment(show.startDate);\r\n        const dateOfDay = moment().add(moment().isoWeekday() - day + 1, 'days');\r\n        const weeksPassed = +(moment().week() - showStartDate.week());\r\n\r\n        switch (show.periodicity) {\r\n            case PeriodicityTypes.Daily: \r\n                return show.weekdays.includes(day);\r\n            case PeriodicityTypes.Weekly:\r\n                return show.weekdays.includes(day);\r\n            case PeriodicityTypes.BiWeekly:\r\n                return show.weekdays.includes(day) && weeksPassed % 2 === 0;\r\n            case PeriodicityTypes.EveryThirdWeek:\r\n                return show.weekdays.includes(day) && weeksPassed % 3 === 0;\r\n            case PeriodicityTypes.SingleTime:\r\n                return showStartDate.startOf('day').isSame(dateOfDay.startOf('day'));\r\n            default: return false;\r\n        }\r\n    }\r\n}\r\n\r\nconst scheduleService = new ScheduleService();\r\n\r\nexport { scheduleService };","import React, { Component } from 'react';\r\nimport ReactPlayer from 'react-player'\r\nimport { Subscription } from 'rxjs';\r\nimport { Carousel } from 'react-responsive-carousel';\r\n\r\nimport galleryService from './GalleryService';\r\nimport { IndexGallery } from './interfaces';\r\n\r\nimport { scheduleService } from '../shared/schedule/ScheduleService';\r\nimport 'react-responsive-carousel/lib/styles/carousel.min.css';\r\nimport './GalleryComponent.css';\r\n\r\n\r\ninterface GalleryComponentState {\r\n    gallery: IndexGallery | null\r\n}\r\n\r\nclass GalleryComponent extends Component {\r\n    state: GalleryComponentState = { gallery: null };\r\n    subscription: Subscription | null = null;\r\n\r\n    componentDidMount() {\r\n        this.subscribeOnGalleryChange();\r\n        galleryService.fetchIndexGallery();\r\n    }\r\n\r\n    subscribeOnGalleryChange () {\r\n        this.subscription = galleryService.subscribeOnGalleryChanges(\r\n            (gallery: IndexGallery) => this.setState({ gallery })\r\n        );\r\n    }\r\n\r\n    componentWillUnmount () {\r\n        this.subscription?.unsubscribe();\r\n    }\r\n\r\n    graphicContentSelection () {\r\n        const { gallery } = this.state;\r\n\r\n        if (!gallery) {\r\n            return null;\r\n        }\r\n\r\n        if (gallery?.video) {\r\n            return (\r\n                <ReactPlayer url={ gallery.videoEmbedCode } />\r\n            );\r\n        }\r\n\r\n        if (gallery?.photoExhibition) {\r\n            return (\r\n                <Carousel className='carousel'\r\n                          showArrows={ false }\r\n                          showStatus={ false }\r\n                          showThumbs={ false }\r\n                          showIndicators={ false }\r\n                          autoPlay={ true }\r\n                          infiniteLoop={ true }\r\n                          interval={ 30000 }\r\n                >\r\n                    { gallery.photoExhibitionMedia.map(photo => (\r\n                        <div key={ photo.url }>\r\n                            <img src={ photo.url }\r\n                                 alt={ photo.alternativeText }\r\n                            />\r\n                        </div>\r\n                    ))}\r\n                </Carousel>\r\n            );\r\n        }\r\n\r\n        if (scheduleService.currentShow && scheduleService.currentShow.image) {\r\n            return (\r\n                <img className='gallery-image'\r\n                     src={ scheduleService.currentShow.image.url }\r\n                     alt={ scheduleService.currentShow.image.alternativeText }\r\n                ></img>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <Carousel className='carousel'\r\n                      showArrows={ false }\r\n                      showStatus={ false }\r\n                      showThumbs={ false }\r\n                      showIndicators={ false }\r\n                      autoPlay={ true }\r\n                      infiniteLoop={ true }\r\n                      interval={ 30000 }\r\n            >\r\n                { gallery.regularGallery.map(photo => (\r\n                    <div key={ photo.url }>\r\n                        <img src={ photo.url }\r\n                             alt={ photo.alternativeText }\r\n                        />\r\n                    </div>\r\n                ))}\r\n            </Carousel>\r\n        );\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div className='visual-container'>\r\n                { this.graphicContentSelection() }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n  \r\nexport default GalleryComponent;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { isMobileOnly } from 'react-device-detect';\r\n\r\nimport { NewsCard } from '../interfaces';\r\nimport { AD_CATEGORY } from '../constants';\r\n\r\nimport './NewsCardComponent.css';\r\n\r\n\r\ninterface LinkElementParameters {\r\n    children: React.ReactNode;\r\n    newsCard: NewsCard;\r\n}\r\n\r\ninterface TagElementParameters {\r\n    category: string;\r\n}\r\n\r\ninterface NewsCardParameters {\r\n    newsCard: NewsCard;\r\n    type?: string;\r\n}\r\n\r\nfunction LinkElement({ newsCard, children }: LinkElementParameters) {\r\n    const slug = newsCard.slug;\r\n    const route = `/news/${ newsCard.category.toLowerCase() }/${ slug }`;\r\n\r\n    return slug ?\r\n        <Link to={ route } title={ newsCard.title }>{ children }</Link> :\r\n        <a href={ newsCard.link } title={ newsCard.title } rel='noopener noreferrer' target='_blank'>{ children }</a>;\r\n}\r\n\r\nfunction TagElement({ category }: TagElementParameters) {\r\n    const link = `/news/${ category.toLowerCase() }`;\r\n    const tag = `∙ ${ category } ∙`;\r\n\r\n    return category !== AD_CATEGORY ? <Link to={ link } title={ category } className='news-card-tag'>{ tag }</Link> : <p className='news-card-tag'>{ tag }</p>\r\n}\r\n\r\nfunction NewsCardComponent({ newsCard, type }: NewsCardParameters) {\r\n    const {\r\n        excerpt,\r\n        newsCover,\r\n        title,\r\n        category\r\n    } = newsCard;\r\n    const device = isMobileOnly ? 'mobile' : 'desktop';\r\n\r\n    return (\r\n        <div className={ `news-card ${ type } ${ device }` }>\r\n            <div className='news-card-image'>\r\n                <LinkElement newsCard={ newsCard }>\r\n                    <img src={ newsCover.url } loading='lazy' alt={ newsCover.alternativeText }/>\r\n                </LinkElement>\r\n            </div>\r\n            <div className='news-card-text'>\r\n                <TagElement category={ category } />\r\n                <LinkElement newsCard={ newsCard }>\r\n                    <h2>{ title }</h2>\r\n                    <p className='news-card-excerpt'>{ excerpt }</p>\r\n                </LinkElement>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n  \r\nexport default NewsCardComponent;","export const AD_CATEGORY = 'Ad';\r\n","import { AdvertisementDto, Advertisement } from './interfaces';\r\nimport { Subject } from 'rxjs/internal/Subject';\r\nimport moment from 'moment';\r\n\r\n\r\nenum AdPlacements {\r\n    NewsList = 'NewsList',\r\n    NewsPost = 'NewsPost'\r\n}\r\n\r\nclass AdService {\r\n    private _advertisements: Advertisement[] = [];\r\n    private advertisementsSubject: Subject<Advertisement[] | null>;\r\n    private newsCardAdSubject: Subject<Advertisement | null>;\r\n    private newsPostAdSubject: Subject<Advertisement | null>;\r\n\r\n    constructor () {\r\n        this.advertisementsSubject = new Subject();\r\n        this.newsCardAdSubject = new Subject();\r\n        this.newsPostAdSubject = new Subject();\r\n\r\n        this.fetchAdvertisements();\r\n    }\r\n\r\n    get advertisements () {\r\n        return this._advertisements;\r\n    }\r\n\r\n    set advertisements (ads: any) {\r\n        this._advertisements = ads;\r\n\r\n        this.advertisementsSubject.next(this.advertisements);\r\n        this.newsCardAdSubject.next(this.getSpecificAdvertisementByType(AdPlacements.NewsList));\r\n        this.newsPostAdSubject.next(this.getSpecificAdvertisementByType(AdPlacements.NewsPost));\r\n    }\r\n\r\n    subscribeOnAdvertisementsChanges (onNext: Function) {\r\n        return this.advertisementsSubject.subscribe(data => onNext(data));\r\n    }\r\n\r\n    subscribeOnNewsCardAdUpdate (onNext: Function) {\r\n        return this.newsCardAdSubject.subscribe(data => onNext(data));\r\n    }\r\n\r\n    subscribeOnNewsPostAdUpdate (onNext: Function) {\r\n        return this.newsPostAdSubject.subscribe(data => onNext(data));\r\n    }\r\n\r\n    async fetchAdvertisements () {\r\n        await fetch(`${ process.env.REACT_APP_BACKEND_URL }/advertisements`)\r\n            .then(response => response.json())\r\n            .then(data => this.parseAdvertisements(data))\r\n            .then(advertisements => this.updateAdvertisements(advertisements));\r\n    }\r\n\r\n    private getSpecificAdvertisementByType (type: string) {\r\n        return this.advertisements.find((ad: Advertisement) => ad.placement === type && moment().isBefore(moment(ad.endDate)));\r\n    }\r\n\r\n    private parseAdvertisements (data: AdvertisementDto[]) {\r\n        return data.map(ad => {\r\n            return {\r\n                isActive: ad.AdActive,\r\n                endDate: ad.AdEnd,\r\n                image: {\r\n                    alternativeText: ad.AdImage.alternativeText,\r\n                    caption: ad.AdImage.caption,\r\n                    url: ad.AdImage.url\r\n                },\r\n                link: ad.AdLink,\r\n                placement: ad.AdPlacement,\r\n                startDate: ad.AdStart,\r\n                text: ad.AdText,\r\n                title: ad.AdTitle\r\n            }\r\n        });\r\n    }\r\n\r\n    private updateAdvertisements (advertisements: any) {\r\n        this.advertisements = advertisements;\r\n    }\r\n}\r\n\r\nconst adService = new AdService();\r\n\r\nexport default adService;","export const BASIC_SEO_IMG = 'https://res.cloudinary.com/radio-plato/image/upload/v1595347571/og_image_plato_0158fb0d85.jpg';","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Subscription } from 'rxjs';\r\nimport moment from 'moment';\r\n\r\nimport NewsCardComponent from './NewsCardComponent/NewsCardComponent';\r\nimport adService from './../advertisement/AdService';\r\n\r\nimport { NewsDto, NewsCard } from './interfaces';\r\nimport { Advertisement } from '../advertisement/interfaces';\r\nimport { NewsListTypes } from '../shared/enums';\r\nimport { AD_CATEGORY } from './constants';\r\nimport { BASIC_SEO_IMG } from '../shared/constants';\r\nimport { Seo } from '../shared/wrappers/seo/Seo'\r\n\r\nimport './NewsListComponent.css';\r\nimport { isMobileOnly } from 'react-device-detect';\r\n\r\n\r\nconst NEWS_LIMIT = 12;\r\nconst VISIBILITY_LIMIT = 800;\r\nconst NEWS = 'NEWS';\r\nconst NEWS_LIST_SEO_TITLE = 'News'\r\nconst NEWS_LIST_SEO_DESCRIPTION = 'The best place to read about electronic music, both local and global.'\r\n\r\ninterface NewsListComponentProperties {\r\n    type: string;\r\n    category?: string;\r\n}\r\n\r\nexport class NewsListComponent extends Component<NewsListComponentProperties> {\r\n    state = {\r\n        advertisement: null,\r\n        newsCards: [],\r\n        page: 0,\r\n        loading: false,\r\n        end: false\r\n    }\r\n    subscription: Subscription | null = null;\r\n\r\n    parseNewsCard (newsDto: NewsDto): NewsCard {\r\n        return {\r\n            excerpt: newsDto.Excerpt,\r\n            category: newsDto.Category,\r\n            newsCover: {\r\n                alternativeText: newsDto.PostCover.alternativeText,\r\n                caption: newsDto.PostCover.caption,\r\n                url: newsDto.PostCover.url\r\n            },\r\n            slug: newsDto.Slug,\r\n            title: newsDto.Title,\r\n            publishDate: newsDto.PublishDate\r\n        };\r\n    }\r\n\r\n    sortCardsByDate (first: NewsCard, second: NewsCard) {\r\n        return moment(second.publishDate).diff(moment(first.publishDate));\r\n    }\r\n\r\n    handleResponse (newsCards: NewsCard[]) {\r\n        if (newsCards && newsCards.length) {\r\n            const cards = [ ...this.state.newsCards, ...newsCards ].sort(this.sortCardsByDate);\r\n\r\n            this.setState({\r\n                newsCards: cards,\r\n                loading: false,\r\n                page: this.state.page + 1\r\n            });\r\n        } else {\r\n            this.setState({ end: true });\r\n        }\r\n    }\r\n\r\n    fetchNews () {\r\n        const { page } = this.state;\r\n        const { category } = this.props;\r\n        const start = page * NEWS_LIMIT;\r\n        const filter = category ? `Category=${ category[0].toUpperCase() + category.slice(1) }&` : '';\r\n\r\n        this.setState({ loading: true });\r\n\r\n        fetch(`${ process.env.REACT_APP_BACKEND_URL }/posts?${ filter }_sort=PublishDate:DESC&_start=${ start }&_limit=${ NEWS_LIMIT }`)\r\n            .then(response => response.json())\r\n            .then(data => data.map((datum: NewsDto) => this.parseNewsCard(datum)))\r\n            .then(newsCards => this.handleResponse(newsCards));\r\n    }\r\n\r\n    advertisementToNewsCard (advertisement: Advertisement | null) {\r\n        return advertisement ? {\r\n            excerpt: advertisement ? advertisement.text : '',\r\n            category: AD_CATEGORY,\r\n            newsCover: advertisement ? advertisement.image : {},\r\n            link: advertisement ? advertisement.link : '',\r\n            title: advertisement ? advertisement.title : '',\r\n            publishDate: advertisement ? advertisement.startDate : ''\r\n        } : null;\r\n    }\r\n\r\n    renderSimpleNewsList (newsCards: NewsCard[]) {\r\n        return newsCards.length ? (\r\n            <div className='simple-news'>\r\n                <div className='news-list-title'>\r\n                    <Link to='/news'>\r\n                        <p>{ NEWS }</p>\r\n                    </Link>\r\n                </div>\r\n                { newsCards.slice(0, 3).map(newsCard => (\r\n                    <NewsCardComponent key={ newsCard.slug } newsCard={ newsCard } type='simple' />\r\n                )) }\r\n            </div>\r\n        ) : null;\r\n    }\r\n\r\n    renderFullNewsList (newsCards: NewsCard[], advertisement: Advertisement | null) {\r\n        const className = `news-list ${ isMobileOnly ? 'mobile' : 'desktop' }`;\r\n        const adNewsCard = this.advertisementToNewsCard(advertisement);\r\n\r\n        return newsCards.length ? (\r\n            <div onScroll={ this.handleScroll } className={ className }>\r\n                <Seo meta={{\r\n                        title: NEWS_LIST_SEO_TITLE,\r\n                        description: NEWS_LIST_SEO_DESCRIPTION,\r\n                        thumbnail: BASIC_SEO_IMG\r\n                    }}\r\n                />\r\n                <div className='news-cards'>\r\n                    <div className='latest-news'>\r\n                        <div className='main-news'>\r\n                            <NewsCardComponent key={ newsCards[0].slug } newsCard={ newsCards[0] } type='main' />\r\n                        </div>\r\n                        <div className='fresh-news'>\r\n                            { adNewsCard ? (<NewsCardComponent newsCard={ adNewsCard } type='fresh'/>) : null }\r\n                            { newsCards.slice(1, 5).map(newsCard => (\r\n                                <NewsCardComponent key={ newsCard.slug } newsCard={ newsCard } type='fresh' />\r\n                            )) }\r\n                            \r\n                        </div>\r\n                    </div>\r\n                    <div className='other-news'>\r\n                        { newsCards.slice(5, newsCards.length).map(newsCard => (\r\n                            <NewsCardComponent key={ newsCard.slug } newsCard={ newsCard } type='other' />\r\n                        )) }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ) : null;\r\n    }\r\n\r\n    renderNewsCards (newsCards: NewsCard[], advertisement: Advertisement | null) {\r\n        const { type } = this.props;\r\n\r\n        return type === NewsListTypes.Full ? this.renderFullNewsList(newsCards, advertisement) : this.renderSimpleNewsList(newsCards);\r\n    }\r\n\r\n    componentDidMount () {\r\n        adService.fetchAdvertisements();\r\n        this.fetchNews();\r\n        this.subscribeOnAdvertisementChange();\r\n    }\r\n\r\n    subscribeOnAdvertisementChange () {\r\n        this.subscription = adService.subscribeOnNewsCardAdUpdate(\r\n            (advertisement: Advertisement) => this.setState({ advertisement })\r\n        );\r\n    }\r\n\r\n    handleScroll = (event: any) => {\r\n        const { loading, end } = this.state;\r\n\r\n        if (event.target.scrollHeight - event.target.scrollTop < VISIBILITY_LIMIT) {\r\n            !loading && !end && this.fetchNews();\r\n        }\r\n    }\r\n\r\n    render () {\r\n        const {\r\n            advertisement,\r\n            newsCards\r\n        } = this.state;\r\n\r\n        return this.renderNewsCards(newsCards, advertisement);\r\n    }\r\n}\r\n  \r\nexport default NewsListComponent;","import React from 'react'\r\n\r\nimport { BrowserView, isMobileOnly } from 'react-device-detect';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { ScheduleShow } from './interfaces'\r\n\r\nimport './ScheduleShowline.css'\r\n\r\n\r\ninterface ScheduleShowlineProperties {\r\n    showline: ScheduleShow\r\n}\r\n\r\nfunction showlineWrapper (showline: ScheduleShow) {\r\n    const {\r\n        title,\r\n        description,\r\n        link,\r\n        startTime,\r\n        endTime\r\n    } = showline;\r\n    const interval = startTime && endTime ? `${ startTime.slice(0, 5) } - ${ endTime.slice(0, 5) }` : '';\r\n    const href = link ? link : null;\r\n    const className = `show-title-container ${ isMobileOnly ? 'mobile' : 'desktop' }`;\r\n\r\n    const content = (\r\n        <div className={ className }>\r\n            <div className='show-date'>\r\n                <p>{ interval }</p>\r\n            </div>\r\n            <div className='show-title'>\r\n                <p>{ title ? title : '' }</p>\r\n            </div>\r\n            <BrowserView>\r\n                <div className='show-desc'>\r\n                    <p>{ description ? description : '' }</p>\r\n                </div>\r\n            </BrowserView>\r\n        </div>\r\n    );\r\n\r\n    return href ? (<Link to={ href }>{ content }</Link>) : (<div>{ content }</div>);\r\n}\r\n\r\nconst ScheduleShowline = ({ showline }: ScheduleShowlineProperties) => showlineWrapper(showline);\r\n\r\nexport default ScheduleShowline ","import React, { Component } from 'react'\r\n\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { isMobileOnly } from 'react-device-detect';\r\n\r\nimport moment from 'moment';\r\n\r\nimport ScheduleShowline from './ScheduleShowline'\r\n\r\nimport { scheduleService } from './ScheduleService';\r\n\r\nimport { ScheduleShow } from './interfaces';\r\nimport { IndexesOfDay } from './enums';\r\n\r\nimport { withSeo } from '../wrappers/seo/Seo'\r\nimport { withScroll } from '../wrappers/scrollable/Scrollable';\r\nimport { BASIC_SEO_IMG } from '../../shared/constants';\r\nimport './ScheduleComponent.css'\r\n\r\n\r\nconst DAYS_OF_WEEK = [\r\n    'MON',\r\n    'TUE',\r\n    'WED',\r\n    'THU',\r\n    'FRI',\r\n    'SAT',\r\n    'SUN'\r\n];\r\n\r\nconst SCHEDULE = 'SCHEDULE';\r\nconst SCHEDULE_SEO_TITLE = 'Schedule'\r\nconst SCHEDULE_SEO_DESCRIPTION = 'We broadcast 24/7, here is what you will hear.'\r\n\r\nclass ScheduleComponent extends Component {\r\n    subscription: Subscription | null = null;\r\n    state = {\r\n        schedule: scheduleService.schedule,\r\n        selectedDay: moment().isoWeekday() - 1\r\n    };\r\n\r\n    componentDidMount () {\r\n        this.subscribeOnScheduleChange();\r\n    }\r\n\r\n    subscribeOnScheduleChange () {\r\n        this.subscription = scheduleService.subscribeOnScheduleChanges(\r\n            (schedule: ScheduleShow[][]) => this.setState({ schedule })\r\n        );\r\n    }\r\n\r\n    scheduleShowlineBuilder = (showline: ScheduleShow) => {\r\n        return (\r\n            <ScheduleShowline \r\n                showline={ showline }\r\n                key={ `${ showline.title }-${ showline.startDate }-${ showline.endDate }` }\r\n            />\r\n        );\r\n    }\r\n\r\n    selectDay = (day: IndexesOfDay) => {\r\n        this.setState({\r\n            selectedDay: day\r\n        });\r\n    };\r\n\r\n    componentWillUnmount () {\r\n        this.subscription?.unsubscribe();\r\n    }\r\n\r\n    renderButtons = () => {\r\n        const { selectedDay } = this.state;\r\n\r\n        return DAYS_OF_WEEK.map((day, index) => (\r\n            <button className={ `schedule-day-button ${ selectedDay === index ? 'active' : ''}` }\r\n                    onClick={ () => this.selectDay(index) }\r\n                    key={ `${ day.toLowerCase() }-${ index }`}\r\n            >\r\n                { day }\r\n            </button>\r\n        ))\r\n    }\r\n\r\n    renderDailySchedule = () => {\r\n        const {\r\n            schedule,\r\n            selectedDay\r\n        } = this.state;\r\n\r\n        return schedule[selectedDay].length ?\r\n            schedule[selectedDay].map((playlistShow: ScheduleShow) => this.scheduleShowlineBuilder(playlistShow)) :\r\n            [];\r\n    }\r\n\r\n    render () {\r\n        const className = `schedule-container ${ isMobileOnly ? 'mobile' : 'desktop' }`;\r\n\r\n        return (\r\n            <div className={ className }>\r\n                <div className='schedule-headline-container'>        \r\n                    <div className='schedule-title'>\r\n                        <p>{ SCHEDULE }</p>\r\n                    </div>\r\n                    <div className='schedule-day'>\r\n                        { this.renderButtons() }\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    { this.renderDailySchedule() }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst SchedulePageComponent = () => withSeo({\r\n    title: SCHEDULE_SEO_TITLE,\r\n    description: SCHEDULE_SEO_DESCRIPTION,\r\n    thumbnail: BASIC_SEO_IMG\r\n}, withScroll(<ScheduleComponent />));\r\n  \r\nexport { ScheduleComponent, SchedulePageComponent };","import React from 'react';\r\n\r\nimport './Scrollable.css';\r\n\r\n\r\nfunction withScroll (children: React.ReactNode) {\r\n    return (\r\n        <div className='scrollable-container'>\r\n            { children }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport { withScroll };","import React from 'react';\r\nimport { isMobileOnly } from 'react-device-detect';\r\n\r\nimport { Seo } from '../shared/wrappers/seo/Seo'\r\nimport GalleryComponent from '../gallery/GalleryComponent';\r\nimport NewsListComponent from '../news/NewsListComponent';\r\nimport { ScheduleComponent } from '../shared/schedule/ScheduleComponent';\r\nimport { BASIC_SEO_IMG } from '../shared/constants';\r\n\r\nimport { NewsListTypes } from '../shared/enums';\r\n\r\nimport './StartPageComponent.css';\r\n\r\nconst INDEX_SEO_TITLE = 'From Minsk with ❤'\r\nconst INDEX_SEO_DESCRIPTION = 'Independent internet radio based in Minsk (Belarus). We stream classic bangers and authentic world music as well as modern indie and rhythmic DJ edits.'\r\n\r\nfunction StartPageComponent() {\r\n    const device = isMobileOnly ? 'mobile' : 'desktop';\r\n    const className = `start-page-container ${ device }`\r\n\r\n    return (\r\n        <div className={ className }>\r\n                <Seo meta={{\r\n                        title: INDEX_SEO_TITLE,\r\n                        description: INDEX_SEO_DESCRIPTION,\r\n                        thumbnail: BASIC_SEO_IMG\r\n                    }}\r\n                />\r\n            { isMobileOnly ? null : <GalleryComponent /> }\r\n            <NewsListComponent type={ NewsListTypes.Simple }/>\r\n            <ScheduleComponent />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default StartPageComponent;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { isMobileOnly } from 'react-device-detect';\r\n\r\nimport { ShowCard } from '../interfaces';\r\n\r\nimport './ShowCardComponent.css';\r\n\r\ninterface ShowCardParameters {\r\n    showCard: ShowCard\r\n}\r\n\r\nfunction ShowCardComponent({ showCard }: ShowCardParameters) {\r\n    const {\r\n        excerpt,\r\n        showCover,\r\n        slug,\r\n        title,\r\n    } = showCard;\r\n    const className = `show-card ${ isMobileOnly ? 'mobile' : 'desktop' }`;\r\n    const route = `/shows/${ slug }`;\r\n\r\n    return (\r\n        <Link to={ route } title={ title }>\r\n            <div className={ className }>\r\n                <img src={ showCover.url } loading='lazy' alt={ showCover.alternativeText }/>\r\n                <h2>{ title }</h2>\r\n                <p>{ excerpt }</p>\r\n            </div>    \r\n        </Link>\r\n    );\r\n}\r\n  \r\nexport default ShowCardComponent;","import React, { Component } from 'react';\r\n\r\nimport { isMobileOnly } from 'react-device-detect';\r\n\r\nimport ShowCardComponent from './ShowCardComponent/ShowCardComponent';\r\n\r\nimport { Seo } from '../shared/wrappers/seo/Seo'\r\nimport { BASIC_SEO_IMG } from '../shared/constants';\r\nimport { ShowDto, ShowCard } from './interfaces';\r\n\r\nimport './ShowListComponent.css';\r\n\r\n\r\nconst SHOW_LIST_SEO_TITLE = 'Shows'\r\nconst SHOW_LIST_SEO_DESCRIPTION = 'Awesome shows from Radio Plato crew'\r\n\r\n\r\nexport class ShowListComponent extends Component {\r\n    state = {\r\n        showCards: []\r\n    }\r\n\r\n    parseShowCard (showDto: ShowDto): ShowCard {\r\n        return {\r\n            excerpt: showDto.Excerpt,\r\n            showCover: {\r\n                alternativeText: showDto.ShowCover.alternativeText,\r\n                caption: showDto.ShowCover.caption,\r\n                url: showDto.ShowCover.url\r\n            },\r\n            slug: showDto.Slug,\r\n            title: showDto.Title\r\n        };\r\n    }\r\n\r\n    fetchShows () {\r\n        fetch(`${ process.env.REACT_APP_BACKEND_URL }/shows`)\r\n            .then(response => response.json())\r\n            .then(data => data.map((datum: ShowDto) => this.parseShowCard(datum)))\r\n            .then(showCards => this.setState({ showCards }));\r\n    }\r\n\r\n    renderShowCards (showCards: ShowCard[]) {\r\n        return showCards.map(showCard => (<ShowCardComponent key={ showCard.slug } showCard={ showCard }></ShowCardComponent>))\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.fetchShows();\r\n    }\r\n\r\n    render () {\r\n        const {\r\n            showCards\r\n        } = this.state;\r\n        const className = `show-list ${ isMobileOnly ? 'mobile' : 'desktop' }`;\r\n\r\n        return (\r\n            <div className={ className }>\r\n                 <Seo meta={{\r\n                        title: SHOW_LIST_SEO_TITLE,\r\n                        description: SHOW_LIST_SEO_DESCRIPTION,\r\n                        thumbnail: BASIC_SEO_IMG\r\n                    }}\r\n                />\r\n                <h1>Shows</h1>\r\n                <div className='show-cards'>\r\n                    { this.renderShowCards(showCards) }\r\n                </div>\r\n            </div>\r\n            \r\n        );\r\n    }\r\n}\r\n  \r\nexport default ShowListComponent;","import React, { Component } from 'react';\r\n\r\nimport { isMobileOnly } from 'react-device-detect';\r\n\r\nimport './ShowEpisodesComponent.css';\r\nimport { ShowEpisode } from '../interfaces';\r\n\r\n\r\ninterface ShowEpisodesProperties {\r\n    slug: string;\r\n}\r\n\r\nexport class ShowEpisodesComponent extends Component<ShowEpisodesProperties> {\r\n    state = {\r\n        showEpisodes: []\r\n    }\r\n\r\n    parseShowEpisode (datum: any): ShowEpisode {\r\n        return {\r\n            title: datum.name,\r\n            image: datum.pictures['1024wx1024h'],\r\n            url: datum.url,\r\n            date: datum.created_time,\r\n            slug: datum.slug\r\n        }\r\n    }\r\n\r\n    parseShowEpisodes (playlistDto: any): ShowEpisode[] | null {\r\n        if (!playlistDto || !playlistDto.data || !playlistDto.data.length) {\r\n            return null;\r\n        }\r\n        \r\n        return playlistDto.data.map((datum: any) => this.parseShowEpisode(datum));\r\n    }\r\n\r\n    fetchPlaylist () {\r\n        const { slug } = this.props;\r\n        \r\n        fetch(`https://api.mixcloud.com/radioplato/playlists/${ slug }/cloudcasts/`)\r\n            .then(response => response.json())\r\n            .then(playlist => this.parseShowEpisodes(playlist)?.reverse().slice(0, 9))\r\n            .then(showEpisodes => this.setState({ showEpisodes }));\r\n    }\r\n\r\n    renderShowEpisode (episode: ShowEpisode) {\r\n        const key = `${ episode.slug }-${ new Date().getTime() }`;\r\n        const date = new Date(episode.date).toISOString().slice(0,10).split('-').reverse().join('.');\r\n\r\n        return (\r\n            <a key={ key } href={ episode.url } rel='noopener noreferrer' target='_blank'>\r\n                <div className='episode-container'>\r\n                    <img className='episode-image' src={ episode.image } alt={ episode.title }/>\r\n                    <div className='episode-information'>\r\n                        <h3>{ episode.title }</h3>\r\n                        <p>{ date }</p>\r\n                    </div>\r\n                </div>\r\n            </a>\r\n        );\r\n    }\r\n\r\n    renderShowEpisodes (episodes: ShowEpisode[]) {\r\n        return episodes ? (\r\n            <>\r\n                <h2>Latest Episodes</h2>\r\n                <div className='episode-cards'>\r\n                    { episodes.map(episode => this.renderShowEpisode(episode)) }\r\n                </div>\r\n            </>\r\n        ) : null;\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.fetchPlaylist();\r\n    }\r\n\r\n    render () {\r\n        const {\r\n            showEpisodes\r\n        } = this.state;\r\n        const className = `episode-list ${ isMobileOnly ? 'mobile' : 'desktop' }`;\r\n\r\n        return (\r\n            <div className={ className }>\r\n                { this.renderShowEpisodes(showEpisodes) }\r\n            </div>\r\n            \r\n        );\r\n    }\r\n}\r\n  \r\nexport default ShowEpisodesComponent;","import React, { Component } from 'react';\r\n\r\nimport { isMobileOnly } from 'react-device-detect';\r\n\r\nimport SocialLinksComponent from '../../shared/SocialLinksComponent/SocialLinksComponent';\r\nimport ShowEpisodesComponent from '../ShowEpisodesComponent/ShowEpisodesComponent';\r\n\r\nimport { Seo } from '../../shared/wrappers/seo/Seo'\r\nimport { ShowDto, Show } from '../interfaces';\r\n\r\nimport './ShowComponent.css';\r\n\r\n\r\ninterface ShowComponentProperties {\r\n    slug: string;\r\n}\r\n\r\ninterface ShowComponentState {\r\n    show: Show | null\r\n}\r\n\r\nexport class ShowComponent extends Component<ShowComponentProperties> {\r\n    state: ShowComponentState = {\r\n        show: null\r\n    }\r\n\r\n    parseShow(showDto: ShowDto): Show | null {\r\n        return showDto ? {\r\n            description: showDto.Description,\r\n            showCover: {\r\n                alternativeText: showDto.ShowCover.alternativeText,\r\n                caption: showDto.ShowCover.caption,\r\n                url: showDto.ShowCover.url\r\n            },\r\n            title: showDto.Title,\r\n            showLinks: {\r\n                mixcloud: showDto.ShowLink.mixcloud,\r\n                spotify: showDto.ShowLink.spotify,\r\n                itunes: showDto.ShowLink.itunes,\r\n                castbox: showDto.ShowLink.castbox,\r\n                facebook: showDto.ShowLink.facebook,\r\n                vk: showDto.ShowLink.vk,\r\n                instagram: showDto.ShowLink.instagram,\r\n                telegram: showDto.ShowLink.telegram, \r\n            }\r\n        } : null\r\n    }\r\n\r\n    fetchShow () {\r\n        const { slug } = this.props;\r\n\r\n        fetch(`${ process.env.REACT_APP_BACKEND_URL }/shows?Slug=${ slug }`)\r\n            .then(response => response.json())\r\n            .then((data: ShowDto[]) => this.parseShow(data[0]))\r\n            .then(show => this.setState({ show }));\r\n    }\r\n    \r\n\r\n    componentDidMount () {\r\n        this.fetchShow();\r\n    }\r\n\r\n    render () {\r\n        const { show } = this.state;\r\n        const { slug } = this.props;\r\n        const imageSrc = show ? show.showCover.url : '';\r\n        const className = `show ${ isMobileOnly ? 'mobile' : 'desktop' }`;\r\n\r\n        return show ? (\r\n            <article className={ className }>\r\n                <Seo meta={{\r\n                        title: show.title,\r\n                        description: show.description,\r\n                        thumbnail: imageSrc\r\n                    }}\r\n                />\r\n                <div className='show-description'>\r\n                    <div className='information'>\r\n                        <h1>{ show.title }</h1>\r\n                        <p>{ show.description }</p>\r\n                        <SocialLinksComponent socialLinks={ show.showLinks }/>\r\n                    </div>\r\n                    <div className='show-cover'>\r\n                        <img src={ imageSrc } loading='lazy' alt={ show.showCover.alternativeText }/>\r\n                    </div>\r\n                </div>\r\n                <ShowEpisodesComponent slug={ slug } />\r\n            </article>\r\n        ) : null;\r\n    }\r\n}\r\n  \r\nexport default ShowComponent;","\r\nimport React from 'react';\r\n\r\nimport { Advertisement } from '../interfaces';\r\n\r\nimport './AdComponent.css';\r\n\r\ninterface AdComponentProperties {\r\n    advertisement: Advertisement | null\r\n}\r\n\r\nfunction AdComponent ({ advertisement }: AdComponentProperties) {\r\n    return (\r\n        <a className='da-container' href={ advertisement?.link } rel='noopener noreferrer' target='_blank'>\r\n            <div className='da-image'>\r\n                <img src={ advertisement?.image.url } alt={ advertisement?.image.alternativeText }/>\r\n            </div>\r\n            <div className='da-text'>\r\n                <h2>\r\n                    { advertisement?.title }\r\n                </h2>\r\n                <p>\r\n                    { advertisement?.text }\r\n                </p>\r\n            </div>\r\n        </a>\r\n    );\r\n}\r\n\r\nexport default AdComponent;\r\n","import React, { Component } from 'react';\r\nimport { Subscription } from 'rxjs';\r\nimport moment from 'moment';\r\n\r\nimport ReactMarkdown from 'react-markdown'\r\n\r\nimport AdComponent from '../../advertisement/AdComponent/AdComponent';\r\nimport adService from '../../advertisement/AdService';\r\n\r\nimport { Seo } from '../../shared/wrappers/seo/Seo'\r\nimport { Advertisement } from '../../advertisement/interfaces';\r\nimport { NewsDto, News } from '../interfaces';\r\n\r\nimport './NewsComponent.css';\r\nimport { isMobileOnly } from 'react-device-detect';\r\n\r\n\r\ninterface NewsComponentProperties {\r\n    slug: string;\r\n}\r\n\r\ninterface NewsComponentState {\r\n    news: News | null,\r\n    advertisement: Advertisement | null\r\n}\r\n\r\nconst DATE_FORMAT = 'DD.MM.YYYY';\r\n\r\nexport class NewsComponent extends Component<NewsComponentProperties> {\r\n    state: NewsComponentState = {\r\n        news: null,\r\n        advertisement: null\r\n    };\r\n    subscription: Subscription | null = null;\r\n\r\n    parseNews(newsDto: NewsDto): News | null {\r\n        return newsDto ? {\r\n            title: newsDto.Title,\r\n            content: newsDto.Content,\r\n            category: newsDto.Category,\r\n            wordsBy: newsDto.WordsBy,\r\n            photosBy: newsDto.PhotosBy,\r\n            excerpt:  newsDto.Excerpt,\r\n            slug: newsDto.Slug,\r\n            publishDate: newsDto.PublishDate,\r\n            newsCover: {\r\n                alternativeText: newsDto.PostCover.alternativeText,\r\n                caption: newsDto.PostCover.caption,\r\n                url: newsDto.PostCover.url\r\n            }\r\n        } : null\r\n    }\r\n\r\n    fetchNews () {\r\n        const { slug } = this.props;\r\n\r\n        fetch(`${ process.env.REACT_APP_BACKEND_URL }/posts?Slug=${ slug }`)\r\n            .then(response => response.json())\r\n            .then((data: NewsDto[]) => this.parseNews(data[0]))\r\n            .then(news => this.setState({ news }));\r\n    }\r\n    \r\n    componentDidMount () {\r\n        this.fetchNews();\r\n        this.subscribeOnGalleryChange();\r\n        adService.fetchAdvertisements();\r\n    }\r\n\r\n    subscribeOnGalleryChange () {\r\n        this.subscription = adService.subscribeOnNewsPostAdUpdate(\r\n            (advertisement: Advertisement) => this.setState({ advertisement })\r\n        );\r\n    }\r\n\r\n    render () {\r\n        const { news, advertisement } = this.state;\r\n        const className = `news ${ isMobileOnly ? 'mobile' : 'desktop' }`;\r\n        const imageSrc = news ? news.newsCover.url : '';\r\n        const imageStyle = {\r\n            backgroundPosition: 'center',\r\n            backgroundRepeat: 'no-repeat',\r\n            backgroundAttachment: 'fixed',\r\n            backgroundSize: 'cover',\r\n            backgroundImage: `url(${ imageSrc })`\r\n        }\r\n        const date = moment(news?.publishDate).format(DATE_FORMAT);\r\n        const wordsBy = news?.wordsBy ? `| Author: ${ news.wordsBy }` : '';\r\n        const photosBy = news?.photosBy ? `| Photo by: ${ news.photosBy }` : '';\r\n\r\n        return news ? (\r\n            <article className={ className }>\r\n                <Seo meta={{\r\n                        title: news.title,\r\n                        description: news.excerpt,\r\n                        thumbnail: imageSrc\r\n                    }}\r\n                />\r\n                <div className='news-description' style={ imageStyle }>\r\n                    <div className='news-information'>\r\n                        <h1 className='news-title'>{ news.title }</h1>\r\n                        <p className='news-excerpt'>{ news.excerpt }</p>\r\n                        <p className='news-meta'>\r\n                            { `${ date } ${ wordsBy } ${ photosBy }` }\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n                <div className='news-content-container'>\r\n                    <div className='news-content'>\r\n                        <ReactMarkdown source={ news.content } escapeHtml={ false } />\r\n                    </div>\r\n                </div>\r\n                { advertisement ? (<AdComponent advertisement={ advertisement } />) : null }\r\n            </article>\r\n        ) : null;\r\n    }\r\n}\r\n  \r\nexport default NewsComponent;","import React, { Component } from 'react';\r\n\r\nimport { isMobileOnly } from 'react-device-detect';\r\n\r\nimport { AboutDto, About } from '../about/interfaces';\r\nimport { Seo } from '../shared/wrappers/seo/Seo'\r\n\r\nimport './About.css';\r\n\r\ninterface AboutComponentState {\r\n    about: About | null\r\n}\r\n\r\nexport class AboutComponent extends Component {\r\n    state: AboutComponentState = {\r\n        about: null\r\n    }\r\n\r\n    parseAbout(aboutDto: AboutDto): About | null {\r\n        return aboutDto ? {\r\n            title: aboutDto.Title,\r\n            description: aboutDto.Content,\r\n            aboutCover: {\r\n                alternativeText: aboutDto.Image.alternativeText,\r\n                caption: aboutDto.Image.caption,\r\n                url: aboutDto.Image.url\r\n            }\r\n        } : null\r\n    }\r\n\r\n    fetchAbout () {\r\n        fetch(`${ process.env.REACT_APP_BACKEND_URL }/about`)\r\n            .then(response => response.json())\r\n            .then((data: AboutDto) => this.parseAbout(data))\r\n            .then(about => this.setState({ about }));\r\n    }\r\n\r\n\r\n    componentDidMount () {\r\n        this.fetchAbout();\r\n    }\r\n\r\n    render () {\r\n        const { about } = this.state;\r\n        const className = `about ${ isMobileOnly ? 'mobile' : 'desktop' }`;\r\n        const imageSrc = about ? about.aboutCover.url : '';\r\n\r\n        return about ? (\r\n            <article className={ className }>\r\n                <Seo meta={{\r\n                        title: about.title,\r\n                        description: about.description,\r\n                        thumbnail: imageSrc\r\n                    }}\r\n                />\r\n                <div className='information'>\r\n                    <h1>{ about.title }</h1>\r\n                    <p>{ about.description }</p>\r\n                </div>\r\n                <div className='image'>\r\n                    <img src={ imageSrc } loading='lazy' alt={ about.aboutCover.alternativeText }/>\r\n                </div>\r\n            </article>\r\n        ) : null;\r\n    }\r\n}\r\n\r\nexport default AboutComponent;","import React, { Component } from 'react';\r\n\r\nimport { isMobileOnly } from 'react-device-detect';\r\n\r\nimport { DonateDto, Donate } from '../donate/interfaces';\r\nimport { Seo } from '../shared/wrappers/seo/Seo'\r\n\r\nimport './Donate.css';\r\nimport ReactMarkdown from 'react-markdown';\r\n\r\nconst DONATE_SEO_DESCRIPTION = 'Support us!'\r\n\r\ninterface DonateComponentState {\r\n    donate: Donate | null\r\n}\r\n\r\nexport class DonateComponent extends Component {\r\n    state: DonateComponentState = {\r\n        donate: null\r\n    }\r\n\r\n    parseDonate(donateDto: DonateDto): Donate | null {\r\n        return donateDto ? {\r\n            title: donateDto.Title,\r\n            description: donateDto.Content,\r\n            donateCover: {\r\n                alternativeText: donateDto.Image.alternativeText,\r\n                caption: donateDto.Image.caption,\r\n                url: donateDto.Image.url\r\n            }\r\n        } : null\r\n    }\r\n\r\n    fetchDonate () {\r\n        fetch(`${ process.env.REACT_APP_BACKEND_URL }/donate`)\r\n            .then(response => response.json())\r\n            .then((data: DonateDto) => this.parseDonate(data))\r\n            .then(donate => this.setState({ donate }));\r\n    }\r\n\r\n\r\n    componentDidMount () {\r\n        this.fetchDonate();\r\n    }\r\n\r\n    render () {\r\n        const { donate } = this.state;\r\n        const className = `donate ${ isMobileOnly ? 'mobile' : 'desktop' }`;\r\n        const imageSrc = donate ? donate.donateCover.url : '';\r\n\r\n        return donate ? (\r\n            <article className={ className }>\r\n                 <Seo meta={{\r\n                        title: donate.title,\r\n                        description: DONATE_SEO_DESCRIPTION,\r\n                        thumbnail: imageSrc\r\n                    }}\r\n                />\r\n                <div className='information'>\r\n                    <h1>{ donate.title }</h1>\r\n                    <div className='text-content'>\r\n                        <ReactMarkdown source={ donate.description } escapeHtml={ false } />\r\n                    </div>\r\n                </div>\r\n                <div className='image'>\r\n                    <img src={ imageSrc } loading='lazy' alt={ donate.donateCover.alternativeText }/>\r\n                </div>\r\n            </article>\r\n        ) : null;\r\n    }\r\n}\r\n\r\nexport default DonateComponent;","import React from 'react';\r\n\r\nimport {\r\n    Switch,\r\n    Route,\r\n} from 'react-router-dom';\r\n\r\nimport StartPageComponent from '../start-page/StartPageComponent';\r\nimport ShowListComponent from '../shows/ShowListComponent';\r\nimport NewsListComponent from '../news/NewsListComponent';\r\nimport ShowComponent from '../shows/ShowComponent/ShowComponent';\r\nimport NewsComponent from '../news/News/NewsComponent';\r\nimport AboutComponent from '../about/About';\r\nimport { SchedulePageComponent } from '../shared/schedule/ScheduleComponent';\r\nimport DonateComponent from '../donate/Donate'\r\n\r\nimport { NewsListTypes } from '../shared/enums';\r\n\r\nimport './Content.css';\r\n\r\nconst SCHEDULE = '/schedule';\r\nconst SHOWS = '/shows';\r\nconst NEWS = '/news';\r\nconst ABOUT = '/about';\r\nconst DONATE = '/donate';\r\n\r\nfunction Content() {\r\n    return (\r\n        <Switch>\r\n            <Route exact path='/' component={ StartPageComponent } />\r\n            <Route exact path={ SCHEDULE } component={ SchedulePageComponent } />\r\n            <Route exact path={ SHOWS } component={ ShowListComponent } />\r\n            <Route path={ `${ SHOWS }/:slug` } component={(routerProps: any) => <ShowComponent slug={ routerProps.match.params.slug } />} />\r\n            <Route exact path={ NEWS } component={ () => <NewsListComponent type={ NewsListTypes.Full } /> } />\r\n            <Route exact path={ `${ NEWS }/:category` } component={ (routerProps: any) => <NewsListComponent type={ NewsListTypes.Full } category={ routerProps.match.params.category } /> } />\r\n            <Route path={ `${ NEWS }/:category/:slug` } component={(routerProps: any) => <NewsComponent slug={routerProps.match.params.slug} />} />\r\n            <Route exact path={ ABOUT } component={ AboutComponent } />\r\n            <Route exact path={ DONATE } component={ DonateComponent } />\r\n        </Switch>\r\n    );\r\n}\r\n  \r\nexport default Content;","import React from 'react'\r\n\r\nimport {\r\n    Switch,\r\n    Route,\r\n} from 'react-router-dom';\r\n\r\nimport { BrowserView, isMobileOnly } from 'react-device-detect';\r\n\r\nimport MenuButton from '../menu/menu-button/MenuButton'\r\nimport PlayerComponent from '../shared/Player/PlayerComponent/PlayerComponent'\r\nimport Content from '../content/Content'\r\nimport { PlayerTypes } from '../shared/enums';\r\n\r\nimport './Main.css'\r\n\r\nfunction Main() {\r\n    const device = isMobileOnly ? 'mobile' : 'desktop';\r\n\r\n    return (\r\n        <main className={ device }>\r\n            <BrowserView>\r\n                <MenuButton />\r\n            </BrowserView>\r\n            <Switch>\r\n                <Route exact path='/' render={\r\n                    props => <PlayerComponent { ...props } playerType={ PlayerTypes.Main }/>\r\n                }/>\r\n            </Switch>\r\n            <Content />\r\n        </main>\r\n    );\r\n}\r\n  \r\nexport default Main;","import React, { Component } from 'react';\r\nimport ReactPlayer from 'react-player';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { playerService } from './PlayerService';\r\nimport { PlayerState } from './interfaces';\r\nimport { DEFAULT_PLAYER_STATE } from './constants';\r\n\r\nimport './Player.css';\r\n\r\nexport class Player extends Component {\r\n    state = DEFAULT_PLAYER_STATE;\r\n    subscription: Subscription | null = null;\r\n    \r\n    componentDidMount () {\r\n        this.subscribeOnPlayerStateChange();\r\n    }\r\n\r\n    subscribeOnPlayerStateChange () {\r\n        this.subscription = playerService.subscribeOnPlayerStateChanges(\r\n            (data: PlayerState) => this.setState(data)\r\n        );\r\n    }\r\n\r\n    componentWillUnmount () {\r\n        this.subscription?.unsubscribe();\r\n    }\r\n\r\n    render () {\r\n        const {\r\n            playing,\r\n            muted,\r\n            volume\r\n        } = this.state;\r\n\r\n        return (\r\n            <div className='audio'>\r\n                <ReactPlayer\r\n                    url={ process.env.REACT_APP_STREAM_URL }\r\n                    playing={ playing }\r\n                    muted={ muted }\r\n                    volume={ volume }\r\n                    config={{\r\n                        file: {\r\n                            forceAudio: true\r\n                        }\r\n                    }}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Player;","import React from 'react';\r\n\r\nimport {\r\n    BrowserRouter, HashRouter\r\n} from 'react-router-dom';\r\n\r\nimport Header from './components/header/Header';\r\nimport Main from './components/main/Main';\r\nimport Player from './components/shared/Player/Player';\r\n\r\nimport './App.css';\r\nimport { HelmetProvider } from 'react-helmet-async';\r\n\r\nconst Components = (\r\n    <>\r\n        <Header />\r\n        <Main />\r\n        <Player />\r\n    </>\r\n);\r\n\r\nfunction withEnvironmentalRouter (children: JSX.Element) {\r\n    return process.env.REACT_APP_ENV === 'production' ?\r\n    (\r\n        <BrowserRouter>\r\n            { children }\r\n        </BrowserRouter>\r\n    ) :\r\n    (\r\n        <HashRouter basename='/'>\r\n            { children }\r\n        </HashRouter>\r\n    )\r\n}\r\n\r\nfunction App() {\r\n    return (\r\n        <HelmetProvider>\r\n            { withEnvironmentalRouter(Components) }\r\n        </HelmetProvider>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}