{"version":3,"sources":["components/shared/interfaces.ts","components/shared/SocialLinksComponent/SocialLinksComponent.tsx","components/shared/enums.ts","components/shared/Player/constants.ts","components/shared/Player/PlayerService.ts","components/shared/Player/PlayerControls/PlayButton/PlayButton.tsx","components/shared/Player/PlayerControls/VolumeControls/VolumeControls.tsx","components/shared/Player/PlayerComponent/PlayerComponent.tsx","components/header/Header.tsx","components/menu/Menu.tsx","components/menu/menu-button/MenuButton.tsx","components/shared/schedule/enums.ts","components/shared/constants.ts","components/gallery/GalleryService.ts","components/shared/schedule/ScheduleService.ts","components/gallery/GalleryComponent.tsx","components/shared/schedule/ScheduleShowline.tsx","components/shared/scrollable-wrapper/ScrollableWrapper.tsx","components/shared/schedule/ScheduleComponent.tsx","components/start-page/StartPageComponent.tsx","components/shows/ShowCardComponent/ShowCardComponent.tsx","components/shows/ShowListComponent.tsx","components/news/NewsCardComponent/NewsCardComponent.tsx","components/advertisement/AdService.ts","components/news/NewsListComponent.tsx","components/shows/ShowEpisodesComponent/ShowEpisodesComponent.tsx","components/shows/ShowComponent/ShowComponent.tsx","components/advertisement/AdComponent/AdComponent.tsx","components/news/News/NewsComponent.tsx","components/about/About.tsx","components/donate/Donate.tsx","components/content/Content.tsx","components/main/Main.tsx","components/shared/Player/Player.tsx","App.tsx","index.tsx"],"names":["Socials","SOCIAL_ICONS","Map","Mixcloud","mixcloudIcon","Spotify","spotifyIcon","Itunes","itunesIcon","Castbox","castboxIcon","Facebook","facebookIcon","Vk","vkIcon","Email","mailRu","Instagram","instagramIcon","Telegram","telegramIcon","GooglePlay","googlePlay","SocialLinksComponent","PlayerTypes","socialLinks","linkElements","Object","entries","map","entry","key","href","icon","className","target","rel","width","color","buildSocialLink","Date","getTime","get","DEFAULT_PLAYER_STATE","playing","muted","volume","playerService","state","playerState","track","playerStateSubject","trackNameSubject","this","Subject","updateTrackName","setInterval","bind","onNext","subscribe","data","fetch","response","json","trackName","icestats","source","title","next","isPlaying","volumeLevel","isMuted","PlayButton","playerType","useState","setPlayingMode","renderIcon","size","Main","height","onClick","pauseIcon","playIcon","FullVolumeIcon","bxsVolumeFull","MuteVolumeIcon","bxsVolumeMute","VolumeControls","setVolumeMode","ReactSlider","thumbClassName","trackClassName","defaultValue","value","Math","trunc","sliderDefaultValue","onChange","changeVolume","PlayerComponent","subscription","subscribeOnPlayerStateChange","setState","subscribeOnTrackNameChanges","props","isMainPlayer","renderMainPlayer","renderHeaderPlayer","renderPlayer","PureComponent","HEADER_SOCIAL_LINKS","mixcloud","facebook","vk","email","instagram","telegram","withRouter","console","log","process","to","exact","path","render","Header","bxSearch","PAGES","Menu","menuRef","wrapperRef","toggleMenu","ref","crossIcon","route","toLowerCase","buildMenuItem","MenuButton","IndexesOfDay","React","createRef","current","classList","toggle","BACKEND_URL","galleryService","indexGallery","gallerySubject","fetchIndexGallery","then","parseIndexGallery","updateIndexGallery","dto","photoExhibition","PhotoExhibition","photoExhibitionAuthor","PhotoExhibitionAuthor","photoExhibitionDescription","PhotoExhibitionDescription","photoExhibitionLink","PhotoExhibitionLink","photoExhibitionMedia","PhotoExhibitionMedia","imageDto","mapImageDto","photoExhibitionTitle","PhotoExhibitionTitle","regularGallery","RegularGallery","video","Video","videoEmbedCode","VideoEmbedCode","alternativeText","caption","url","gallery","PeriodicityTypes","indexByDayName","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday","scheduleService","_schedule","_currentShow","scheduleSubject","currentShowSubject","fetchSchedules","updateCurrentShow","weekday","moment","isoWeekday","currentDate","toISOString","substr","schedule","find","showline","type","isBetween","startTime","start","endTime","end","concat","datum","parseScheduleLine","scheduleShows","organizeSchedule","OnAirDateTime","onAirDateTime","weekdays","dayIndex","undefined","push","Title","description","Description","Type","hide","Hide","link","Link","startDate","StartDate","StartTime","endDate","EndDate","EndTime","periodicity","Periodicity","image","ShowImg","day","forEach","show","shouldShowBeOnAir","sort","sortShowsByDate","first","second","slice","showStartDate","dateOfDay","add","weeksPassed","week","Daily","Weekly","includes","BiWeekly","EveryThirdWeek","SingleTime","startOf","isSame","GalleryComponent","subscribeOnGalleryChange","subscribeOnGalleryChanges","unsubscribe","showArrows","showStatus","showThumbs","showIndicators","autoPlay","infiniteLoop","interval","photo","src","alt","currentShow","graphicContentSelection","Component","ScheduleShowline","ScrollableWrapper","children","DAYS_OF_WEEK","ScheduleComponent","selectedDay","scheduleShowlineBuilder","selectDay","renderButtons","index","renderDailySchedule","length","playlistShow","subscribeOnScheduleChange","subscribeOnScheduleChanges","ScrollableScheduleComponent","StartPageComponent","ShowCardComponent","showCard","excerpt","showCover","slug","loading","ShowListComponent","showCards","showDto","Excerpt","ShowCover","Slug","parseShowCard","fetchShows","renderShowCards","LinkElement","newsCard","NewsCardComponent","AdPlacements","newsCover","adService","_advertisements","advertisementsSubject","newsCardAdSubject","newsPostAdSubject","fetchAdvertisements","parseAdvertisements","advertisements","updateAdvertisements","ad","placement","isBefore","isActive","AdActive","AdEnd","AdImage","AdLink","AdPlacement","AdStart","text","AdText","AdTitle","ads","getSpecificAdvertisementByType","NewsList","NewsPost","NewsListComponent","advertisement","newsCards","page","handleScroll","event","scrollHeight","scrollTop","fetchNews","newsDto","PostCover","publishDate","PublishDate","diff","cards","sortCardsByDate","parseNewsCard","handleResponse","adNewsCard","advertisementToNewsCard","subscribeOnAdvertisementChange","subscribeOnNewsCardAdUpdate","onScroll","renderNewsCards","ShowEpisodesComponent","showEpisodes","name","pictures","date","created_time","playlistDto","parseShowEpisode","playlist","parseShowEpisodes","reverse","episode","split","join","episodes","renderShowEpisode","fetchPlaylist","renderShowEpisodes","ShowComponent","showLinks","ShowLink","spotify","itunes","castbox","parseShow","fetchShow","imageSrc","AdComponent","NewsComponent","news","content","Content","wordsBy","WordsBy","photosBy","PhotosBy","parseNews","subscribeOnNewsPostAdUpdate","imageStyle","backgroundRepeat","backgroundAttachment","backgroundSize","backgroundImage","format","style","escapeHtml","AboutComponent","about","aboutDto","aboutCover","Image","parseAbout","fetchAbout","DonateComponent","donate","donateDto","donateCover","parseDonate","fetchDonate","component","routerProps","match","params","Player","subscribeOnPlayerStateChanges","config","file","forceAudio","App","basename","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e63fdd4e.chunk.js","sourcesContent":["export enum Socials {\r\n    Castbox = 'castbox',\r\n    Itunes = 'itunes',\r\n    Mixcloud = 'mixcloud',\r\n    Spotify = 'spotify',\r\n    Facebook = 'facebook',\r\n    Vk = 'vk',\r\n    Email = 'email',\r\n    Instagram = 'instagram',\r\n    Telegram = 'telegram',\r\n    GooglePlay = 'googlePlay',  \r\n}\r\n\r\nexport type SocialLinks = {\r\n    [key in Socials]?: string;\r\n}\r\n\r\nexport interface StrapiObjectDto {\r\n    createdAt: string;\r\n    id: string;\r\n    updatedAt: string;\r\n    __v: number;\r\n    _id: number;\r\n}\r\n\r\nexport interface ImageDto {\r\n    ext: string;\r\n    hash: string;\r\n    height: number;\r\n    mime: string;\r\n    size: number;\r\n    url: string;\r\n    width: number;\r\n}\r\n\r\nexport interface FormatsDto {\r\n    thumbnail?: ImageDto;\r\n}\r\n\r\nexport interface CoverDto extends StrapiObjectDto, ImageDto {\r\n    alternativeText: string;\r\n    caption: string;\r\n    formats: FormatsDto;\r\n    name: string;\r\n    provider: string;\r\n    related: string[];\r\n}\r\n\r\nexport interface SimpleImage {\r\n    alternativeText?: string;\r\n    caption?: string;\r\n    url?: string;\r\n}\r\n","import React from 'react'\r\n\r\nimport { Icon } from '@iconify/react';\r\nimport mixcloudIcon from '@iconify/icons-cib/mixcloud';\r\nimport spotifyIcon from '@iconify/icons-cib/spotify';\r\nimport itunesIcon from '@iconify/icons-ps/itunes';\r\nimport castboxIcon from '@iconify/icons-simple-icons/castbox';\r\nimport facebookIcon from '@iconify/icons-cib/facebook';\r\nimport vkIcon from '@iconify/icons-cib/vk';\r\nimport mailRu from '@iconify/icons-cib/mail-ru';\r\nimport instagramIcon from '@iconify/icons-cib/instagram';\r\nimport telegramIcon from '@iconify/icons-cib/telegram';\r\nimport googlePlay from '@iconify/icons-cib/google-play';\r\n\r\nimport { SocialLinks, Socials } from '../interfaces';\r\n\r\nimport './SocialLinksComponent.css'\r\n\r\nconst SOCIAL_ICONS = new Map<string, object>([\r\n    [ Socials.Mixcloud, mixcloudIcon ],\r\n    [ Socials.Spotify, spotifyIcon ],\r\n    [ Socials.Itunes, itunesIcon ],\r\n    [ Socials.Castbox, castboxIcon ],\r\n    [ Socials.Facebook, facebookIcon ],\r\n    [ Socials.Vk, vkIcon ],\r\n    [ Socials.Email, mailRu ],\r\n    [ Socials.Instagram, instagramIcon ],\r\n    [ Socials.Telegram, telegramIcon ],\r\n    [ Socials.GooglePlay, googlePlay ],\r\n]);\r\n\r\ninterface SocialLinksProperties {\r\n    socialLinks: SocialLinks;\r\n}\r\n\r\nfunction buildSocialLink (key: string, href: string | undefined, icon: object | undefined) {\r\n    return href && icon ? (\r\n        <a className='social-link' target='_blank' key={ key } href={ href } rel='noopener noreferrer'>\r\n            <Icon className='social-icon' icon={ icon } width='1.5em' color='white'/>\r\n        </a>\r\n    ) : (null);\r\n}\r\n\r\nfunction SocialLinksComponent({ socialLinks }: SocialLinksProperties) {\r\n    const linkElements = Object.entries(socialLinks).map(entry => {\r\n        const key = `${ entry[0] }-${ new Date().getTime() }`;\r\n        const href = entry[1];\r\n        const icon = SOCIAL_ICONS.get(entry[0]);\r\n\r\n        return buildSocialLink(key, href, icon);\r\n    });\r\n\r\n    return (\r\n        <div className='social-icons'>\r\n            { linkElements }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SocialLinksComponent;","export enum PlayerTypes {\r\n    Main = 'main',\r\n    Header = 'header'\r\n};","import { PlayerState } from './interfaces';\r\n\r\nexport const STREAM_URL = 'https://radioplato.radioca.st/stream';\r\nexport const DATA_URL = 'https://radioplato.radioca.st/status-json.xsl';\r\n\r\nexport const DATA_REQUEST_INTERVAL = 15000;\r\n\r\nexport const DEFAULT_PLAYER_STATE: PlayerState = {\r\n    playing: false,\r\n    muted: false,\r\n    volume: 1\r\n};\r\n","import { Subject } from 'rxjs'\r\n\r\nimport { PlayerState } from './interfaces';\r\nimport { DEFAULT_PLAYER_STATE, DATA_URL, DATA_REQUEST_INTERVAL } from './constants';\r\n\r\nclass PlayerService {\r\n    private playerState: PlayerState;\r\n    private track = '';\r\n    private playerStateSubject: Subject<PlayerState>;\r\n    private trackNameSubject: Subject<string>;\r\n\r\n    constructor (state: PlayerState) {\r\n        this.playerState = state;\r\n        this.playerStateSubject = new Subject();\r\n        this.trackNameSubject = new Subject();\r\n\r\n        this.updateTrackName();\r\n        setInterval(this.updateTrackName.bind(this), DATA_REQUEST_INTERVAL);\r\n    }\r\n\r\n    set playing (isPlaying: boolean) {\r\n        this.playerState.playing = isPlaying;\r\n        this.playerStateSubject.next(this.playerState);\r\n    }\r\n\r\n    get playing () {\r\n        return this.playerState.playing;\r\n    }\r\n\r\n    set volume (volumeLevel: number) {\r\n        this.playerState.volume = volumeLevel;\r\n        this.playerStateSubject.next(this.playerState);\r\n    }\r\n\r\n    get volume () {\r\n        return this.playerState.volume;\r\n    }\r\n\r\n    set muted (isMuted: boolean) {\r\n        this.playerState.muted = isMuted;\r\n        this.playerStateSubject.next(this.playerState);\r\n    }\r\n\r\n    get muted () {\r\n        return this.playerState.muted;\r\n    }\r\n\r\n    get trackName () {\r\n        return this.track;\r\n    }\r\n\r\n    subscribeOnPlayerStateChanges (onNext: Function) {\r\n        return this.playerStateSubject.subscribe(data => onNext(data));\r\n    }\r\n\r\n    subscribeOnTrackNameChanges (onNext: Function) {\r\n        return this.trackNameSubject.subscribe(data => onNext(data));\r\n    }\r\n\r\n    async updateTrackName () {\r\n        const response = await fetch(DATA_URL);\r\n        const data = await response.json();\r\n        const trackName = data.icestats.source[0].title;\r\n\r\n        if (trackName !== this.track) {\r\n            this.track = trackName;\r\n            this.trackNameSubject.next(this.track);\r\n        }\r\n    }\r\n}\r\n\r\nconst playerService = new PlayerService(DEFAULT_PLAYER_STATE);\r\n\r\nexport { playerService };","import React, { useState } from 'react';\r\n\r\nimport { Icon } from '@iconify/react';\r\nimport playIcon from '@iconify/icons-el/play';\r\nimport pauseIcon from '@iconify/icons-el/pause';\r\n\r\nimport { playerService } from '../../PlayerService';\r\nimport { PlayerProps } from '../../interfaces';\r\nimport { PlayerTypes } from '../../../enums';\r\n\r\nimport './PlayButton.css';\r\n\r\n\r\nconst SMALL_ICON = 10;\r\nconst LARGE_ICON = 35;\r\n\r\nfunction PlayButton({ playerType }: PlayerProps) {\r\n    const [ playing, setPlayingMode ] = useState(playerService.playing);\r\n\r\n    const togglePlayingMode = () => {\r\n        playerService.playing = !playerService.playing;\r\n        setPlayingMode(playerService.playing);\r\n    }\r\n\r\n    const isMainPlayer = () => {\r\n        return playerType === PlayerTypes.Main;\r\n    }\r\n\r\n    const renderIcon = (icon: object) => {\r\n        const size = isMainPlayer() ? LARGE_ICON : SMALL_ICON;\r\n\r\n        return <Icon icon={ icon } width={ size } height={ size }/>;\r\n    }\r\n\r\n    return (\r\n        <button \r\n            className='play-button'\r\n            onClick={ togglePlayingMode }\r\n        >\r\n            { playing ? renderIcon(pauseIcon) : renderIcon(playIcon) }\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default PlayButton;","import React, { useState } from 'react';\r\n\r\nimport ReactSlider from 'react-slider';\r\nimport { Icon } from '@iconify/react';\r\nimport bxsVolumeFull from '@iconify/icons-bx/bxs-volume-full';\r\nimport bxsVolumeMute from '@iconify/icons-bx/bxs-volume-mute';\r\n\r\nimport { playerService } from '../../PlayerService';\r\n\r\nimport './VolumeControls.css';\r\n\r\nconst FullVolumeIcon = <Icon icon={ bxsVolumeFull } width={ 16 } height={ 16 } color='#ffffff'/>;\r\nconst MuteVolumeIcon = <Icon icon={ bxsVolumeMute } width={ 16 } height={ 16 } color='#ffffff'/>;\r\n\r\nfunction VolumeControls() {\r\n    const [ muted, setVolumeMode ] = useState(playerService.muted);\r\n    \r\n    const toggleVolumeMode = () => {\r\n        playerService.muted = !playerService.muted;\r\n        setVolumeMode(playerService.muted);\r\n    }\r\n\r\n    const changeVolume = (value: any) => {\r\n        playerService.volume = value / 100;\r\n    }\r\n\r\n    const sliderDefaultValue = () => {\r\n        const value = playerService.volume * 100;\r\n        \r\n        return Math.trunc(value);\r\n    }\r\n\r\n    return (\r\n        <div className='volume-controls'>\r\n            <button \r\n                className='volume-mode-button'\r\n                onClick={ toggleVolumeMode }\r\n            >\r\n                { muted ? FullVolumeIcon : MuteVolumeIcon }\r\n            </button>\r\n            <ReactSlider\r\n                className='horizontal-slider'\r\n                thumbClassName='thumb'\r\n                trackClassName='track'\r\n                defaultValue={ sliderDefaultValue() }\r\n                onChange={ value => changeVolume(value)}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default VolumeControls;","import React, { PureComponent } from 'react';\r\n\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport PlayButton from '../PlayerControls/PlayButton/PlayButton';\r\nimport VolumeControls from '../PlayerControls/VolumeControls/VolumeControls';\r\nimport { playerService } from '../PlayerService';\r\nimport { PlayerProps } from '../interfaces';\r\nimport { PlayerTypes } from '../../enums';\r\n\r\nimport './PlayerComponent.css';\r\n\r\n\r\nconst ONAIR = 'onair';\r\n\r\nexport class PlayerComponent extends PureComponent<PlayerProps> {\r\n    state = {\r\n        trackName: ''\r\n    };\r\n    subscription: Subscription | null = null;\r\n\r\n    get isMainPlayer () {\r\n        return this.props.playerType === PlayerTypes.Main;\r\n    }\r\n\r\n    get className () {\r\n        return `${ this.props.playerType }-player`;\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.subscribeOnPlayerStateChange();\r\n        this.setState({\r\n            trackName: playerService.trackName\r\n        });\r\n    }\r\n\r\n    subscribeOnPlayerStateChange () {\r\n        this.subscription = playerService.subscribeOnTrackNameChanges(\r\n            (trackName: string) => this.setState({ trackName })\r\n        );\r\n    }\r\n    \r\n    renderMainPlayer (trackName: string) {\r\n        return (\r\n            <>\r\n                <div className='controls-container'>\r\n                    <PlayButton playerType={ this.props.playerType }/>\r\n                    <VolumeControls />\r\n                </div>\r\n                <p className='onair'>{ ONAIR }</p>\r\n                <p className='track-title'>{ trackName }</p>\r\n            </>\r\n        );\r\n    }\r\n\r\n    renderHeaderPlayer (trackName: string) {\r\n        return (\r\n            <>\r\n                <PlayButton playerType={ this.props.playerType }/>\r\n                <div className='track-title'>\r\n                    <p>{ trackName }</p>\r\n                </div>\r\n                <VolumeControls />\r\n            </>\r\n        );\r\n    }\r\n\r\n    renderPlayer () {\r\n        const {\r\n            trackName\r\n        } = this.state;\r\n\r\n        return this.isMainPlayer ?\r\n            this.renderMainPlayer(trackName) :\r\n            this.renderHeaderPlayer(trackName);\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div className={ this.className }>\r\n                { this.renderPlayer() }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PlayerComponent;\r\n","import React from 'react'\r\n\r\nimport {\r\n  Link,\r\n  withRouter,\r\n  Switch,\r\n  Route\r\n} from 'react-router-dom';\r\n\r\nimport { Icon } from '@iconify/react';\r\nimport bxSearch from '@iconify/icons-bx/bx-search';\r\n\r\nimport SocialLinksComponent from '../shared/SocialLinksComponent/SocialLinksComponent';\r\nimport PlayerComponent from '../shared/Player/PlayerComponent/PlayerComponent';\r\nimport { SocialLinks } from '../shared/interfaces';\r\nimport { PlayerTypes } from '../shared/enums';\r\n\r\nimport './Header.css'\r\n\r\n\r\nconst RADIO_PLATO = 'Radio Plato';\r\nconst DONATE = 'Donate';\r\n\r\nconst HEADER_SOCIAL_LINKS: SocialLinks = {\r\n    mixcloud: 'https://www.mixcloud.com/radioplato/',\r\n    facebook: 'https://www.facebook.com/radioplato.by/',\r\n    vk: 'https://vk.com/radioplato',\r\n    email: 'mailto:hey@radioplato.by',\r\n    instagram: 'https://www.instagram.com/radio_plato/',\r\n    telegram: 'https://t.me/radioplato',\r\n    googlePlay: 'https://play.google.com/store/apps/details?id=com.radioplato'\r\n}\r\n\r\nfunction Header() {\r\n    console.log(process.env.PUBLIC_URL);\r\n    \r\n    return (\r\n        <header className='header-container'>\r\n            <Link to='/' className='logo-text'>{ RADIO_PLATO }</Link>\r\n            <div className='social-container'>\r\n                <Switch>\r\n                    <Route exact path='/' render={\r\n                        props => (<SocialLinksComponent { ...props } socialLinks={ HEADER_SOCIAL_LINKS }/>)\r\n                    }/>\r\n                    <Route exact path={ `${ process.env.PUBLIC_URL }/` } render={\r\n                        props => (<SocialLinksComponent { ...props } socialLinks={ HEADER_SOCIAL_LINKS }/>)\r\n                    }/>\r\n                    <Route path='/' render={\r\n                        props => (<PlayerComponent { ...props } playerType={ PlayerTypes.Header }/>)\r\n                    }/>\r\n                </Switch>\r\n                <Link to='/donate' className='donate'>{ DONATE }</Link>\r\n                <div className='search-icon'>\r\n                    <Icon icon={ bxSearch } width='1.8em' color='white'/>\r\n                </div>\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n  \r\nexport default withRouter(Header);","import React from 'react'\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { Icon } from '@iconify/react';\r\nimport crossIcon from '@iconify/icons-gridicons/cross';\r\n\r\nimport './Menu.css'\r\n\r\n\r\nconst PAGES = [\r\n    'News',\r\n    'Shows',\r\n    'Schedule',\r\n    'About'\r\n];\r\n\r\ninterface MenuParameters {\r\n    menuRef: React.RefObject<HTMLDivElement>;\r\n    wrapperRef: React.RefObject<HTMLDivElement>;\r\n    toggleMenu: () => void;\r\n}\r\n\r\nfunction Menu({ menuRef, wrapperRef, toggleMenu }: MenuParameters) {\r\n\r\n    const buildMenuItem = (title: string) => {\r\n        const route = `/${ title.toLowerCase() }`;\r\n\r\n        return (\r\n            <li className='menu-item' key={ title }>\r\n                <Link to={ route } onClick={ toggleMenu }>{ title }</Link>\r\n            </li>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className='wrapper' ref={ wrapperRef } onClick={ toggleMenu } />\r\n            <nav ref={ menuRef }>\r\n                <div className='close-button-container'>\r\n                    <button \r\n                        className='close-button'\r\n                        onClick={ toggleMenu }\r\n                    >\r\n                        <Icon icon={ crossIcon } width={ 48 } height={ 48 }/>    \r\n                    </button>\r\n                </div>\r\n                <div className='menu-items-container'>\r\n                    <ul className='menu-items'>\r\n                        { PAGES.map(title => buildMenuItem(title)) }\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n        </>     \r\n    );\r\n  }\r\n  \r\n  export default Menu","import React from 'react'\r\n\r\nimport Menu from '../Menu';\r\n\r\nimport './MenuButton.css'\r\n\r\n\r\nconst MENU = 'menu';\r\n\r\nfunction MenuButton() {\r\n    const menuRef = React.createRef<HTMLDivElement>()\r\n    const wrapperRef = React.createRef<HTMLDivElement>()\r\n    \r\n    const toggleMenu = () => {\r\n        wrapperRef.current?.classList.toggle('wrapper-show');\r\n        menuRef.current?.classList.toggle('menu-open');\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Menu menuRef={ menuRef } wrapperRef={ wrapperRef } toggleMenu={ toggleMenu }/>\r\n            <div className='menuButton' onClick={ toggleMenu }>\r\n                <p className='label'>{ MENU }</p>\r\n            </div>\r\n        </>\r\n    );\r\n  }\r\n  \r\n  export default MenuButton","export enum IndexesOfDay {\r\n    Monday = 0,\r\n    Tuesday,\r\n    Wednesday,\r\n    Thursday,\r\n    Friday,\r\n    Saturday,\r\n    Sunday\r\n};","export const BACKEND_URL = 'https://radioplato-api.herokuapp.com';","import { Subject } from \"rxjs\";\r\n\r\nimport { IndexGallery, IndexGalleryDto } from \"./interfaces\";\r\nimport { CoverDto, SimpleImage } from \"../shared/interfaces\";\r\nimport { BACKEND_URL } from \"../shared/constants\";\r\n\r\n\r\nconst GALLERY_REQUEST_INTERVAL = 300000;\r\n\r\nclass GalleryService {\r\n    private indexGallery: IndexGallery | null = null;\r\n    private gallerySubject: Subject<IndexGallery | null>;\r\n\r\n    constructor () {\r\n        this.gallerySubject = new Subject();\r\n\r\n        this.fetchIndexGallery();\r\n        setInterval(this.fetchIndexGallery.bind(this), GALLERY_REQUEST_INTERVAL);\r\n    }\r\n\r\n    get gallery (): IndexGallery | null {\r\n        return this.indexGallery;\r\n    }\r\n\r\n    set gallery (gallery: IndexGallery | null) {\r\n        this.indexGallery = gallery;\r\n        gallery && this.gallerySubject.next(gallery);\r\n    }\r\n\r\n    subscribeOnGalleryChanges (onNext: Function) {\r\n        return this.gallerySubject.subscribe(data => onNext(data));\r\n    }\r\n\r\n    async fetchIndexGallery () {\r\n        await fetch(`${ BACKEND_URL }/index-gallery`)\r\n            .then(response => response.json())\r\n            .then(data => this.parseIndexGallery(data))\r\n            .then(indexGallery => this.updateIndexGallery(indexGallery));\r\n    }\r\n\r\n    private parseIndexGallery (dto: IndexGalleryDto) {\r\n        return {\r\n            photoExhibition: dto.PhotoExhibition,\r\n            photoExhibitionAuthor: dto.PhotoExhibitionAuthor,\r\n            photoExhibitionDescription: dto.PhotoExhibitionDescription,\r\n            photoExhibitionLink: dto.PhotoExhibitionLink,\r\n            photoExhibitionMedia: dto.PhotoExhibitionMedia.map(imageDto => this.mapImageDto(imageDto)),\r\n            photoExhibitionTitle: dto.PhotoExhibitionTitle,\r\n            regularGallery: dto.RegularGallery.map(imageDto => this.mapImageDto(imageDto)),\r\n            video: dto.Video,\r\n            videoEmbedCode: dto.VideoEmbedCode,\r\n        }\r\n    }\r\n\r\n    private mapImageDto (imageDto: CoverDto): SimpleImage {\r\n        return {\r\n            alternativeText: imageDto.alternativeText,\r\n            caption: imageDto.caption,\r\n            url: imageDto.url\r\n        };\r\n    }\r\n\r\n    private updateIndexGallery (indexGallery: IndexGallery) {\r\n        this.gallery = indexGallery;\r\n    }\r\n}\r\n\r\nconst galleryService = new GalleryService();\r\n\r\nexport default galleryService;","import { Subject } from 'rxjs'\r\nimport moment from 'moment';\r\n\r\nimport { ScheduleShow, ScheduleDto } from \"./interfaces\";\r\nimport { IndexesOfDay } from \"./enums\";\r\nimport { BACKEND_URL } from \"../constants\";\r\n\r\n\r\nconst DATA_REQUEST_INTERVAL = 14400000;\r\nconst CURRENT_SHOW_REFRESH_INTERVAL = 300000;\r\n\r\nenum PeriodicityTypes {\r\n    SingleTime = \"SingleTime\",\r\n    Daily = \"Daily\",\r\n    Weekly = \"Weekly\",\r\n    BiWeekly = \"BiWeekly\",\r\n    EveryThirdWeek = \"Every3rdWeek\",\r\n    Monthly = \"Monthly\"\r\n}\r\n\r\nconst indexByDayName = new Map([\r\n    [ \"Monday\", IndexesOfDay.Monday ],\r\n    [ \"Tuesday\", IndexesOfDay.Tuesday ],\r\n    [ \"Wednesday\", IndexesOfDay.Wednesday ],\r\n    [ \"Thursday\", IndexesOfDay.Thursday ],\r\n    [ \"Friday\", IndexesOfDay.Friday ],\r\n    [ \"Saturday\", IndexesOfDay.Saturday ],\r\n    [ \"Sunday\", IndexesOfDay.Sunday ],\r\n]);\r\n\r\nclass ScheduleService {\r\n    private _schedule: ScheduleShow[][] = [ [], [], [], [], [], [], [] ];\r\n    private _currentShow: ScheduleShow | undefined;\r\n    private scheduleSubject: Subject<ScheduleShow[][]>;\r\n    private currentShowSubject: Subject<ScheduleShow>;\r\n\r\n    constructor () {\r\n        this.scheduleSubject = new Subject();\r\n        this.currentShowSubject = new Subject();\r\n\r\n        this.fetchSchedules();\r\n        this.updateCurrentShow();\r\n        setInterval(this.fetchSchedules.bind(this), DATA_REQUEST_INTERVAL);\r\n        setInterval(this.updateCurrentShow.bind(this), CURRENT_SHOW_REFRESH_INTERVAL);\r\n    }\r\n\r\n    set schedule (schedule: ScheduleShow[][]) {\r\n        this._schedule = schedule;\r\n        this.scheduleSubject.next(schedule);\r\n    }\r\n\r\n    get schedule () {\r\n        return this._schedule;\r\n    }\r\n\r\n    get currentShow () {\r\n        return this._currentShow;\r\n    }\r\n\r\n    set currentShow (show: ScheduleShow | undefined) {\r\n        this._currentShow = show;\r\n        this.currentShowSubject.next(show)\r\n    }\r\n\r\n    updateCurrentShow () {\r\n        const weekday = moment().isoWeekday() - 1;\r\n        const currentDate = new Date().toISOString().substr(0, 10);\r\n        const start = (showline: ScheduleShow) => moment(`${ currentDate } ${ showline.startTime }`);\r\n        const end = (showline: ScheduleShow) => moment(`${ currentDate } ${ showline.endTime }`);\r\n\r\n        this._currentShow = this.schedule[weekday].find(showline => {\r\n            return showline.type === \"Show\" && moment().isBetween(start(showline), end(showline));\r\n        });\r\n    }\r\n\r\n    async fetchSchedules () {\r\n        await fetch(`${ BACKEND_URL }/schedules`)\r\n            .then(response => response.json())\r\n            .then(data => [].concat(...data.map((datum: ScheduleDto) => this.parseScheduleLine(datum))))\r\n            .then(scheduleShows => this.organizeSchedule(scheduleShows));\r\n    }\r\n\r\n    subscribeOnScheduleChanges (onNext: Function) {\r\n        return this.scheduleSubject.subscribe(data => onNext(data));\r\n    }\r\n\r\n    subscribeOnCurrentShowChanges (onNext: Function) {\r\n        return this.currentShowSubject.subscribe(data => onNext(data));\r\n    }\r\n\r\n    private parseScheduleLine (dto: ScheduleDto): ScheduleShow[] {\r\n        return dto.OnAirDateTime.map(onAirDateTime => {\r\n            const weekdays = [];\r\n\r\n            for (const [ key, value ] of Object.entries(onAirDateTime)) {\r\n                const dayIndex = indexByDayName.get(key);\r\n                \r\n                value && dayIndex !== undefined && weekdays.push(dayIndex);\r\n            }\r\n    \r\n            return {\r\n                title: dto.Title,\r\n                description: dto.Description,\r\n                type: dto.Type,\r\n                hide: dto.Hide,\r\n                link: dto.Link,\r\n                startDate: onAirDateTime.StartDate,\r\n                startTime: onAirDateTime.StartTime,\r\n                endDate: onAirDateTime.EndDate,\r\n                endTime: onAirDateTime.EndTime,\r\n                periodicity: onAirDateTime.Periodicity,\r\n                weekdays,\r\n                image: dto ? {\r\n                    alternativeText: dto.ShowImg?.alternativeText,\r\n                    caption: dto.ShowImg?.caption,\r\n                    url: dto.ShowImg?.url\r\n                } : null\r\n            };\r\n        });\r\n    }\r\n\r\n    private organizeSchedule (scheduleShows: ScheduleShow[]) {\r\n        const schedule: ScheduleShow[][]  = [];\r\n\r\n        for (let day = IndexesOfDay.Monday; day <= IndexesOfDay.Sunday; day++) {\r\n            schedule[day] = [];\r\n\r\n            scheduleShows.forEach(show => {\r\n                this.shouldShowBeOnAir(show, day) && schedule[day].push(show)\r\n            });\r\n\r\n            schedule[day].sort(this.sortShowsByDate);\r\n        }\r\n\r\n        this.schedule = schedule;\r\n    }\r\n\r\n    private sortShowsByDate (first: ScheduleShow, second: ScheduleShow) {\r\n        return +first.startTime.slice(0, 2) - +second.startTime.slice(0, 2);\r\n    }\r\n\r\n    private shouldShowBeOnAir (show: ScheduleShow, day: IndexesOfDay): boolean {\r\n        if (show.hide) {\r\n            return false;\r\n        }\r\n\r\n        const showStartDate = moment(show.startDate);\r\n        const dateOfDay = moment().add(moment().isoWeekday() - day + 1, 'days');\r\n        const weeksPassed = +(moment().week() - showStartDate.week());\r\n\r\n        switch (show.periodicity) {\r\n            case PeriodicityTypes.Daily: \r\n                return show.weekdays.includes(day);\r\n            case PeriodicityTypes.Weekly:\r\n                return show.weekdays.includes(day);\r\n            case PeriodicityTypes.BiWeekly:\r\n                return show.weekdays.includes(day) && weeksPassed % 2 === 0;\r\n            case PeriodicityTypes.EveryThirdWeek:\r\n                return show.weekdays.includes(day) && weeksPassed % 3 === 0;\r\n            case PeriodicityTypes.SingleTime:\r\n                return showStartDate.startOf('day').isSame(dateOfDay.startOf('day'));\r\n            default: return false;\r\n        }\r\n    }\r\n}\r\n\r\nconst scheduleService = new ScheduleService();\r\n\r\nexport { scheduleService };","import React, { Component } from 'react';\r\nimport ReactPlayer from 'react-player'\r\nimport { Subscription } from 'rxjs';\r\nimport { Carousel } from 'react-responsive-carousel';\r\n\r\nimport galleryService from './GalleryService';\r\nimport { IndexGallery } from './interfaces';\r\n\r\nimport { scheduleService } from '../shared/schedule/ScheduleService';\r\nimport 'react-responsive-carousel/lib/styles/carousel.min.css';\r\nimport './GalleryComponent.css';\r\n\r\n\r\ninterface GalleryComponentState {\r\n    gallery: IndexGallery | null\r\n}\r\n\r\nclass GalleryComponent extends Component {\r\n    state: GalleryComponentState = { gallery: null };\r\n    subscription: Subscription | null = null;\r\n\r\n    componentDidMount() {\r\n        this.subscribeOnGalleryChange();\r\n        galleryService.fetchIndexGallery();\r\n    }\r\n\r\n    subscribeOnGalleryChange () {\r\n        this.subscription = galleryService.subscribeOnGalleryChanges(\r\n            (gallery: IndexGallery) => this.setState({ gallery })\r\n        );\r\n    }\r\n\r\n    componentWillUnmount () {\r\n        this.subscription?.unsubscribe();\r\n    }\r\n\r\n    graphicContentSelection () {\r\n        const { gallery } = this.state;\r\n\r\n        if (!gallery) {\r\n            return null;\r\n        }\r\n\r\n        if (gallery?.video) {\r\n            return (\r\n                <ReactPlayer url={ gallery.videoEmbedCode } />\r\n            );\r\n        }\r\n\r\n        if (gallery?.photoExhibition) {\r\n            return (\r\n                <Carousel className=\"carousel\"\r\n                          showArrows={ false }\r\n                          showStatus={ false }\r\n                          showThumbs={ false }\r\n                          showIndicators={ false }\r\n                          autoPlay={ true }\r\n                          infiniteLoop={ true }\r\n                          interval={ 30000 }\r\n                >\r\n                    { gallery.photoExhibitionMedia.map(photo => (\r\n                        <div>\r\n                            <img src={ photo.url }\r\n                                 alt={ photo.alternativeText }\r\n                            />\r\n                        </div>\r\n                    ))}\r\n                </Carousel>\r\n            );\r\n        }\r\n\r\n        if (scheduleService.currentShow && scheduleService.currentShow.image) {\r\n            return (\r\n                <img className=\"gallery-image\"\r\n                     src={ scheduleService.currentShow.image.url }\r\n                     alt={ scheduleService.currentShow.image.alternativeText }\r\n                ></img>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <Carousel className=\"carousel\"\r\n                      showArrows={ false }\r\n                      showStatus={ false }\r\n                      showThumbs={ false }\r\n                      showIndicators={ false }\r\n                      autoPlay={ true }\r\n                      infiniteLoop={ true }\r\n                      interval={ 30000 }\r\n            >\r\n                { gallery.regularGallery.map(photo => (\r\n                    <div>\r\n                        <img src={ photo.url }\r\n                             alt={ photo.alternativeText }\r\n                        />\r\n                    </div>\r\n                ))}\r\n            </Carousel>\r\n        );\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div className=\"visual-container\">\r\n                { this.graphicContentSelection() }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n  \r\nexport default GalleryComponent;","import React from 'react'\r\n\r\nimport { ScheduleShow } from './interfaces'\r\n\r\nimport './ScheduleShowline.css'\r\n\r\n\r\ninterface ScheduleShowlineProperties {\r\n    showline: ScheduleShow\r\n}\r\n\r\nfunction ScheduleShowline({ showline }: ScheduleShowlineProperties) {\r\n    const {\r\n        title,\r\n        description,\r\n        link,\r\n        startTime,\r\n        endTime\r\n    } = showline;\r\n    const interval = startTime && endTime ? `${ startTime.slice(0, 5) } - ${ endTime.slice(0, 5) }` : \"\";\r\n    const href = link ? link : \"\";\r\n\r\n    return (\r\n        <a href={ href }>\r\n            <div className='show-title-container'>\r\n                <div className='show-date'>\r\n                    <p>{ interval }</p>\r\n                </div>\r\n                <div className='show-title'>\r\n                    <p>{ title ? title : \"\" }</p>\r\n                </div>\r\n                <div className='show-desc'>\r\n                    <p>{ description ? description : \"\" }</p>\r\n                </div>\r\n            </div>\r\n        </a>\r\n    )\r\n  }\r\n  export default ScheduleShowline ","import React from 'react';\r\n\r\nimport \"./ScrollableWrapper.css\";\r\n\r\n\r\ninterface ScrollableWrapperProperties {\r\n    children: React.ReactNode\r\n}\r\n\r\nfunction ScrollableWrapper ({ children }: ScrollableWrapperProperties) {\r\n    return (\r\n        <div className=\"scrollable-container\">\r\n            { children }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ScrollableWrapper;","import React, { Component } from 'react'\r\nimport { Subscription } from 'rxjs';\r\nimport moment from 'moment';\r\n\r\nimport ScheduleShowline from './ScheduleShowline'\r\n\r\nimport { scheduleService } from './ScheduleService';\r\n\r\nimport { ScheduleShow } from './interfaces';\r\nimport { IndexesOfDay } from './enums';\r\n\r\nimport './ScheduleComponent.css'\r\nimport ScrollableWrapper from '../scrollable-wrapper/ScrollableWrapper';\r\n\r\n\r\nconst DAYS_OF_WEEK = [\r\n    \"MON\",\r\n    \"TUE\",\r\n    \"WED\",\r\n    \"THU\",\r\n    \"FRI\",\r\n    \"SAT\",\r\n    \"SUN\"\r\n];\r\n\r\nconst SCHEDULE = \"SCHEDULE\";\r\n\r\nclass ScheduleComponent extends Component {\r\n    subscription: Subscription | null = null;\r\n    state = {\r\n        schedule: scheduleService.schedule,\r\n        selectedDay: moment().isoWeekday() - 1\r\n    };\r\n\r\n    componentDidMount () {\r\n        this.subscribeOnScheduleChange();\r\n    }\r\n\r\n    subscribeOnScheduleChange () {\r\n        this.subscription = scheduleService.subscribeOnScheduleChanges(\r\n            (schedule: ScheduleShow[][]) => this.setState({ schedule })\r\n        );\r\n    }\r\n\r\n    scheduleShowlineBuilder = (showline: ScheduleShow) => {\r\n        return (\r\n            <ScheduleShowline \r\n                showline={ showline }\r\n                key={ `${ showline.title }-${ showline.startDate }-${ showline.endDate }` }\r\n            />\r\n        );\r\n    }\r\n\r\n    selectDay = (day: IndexesOfDay) => {\r\n        this.setState({\r\n            selectedDay: day\r\n        });\r\n    };\r\n\r\n    componentWillUnmount () {\r\n        this.subscription?.unsubscribe();\r\n    }\r\n\r\n    renderButtons = () => {\r\n        const { selectedDay } = this.state;\r\n\r\n        return DAYS_OF_WEEK.map((day, index) => (\r\n            <button className={ `schedule-day-button ${ selectedDay === index ? \"active\" : \"\"}` }\r\n                    onClick={ () => this.selectDay(index) }\r\n                    key={ `${ day.toLowerCase() }-${ index }`}\r\n            >\r\n                { day }\r\n            </button>\r\n        ))\r\n    }\r\n\r\n    renderDailySchedule = () => {\r\n        const {\r\n            schedule,\r\n            selectedDay\r\n        } = this.state;\r\n\r\n        return schedule[selectedDay].length ?\r\n            schedule[selectedDay].map((playlistShow: ScheduleShow) => this.scheduleShowlineBuilder(playlistShow)) :\r\n            [];\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div className='schedule-container'>\r\n                <div className='schedule-headline-container'>        \r\n                    <div className='schedule-title'>\r\n                        <p>{ SCHEDULE }</p>\r\n                    </div>\r\n                    <div className='schedule-day'>\r\n                        { this.renderButtons() }\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    { this.renderDailySchedule() }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst ScrollableScheduleComponent = () => (<ScrollableWrapper children={ <ScheduleComponent /> }/>)\r\n  \r\nexport { ScheduleComponent, ScrollableScheduleComponent }","import React from 'react';\r\n\r\nimport GalleryComponent from '../gallery/GalleryComponent';\r\nimport { ScheduleComponent } from '../shared/schedule/ScheduleComponent';\r\n\r\nimport \"./StartPageComponent.css\";\r\n\r\nfunction StartPageComponent() {\r\n    return (\r\n        <div className=\"start-page-container\">\r\n            <GalleryComponent />\r\n            <ScheduleComponent />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default StartPageComponent;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { ShowCard } from '../interfaces';\r\n\r\nimport './ShowCardComponent.css';\r\n\r\ninterface ShowCardParameters {\r\n    showCard: ShowCard\r\n}\r\n\r\nfunction ShowCardComponent({ showCard }: ShowCardParameters) {\r\n    const {\r\n        excerpt,\r\n        showCover,\r\n        slug,\r\n        title,\r\n    } = showCard;\r\n\r\n    const route = `/shows/${ slug }`;\r\n\r\n    return (\r\n        <Link to={ route } title={ title }>\r\n            <div className=\"show-card\">\r\n                <img src={ showCover.url } loading='lazy' alt={ showCover.alternativeText }/>\r\n                <h2>{ title }</h2>\r\n                <p>{ excerpt }</p>\r\n            </div>    \r\n        </Link>\r\n    );\r\n}\r\n  \r\nexport default ShowCardComponent;","import React, { Component } from 'react';\r\n\r\nimport ShowCardComponent from './ShowCardComponent/ShowCardComponent';\r\n\r\nimport { ShowDto, ShowCard } from './interfaces';\r\nimport { BACKEND_URL } from '../shared/constants';\r\n\r\nimport './ShowListComponent.css';\r\n\r\n\r\nexport class ShowListComponent extends Component {\r\n    state = {\r\n        showCards: []\r\n    }\r\n\r\n    parseShowCard (showDto: ShowDto): ShowCard {\r\n        return {\r\n            excerpt: showDto.Excerpt,\r\n            showCover: {\r\n                alternativeText: showDto.ShowCover.alternativeText,\r\n                caption: showDto.ShowCover.caption,\r\n                url: showDto.ShowCover.url\r\n            },\r\n            slug: showDto.Slug,\r\n            title: showDto.Title\r\n        };\r\n    }\r\n\r\n    fetchShows () {\r\n        fetch(`${ BACKEND_URL }/shows`)\r\n            .then(response => response.json())\r\n            .then(data => data.map((datum: ShowDto) => this.parseShowCard(datum)))\r\n            .then(showCards => this.setState({ showCards }));\r\n    }\r\n\r\n    renderShowCards (showCards: ShowCard[]) {\r\n        return showCards.map(showCard => (<ShowCardComponent key={ showCard.slug } showCard={ showCard }></ShowCardComponent>))\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.fetchShows();\r\n    }\r\n\r\n    render () {\r\n        const {\r\n            showCards\r\n        } = this.state;\r\n\r\n        return (\r\n            <div className=\"show-list\">\r\n                <h1>Shows</h1>\r\n                <div className=\"show-cards\">\r\n                    { this.renderShowCards(showCards) }\r\n                </div>\r\n            </div>\r\n            \r\n        );\r\n    }\r\n}\r\n  \r\nexport default ShowListComponent;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { NewsCard } from '../interfaces';\r\n\r\nimport './NewsCardComponent.css';\r\n\r\n\r\ninterface LinkElementParameters {\r\n    children: React.ReactNode,\r\n    newsCard: NewsCard,\r\n}\r\n\r\ninterface NewsCardParameters {\r\n    newsCard: NewsCard,\r\n    type?: string\r\n}\r\n\r\nfunction LinkElement({ newsCard, children }: LinkElementParameters) {\r\n    const slug = newsCard.slug;\r\n    const route = `/news/${ slug }`;\r\n\r\n    return slug ? <Link to={ route } title={ newsCard.title }>{ children }</Link> : <a href={ newsCard.link } title={ newsCard.title }>{ children }</a>;\r\n}\r\n\r\nfunction NewsCardComponent({ newsCard, type }: NewsCardParameters) {\r\n    const {\r\n        excerpt,\r\n        newsCover,\r\n        title,\r\n    } = newsCard;\r\n\r\n    return (\r\n        <div className={ `news-card ${ type }` }>\r\n            <LinkElement newsCard={ newsCard }>\r\n                <div className=\"news-card-image\">\r\n                    <img src={ newsCover.url } loading='lazy' alt={ newsCover.alternativeText }/>\r\n                </div>\r\n                <div className=\"news-card-text\">\r\n                    <h2>{ title }</h2>\r\n                    <p className=\"news-card-excerpt\">{ excerpt }</p>\r\n                </div>\r\n            </LinkElement>\r\n        </div>\r\n    );\r\n}\r\n  \r\nexport default NewsCardComponent;","import { BACKEND_URL } from \"../shared/constants\";\r\nimport { AdvertisementDto, Advertisement } from \"./interfaces\";\r\nimport { Subject } from \"rxjs/internal/Subject\";\r\nimport moment from \"moment\";\r\n\r\n\r\nenum AdPlacements {\r\n    NewsList = \"NewsList\",\r\n    NewsPost = \"NewsPost\"\r\n}\r\n\r\nclass AdService {\r\n    private _advertisements: Advertisement[] = [];\r\n    private advertisementsSubject: Subject<Advertisement[] | null>;\r\n    private newsCardAdSubject: Subject<Advertisement | null>;\r\n    private newsPostAdSubject: Subject<Advertisement | null>;\r\n\r\n    constructor () {\r\n        this.advertisementsSubject = new Subject();\r\n        this.newsCardAdSubject = new Subject();\r\n        this.newsPostAdSubject = new Subject();\r\n\r\n        this.fetchAdvertisements();\r\n    }\r\n\r\n    get advertisements () {\r\n        return this._advertisements;\r\n    }\r\n\r\n    set advertisements (ads: any) {\r\n        this._advertisements = ads;\r\n\r\n        this.advertisementsSubject.next(this.advertisements);\r\n        this.newsCardAdSubject.next(this.getSpecificAdvertisementByType(AdPlacements.NewsList));\r\n        this.newsPostAdSubject.next(this.getSpecificAdvertisementByType(AdPlacements.NewsPost));\r\n    }\r\n\r\n    subscribeOnAdvertisementsChanges (onNext: Function) {\r\n        return this.advertisementsSubject.subscribe(data => onNext(data));\r\n    }\r\n\r\n    subscribeOnNewsCardAdUpdate (onNext: Function) {\r\n        return this.newsCardAdSubject.subscribe(data => onNext(data));\r\n    }\r\n\r\n    subscribeOnNewsPostAdUpdate (onNext: Function) {\r\n        return this.newsPostAdSubject.subscribe(data => onNext(data));\r\n    }\r\n\r\n    async fetchAdvertisements () {\r\n        await fetch(`${ BACKEND_URL }/advertisements`)\r\n            .then(response => response.json())\r\n            .then(data => this.parseAdvertisements(data))\r\n            .then(advertisements => this.updateAdvertisements(advertisements));\r\n    }\r\n\r\n    private getSpecificAdvertisementByType (type: string) {\r\n        return this.advertisements.find((ad: Advertisement) => ad.placement === type && moment().isBefore(moment(ad.endDate)));\r\n    }\r\n\r\n    private parseAdvertisements (data: AdvertisementDto[]) {\r\n        return data.map(ad => {\r\n            return {\r\n                isActive: ad.AdActive,\r\n                endDate: ad.AdEnd,\r\n                image: {\r\n                    alternativeText: ad.AdImage.alternativeText,\r\n                    caption: ad.AdImage.caption,\r\n                    url: ad.AdImage.url\r\n                },\r\n                link: ad.AdLink,\r\n                placement: ad.AdPlacement,\r\n                startDate: ad.AdStart,\r\n                text: ad.AdText,\r\n                title: ad.AdTitle\r\n            }\r\n        });\r\n    }\r\n\r\n    private updateAdvertisements (advertisements: any) {\r\n        this.advertisements = advertisements;\r\n    }\r\n}\r\n\r\nconst adService = new AdService();\r\n\r\nexport default adService;","import React, { Component } from 'react';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport NewsCardComponent from './NewsCardComponent/NewsCardComponent';\r\nimport adService from './../advertisement/AdService';\r\n\r\nimport { NewsDto, NewsCard } from './interfaces';\r\nimport { BACKEND_URL } from '../shared/constants';\r\n\r\nimport './NewsListComponent.css';\r\nimport moment from 'moment';\r\nimport { Advertisement } from '../advertisement/interfaces';\r\n\r\n\r\nconst NEWS_LIMIT = 12;\r\nconst VISIBILITY_LIMIT = 800;\r\n\r\nexport class NewsListComponent extends Component {\r\n    state = {\r\n        advertisement: null,\r\n        newsCards: [],\r\n        page: 0,\r\n        loading: false,\r\n        end: false\r\n    }\r\n    subscription: Subscription | null = null;\r\n\r\n    parseNewsCard (newsDto: NewsDto): NewsCard {\r\n        return {\r\n            excerpt: newsDto.Excerpt,\r\n            newsCover: {\r\n                alternativeText: newsDto.PostCover.alternativeText,\r\n                caption: newsDto.PostCover.caption,\r\n                url: newsDto.PostCover.url\r\n            },\r\n            slug: newsDto.Slug,\r\n            title: newsDto.Title,\r\n            publishDate: newsDto.PublishDate\r\n        };\r\n    }\r\n\r\n    sortCardsByDate (first: NewsCard, second: NewsCard) {\r\n        return moment(second.publishDate).diff(moment(first.publishDate));\r\n    }\r\n\r\n    handleResponse (newsCards: NewsCard[]) {\r\n        if (newsCards && newsCards.length) {\r\n            const cards = [ ...this.state.newsCards, ...newsCards ].sort(this.sortCardsByDate);\r\n\r\n            this.setState({\r\n                newsCards: cards,\r\n                loading: false,\r\n                page: this.state.page + 1\r\n            });\r\n        } else {\r\n            this.setState({ end: true });\r\n        }\r\n    }\r\n\r\n    fetchNews () {\r\n        const { page } = this.state;\r\n        const start = page * NEWS_LIMIT;\r\n\r\n        this.setState({ loading: true });\r\n\r\n        fetch(`${ BACKEND_URL }/posts?_sort=PublishDate:DESC&_start=${ start }&_limit=${ NEWS_LIMIT }`)\r\n            .then(response => response.json())\r\n            .then(data => data.map((datum: NewsDto) => this.parseNewsCard(datum)))\r\n            .then(newsCards => this.handleResponse(newsCards));\r\n    }\r\n\r\n    advertisementToNewsCard (advertisement: Advertisement | null) {\r\n        return {\r\n            excerpt: advertisement ? advertisement.text : \"\",\r\n            newsCover: advertisement ? advertisement.image : {},\r\n            link: advertisement ? advertisement.link : \"\",\r\n            title: advertisement ? advertisement.title : \"\",\r\n            publishDate: advertisement ? advertisement.startDate : \"\"\r\n        };\r\n    }\r\n\r\n    renderNewsCards (newsCards: NewsCard[], advertisement: Advertisement | null) {\r\n        const adNewsCard = this.advertisementToNewsCard(advertisement);\r\n\r\n        return newsCards.length ? (\r\n            <>\r\n                <div className=\"latest-news\">\r\n                    <div className=\"main-news\">\r\n                        <NewsCardComponent key={ newsCards[0].slug } newsCard={ newsCards[0] } type=\"main\" />\r\n                    </div>\r\n                    <div className=\"fresh-news\">\r\n                        <NewsCardComponent newsCard={ adNewsCard } type=\"fresh\"/>\r\n                        { newsCards.slice(1, 5).map(newsCard => (\r\n                            <NewsCardComponent key={ newsCard.slug } newsCard={ newsCard } type=\"fresh\" />\r\n                        )) }\r\n                        \r\n                    </div>\r\n                </div>\r\n                <div className=\"other-news\">\r\n                    { newsCards.slice(5, newsCards.length).map(newsCard => (\r\n                        <NewsCardComponent key={ newsCard.slug } newsCard={ newsCard } type=\"other\" />\r\n                    )) }\r\n                </div>\r\n            </>\r\n        ) : null;\r\n    }\r\n\r\n    componentDidMount () {\r\n        adService.fetchAdvertisements();\r\n        this.fetchNews();\r\n        this.subscribeOnAdvertisementChange();\r\n    }\r\n\r\n    subscribeOnAdvertisementChange () {\r\n        this.subscription = adService.subscribeOnNewsCardAdUpdate(\r\n            (advertisement: Advertisement) => this.setState({ advertisement })\r\n        );\r\n    }\r\n\r\n    handleScroll = (event: any) => {\r\n        const { loading, end } = this.state;\r\n\r\n        if (event.target.scrollHeight - event.target.scrollTop < VISIBILITY_LIMIT) {\r\n            !loading && !end && this.fetchNews();\r\n        }\r\n    }\r\n\r\n    render () {\r\n        const {\r\n            advertisement,\r\n            newsCards\r\n        } = this.state;\r\n\r\n        return (\r\n            <div onScroll={ this.handleScroll } className=\"news-list\">\r\n                <div className=\"news-cards\">\r\n                    { this.renderNewsCards(newsCards, advertisement) }\r\n                </div>\r\n            </div>\r\n            \r\n        );\r\n    }\r\n}\r\n  \r\nexport default NewsListComponent;","import React, { Component } from 'react';\r\n\r\nimport './ShowEpisodesComponent.css';\r\nimport { ShowEpisode } from '../interfaces';\r\n\r\n\r\ninterface ShowEpisodesProperties {\r\n    slug: string;\r\n}\r\n\r\nexport class ShowEpisodesComponent extends Component<ShowEpisodesProperties> {\r\n    state = {\r\n        showEpisodes: []\r\n    }\r\n\r\n    parseShowEpisode (datum: any): ShowEpisode {\r\n        return {\r\n            title: datum.name,\r\n            image: datum.pictures[\"1024wx1024h\"],\r\n            url: datum.url,\r\n            date: datum.created_time,\r\n            slug: datum.slug\r\n        }\r\n    }\r\n\r\n    parseShowEpisodes (playlistDto: any): ShowEpisode[] | null {\r\n        if (!playlistDto || !playlistDto.data || !playlistDto.data.length) {\r\n            return null;\r\n        }\r\n        \r\n        return playlistDto.data.map((datum: any) => this.parseShowEpisode(datum));\r\n    }\r\n\r\n    fetchPlaylist () {\r\n        const { slug } = this.props;\r\n        \r\n        fetch(`https://api.mixcloud.com/radioplato/playlists/${ slug }/cloudcasts/`)\r\n            .then(response => response.json())\r\n            .then(playlist => this.parseShowEpisodes(playlist)?.reverse().slice(0, 9))\r\n            .then(showEpisodes => this.setState({ showEpisodes }));\r\n    }\r\n\r\n    renderShowEpisode (episode: ShowEpisode) {\r\n        const key = `${ episode.slug }-${ new Date().getTime() }`;\r\n        const date = new Date(episode.date).toISOString().slice(0,10).split(\"-\").reverse().join(\".\");\r\n\r\n        return (\r\n            <a key={ key } href={ episode.url }>\r\n                <div className=\"episode-container\">\r\n                    <img className=\"episode-image\" src={ episode.image } alt={ episode.title }/>\r\n                    <div className=\"episode-information\">\r\n                        <h3>{ episode.title }</h3>\r\n                        <p>{ date }</p>\r\n                    </div>\r\n                </div>\r\n            </a>\r\n        );\r\n    }\r\n\r\n    renderShowEpisodes (episodes: ShowEpisode[]) {\r\n        return episodes ? (\r\n            <>\r\n                <h2>Latest Episodes</h2>\r\n                <div className=\"episode-cards\">\r\n                    { episodes.map(episode => this.renderShowEpisode(episode)) }\r\n                </div>\r\n            </>\r\n        ) : null;\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.fetchPlaylist();\r\n    }\r\n\r\n    render () {\r\n        const {\r\n            showEpisodes\r\n        } = this.state;\r\n\r\n        return (\r\n            <div className=\"episode-list\">\r\n                { this.renderShowEpisodes(showEpisodes) }\r\n            </div>\r\n            \r\n        );\r\n    }\r\n}\r\n  \r\nexport default ShowEpisodesComponent;","import React, { Component } from 'react';\r\n\r\nimport SocialLinksComponent from '../../shared/SocialLinksComponent/SocialLinksComponent';\r\nimport ShowEpisodesComponent from '../ShowEpisodesComponent/ShowEpisodesComponent';\r\n\r\nimport { BACKEND_URL } from '../../shared/constants';\r\nimport { ShowDto, Show } from '../interfaces';\r\n\r\nimport './ShowComponent.css';\r\n\r\n\r\ninterface ShowComponentProperties {\r\n    slug: string;\r\n}\r\n\r\ninterface ShowComponentState {\r\n    show: Show | null\r\n}\r\n\r\nexport class ShowComponent extends Component<ShowComponentProperties> {\r\n    state: ShowComponentState = {\r\n        show: null\r\n    }\r\n\r\n    parseShow(showDto: ShowDto): Show | null {\r\n        return showDto ? {\r\n            description: showDto.Description,\r\n            showCover: {\r\n                alternativeText: showDto.ShowCover.alternativeText,\r\n                caption: showDto.ShowCover.caption,\r\n                url: showDto.ShowCover.url\r\n            },\r\n            title: showDto.Title,\r\n            showLinks: {\r\n                mixcloud: showDto.ShowLink.mixcloud,\r\n                spotify: showDto.ShowLink.spotify,\r\n                itunes: showDto.ShowLink.itunes,\r\n                castbox: showDto.ShowLink.castbox,\r\n                facebook: showDto.ShowLink.facebook,\r\n                vk: showDto.ShowLink.vk,\r\n                instagram: showDto.ShowLink.instagram,\r\n                telegram: showDto.ShowLink.telegram, \r\n            }\r\n        } : null\r\n    }\r\n\r\n    fetchShow () {\r\n        const { slug } = this.props;\r\n\r\n        fetch(`${ BACKEND_URL }/shows?Slug=${ slug }`)\r\n            .then(response => response.json())\r\n            .then((data: ShowDto[]) => this.parseShow(data[0]))\r\n            .then(show => this.setState({ show }));\r\n    }\r\n    \r\n\r\n    componentDidMount () {\r\n        this.fetchShow();\r\n    }\r\n\r\n    render () {\r\n        const { show } = this.state;\r\n        const { slug } = this.props;\r\n        const imageSrc = show ? show.showCover.url : '';\r\n\r\n        return show ? (\r\n            <article className=\"show\">\r\n                <div className=\"show-description\">\r\n                    <div className=\"information\">\r\n                        <h1>{ show.title }</h1>\r\n                        <p>{ show.description }</p>\r\n                        <SocialLinksComponent socialLinks={ show.showLinks }/>\r\n                    </div>\r\n                    <div className=\"show-cover\">\r\n                        <img src={ imageSrc } loading='lazy' alt={ show.showCover.alternativeText }/>\r\n                    </div>\r\n                </div>\r\n                <ShowEpisodesComponent slug={ slug } />\r\n            </article>\r\n        ) : null;\r\n    }\r\n}\r\n  \r\nexport default ShowComponent;","\r\nimport React from \"react\";\r\n\r\nimport { Advertisement } from \"../interfaces\";\r\n\r\nimport \"./AdComponent.css\";\r\n\r\ninterface AdComponentProperties {\r\n    advertisement: Advertisement | null\r\n}\r\n\r\nfunction AdComponent ({ advertisement }: AdComponentProperties) {\r\n    return (\r\n        <a className=\"da-container\" href={ advertisement?.link }>\r\n            <div className=\"da-image\">\r\n                <img src={ advertisement?.image.url } alt={ advertisement?.image.alternativeText }/>\r\n            </div>\r\n            <div className=\"da-text\">\r\n                <h2>\r\n                    { advertisement?.title }\r\n                </h2>\r\n                <p>\r\n                    { advertisement?.text }\r\n                </p>\r\n            </div>\r\n        </a>\r\n    );\r\n}\r\n\r\nexport default AdComponent;\r\n","import React, { Component } from 'react';\r\nimport { Subscription } from 'rxjs';\r\nimport moment from 'moment';\r\n\r\nimport ReactMarkdown from 'react-markdown'\r\n\r\nimport AdComponent from '../../advertisement/AdComponent/AdComponent';\r\nimport adService from '../../advertisement/AdService';\r\n\r\nimport { BACKEND_URL } from '../../shared/constants';\r\nimport { Advertisement } from '../../advertisement/interfaces';\r\nimport { NewsDto, News } from '../interfaces';\r\n\r\nimport './NewsComponent.css';\r\n\r\n\r\ninterface NewsComponentProperties {\r\n    slug: string;\r\n}\r\n\r\ninterface NewsComponentState {\r\n    news: News | null,\r\n    advertisement: Advertisement | null\r\n}\r\n\r\nconst DATE_FORMAT = 'DD.MM.YYYY';\r\n\r\nexport class NewsComponent extends Component<NewsComponentProperties> {\r\n    state: NewsComponentState = {\r\n        news: null,\r\n        advertisement: null\r\n    };\r\n    subscription: Subscription | null = null;\r\n\r\n    parseNews(newsDto: NewsDto): News | null {\r\n        return newsDto ? {\r\n            title: newsDto.Title,\r\n            content: newsDto.Content,\r\n            wordsBy: newsDto.WordsBy,\r\n            photosBy: newsDto.PhotosBy,\r\n            excerpt:  newsDto.Excerpt,\r\n            slug: newsDto.Slug,\r\n            publishDate: newsDto.PublishDate,\r\n            newsCover: {\r\n                alternativeText: newsDto.PostCover.alternativeText,\r\n                caption: newsDto.PostCover.caption,\r\n                url: newsDto.PostCover.url\r\n            }\r\n        } : null\r\n    }\r\n\r\n    fetchNews () {\r\n        const { slug } = this.props;\r\n\r\n        fetch(`${ BACKEND_URL }/posts?Slug=${ slug }`)\r\n            .then(response => response.json())\r\n            .then((data: NewsDto[]) => this.parseNews(data[0]))\r\n            .then(news => this.setState({ news }));\r\n    }\r\n    \r\n    componentDidMount () {\r\n        this.fetchNews();\r\n        this.subscribeOnGalleryChange();\r\n        adService.fetchAdvertisements();\r\n    }\r\n\r\n    subscribeOnGalleryChange () {\r\n        this.subscription = adService.subscribeOnNewsPostAdUpdate(\r\n            (advertisement: Advertisement) => this.setState({ advertisement })\r\n        );\r\n    }\r\n\r\n    render () {\r\n        const { news, advertisement } = this.state;\r\n        const imageSrc = news ? news.newsCover.url : '';\r\n        const imageStyle = {\r\n            backgroundRepeat: 'no-repeat',\r\n            backgroundAttachment: 'fixed',\r\n            backgroundSize: 'cover',\r\n            backgroundImage: `url(${ imageSrc })`\r\n        }\r\n        const date = moment(news?.publishDate).format(DATE_FORMAT);\r\n        const wordsBy = news?.wordsBy ? `| Author: ${ news.wordsBy }` : '';\r\n        const photosBy = news?.photosBy ? `| Ph.: ${ news.photosBy }` : '';\r\n\r\n        return news ? (\r\n            <article className=\"news\">\r\n                <div className=\"news-description\" style={ imageStyle }>\r\n                    <div className=\"news-information\">\r\n                        <h1 className=\"news-title\">{ news.title }</h1>\r\n                        <p className=\"news-excerpt\">{ news.excerpt }</p>\r\n                        <p className=\"news-meta\">\r\n                            { `${ date } ${ wordsBy } ${ photosBy }` }\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"news-content-container\">\r\n                    <div className=\"news-content\">\r\n                        <ReactMarkdown source={ news.content } escapeHtml={ false } />\r\n                    </div>\r\n                </div>\r\n                <AdComponent advertisement={ advertisement } />\r\n            </article>\r\n        ) : null;\r\n    }\r\n}\r\n  \r\nexport default NewsComponent;","import React, { Component } from 'react';\r\n\r\nimport { BACKEND_URL } from '../shared/constants';\r\nimport { AboutDto, About } from '../about/interfaces';\r\n\r\nimport './About.css';\r\n\r\ninterface AboutComponentState {\r\n    about: About | null\r\n}\r\n\r\nexport class AboutComponent extends Component {\r\n    state: AboutComponentState = {\r\n        about: null\r\n    }\r\n\r\n    parseAbout(aboutDto: AboutDto): About | null {\r\n        return aboutDto ? {\r\n            title: aboutDto.Title,\r\n            description: aboutDto.Content,\r\n            aboutCover: {\r\n                alternativeText: aboutDto.Image.alternativeText,\r\n                caption: aboutDto.Image.caption,\r\n                url: aboutDto.Image.url\r\n            }\r\n        } : null\r\n    }\r\n\r\n    fetchAbout () {\r\n        fetch(`${ BACKEND_URL }/about`)\r\n            .then(response => response.json())\r\n            .then((data: AboutDto) => this.parseAbout(data))\r\n            .then(about => this.setState({ about }));\r\n    }\r\n\r\n\r\n    componentDidMount () {\r\n        this.fetchAbout();\r\n    }\r\n\r\n    render () {\r\n        const { about } = this.state;\r\n        const imageSrc = about ? about.aboutCover.url : '';\r\n\r\n\r\n        return about ? (\r\n            <article className=\"about\">\r\n                <div className=\"information\">\r\n                    <h1>{ about.title }</h1>\r\n                    <p>{ about.description }</p>\r\n                </div>\r\n                <div className=\"image\">\r\n                    <img src={ imageSrc } loading='lazy' alt={ about.aboutCover.alternativeText }/>\r\n                </div>\r\n            </article>\r\n        ) : null;\r\n    }\r\n}\r\n\r\nexport default AboutComponent;","import React, { Component } from 'react';\r\n\r\nimport { BACKEND_URL } from '../shared/constants';\r\nimport { DonateDto, Donate } from '../donate/interfaces';\r\n\r\nimport './Donate.css';\r\n\r\ninterface DonateComponentState {\r\n    donate: Donate | null\r\n}\r\n\r\nexport class DonateComponent extends Component {\r\n    state: DonateComponentState = {\r\n        donate: null\r\n    }\r\n\r\n    parseDonate(donateDto: DonateDto): Donate | null {\r\n        return donateDto ? {\r\n            title: donateDto.Title,\r\n            description: donateDto.Content,\r\n            donateCover: {\r\n                alternativeText: donateDto.Image.alternativeText,\r\n                caption: donateDto.Image.caption,\r\n                url: donateDto.Image.url\r\n            }\r\n        } : null\r\n    }\r\n\r\n    fetchDonate () {\r\n        fetch(`${ BACKEND_URL }/donate`)\r\n            .then(response => response.json())\r\n            .then((data: DonateDto) => this.parseDonate(data))\r\n            .then(donate => this.setState({ donate }));\r\n    }\r\n\r\n\r\n    componentDidMount () {\r\n        this.fetchDonate();\r\n    }\r\n\r\n    render () {\r\n        const { donate } = this.state;\r\n        const imageSrc = donate ? donate.donateCover.url : '';\r\n\r\n\r\n        return donate ? (\r\n            <article className=\"about\">\r\n                <div className=\"information\">\r\n                    <h1>{ donate.title }</h1>\r\n                    <div className=\"text-content\">{ donate.description }</div>\r\n                </div>\r\n                <div className=\"image\">\r\n                    <img src={ imageSrc } loading='lazy' alt={ donate.donateCover.alternativeText }/>\r\n                </div>\r\n            </article>\r\n        ) : null;\r\n    }\r\n}\r\n\r\nexport default DonateComponent;","import React from 'react';\r\n\r\nimport {\r\n    Switch,\r\n    Route,\r\n    withRouter,\r\n} from 'react-router-dom';\r\n\r\nimport StartPageComponent from '../start-page/StartPageComponent';\r\nimport ShowListComponent from '../shows/ShowListComponent';\r\nimport NewsListComponent from '../news/NewsListComponent';\r\nimport ShowComponent from '../shows/ShowComponent/ShowComponent';\r\nimport NewsComponent from '../news/News/NewsComponent';\r\nimport AboutComponent from '../about/About';\r\nimport { ScrollableScheduleComponent } from '../shared/schedule/ScheduleComponent';\r\nimport DonateComponent from '../donate/Donate'\r\n\r\nimport './Content.css';\r\n\r\nconst SCHEDULE = '/schedule';\r\nconst SHOWS = '/shows';\r\nconst NEWS = '/news';\r\nconst ABOUT = '/about';\r\nconst DONATE = '/donate';\r\n\r\nfunction Content() {\r\n    return (\r\n        <Switch>\r\n            <Route exact path=\"/\" component={ StartPageComponent }/>\r\n            <Route exact path={ `${ process.env.PUBLIC_URL }/` } component={ StartPageComponent }/>\r\n            <Route exact path={ SCHEDULE } component={ ScrollableScheduleComponent }/>\r\n            <Route exact path={ SHOWS } component={ ShowListComponent }/>\r\n            <Route path={ `${ SHOWS }/:slug` } component={(routerProps: any) => <ShowComponent slug={routerProps.match.params.slug}/>}/>\r\n            <Route exact path={ NEWS } component={ NewsListComponent }/>\r\n            <Route path={ `${ NEWS }/:slug` } component={(routerProps: any) => <NewsComponent slug={routerProps.match.params.slug}/>}/>\r\n            <Route exact path={ ABOUT } component={ AboutComponent }/>\r\n            <Route exact path={ DONATE } component={ DonateComponent }/>\r\n        </Switch>\r\n    );\r\n}\r\n  \r\nexport default withRouter(Content);","import React from 'react'\r\n\r\nimport {\r\n    Switch,\r\n    Route,\r\n    withRouter,\r\n} from 'react-router-dom';\r\n\r\nimport MenuButton from '../menu/menu-button/MenuButton'\r\nimport PlayerComponent from '../shared/Player/PlayerComponent/PlayerComponent'\r\nimport Content from '../content/Content'\r\nimport { PlayerTypes } from '../shared/enums';\r\n\r\nimport './Main.css'\r\n\r\n\r\n\r\nfunction Main() {\r\n    return (\r\n        <main>\r\n            <MenuButton />\r\n            <Switch>\r\n                <Route exact path='/' render={\r\n                    props => <PlayerComponent { ...props } playerType={ PlayerTypes.Main }/>\r\n                }/>\r\n                <Route exact path={ `${ process.env.PUBLIC_URL }/` } render={\r\n                    props => <PlayerComponent { ...props } playerType={ PlayerTypes.Main }/>\r\n                }/>\r\n            </Switch>\r\n            <Content />\r\n        </main>\r\n    );\r\n}\r\n  \r\nexport default withRouter(Main);","import React, { Component } from 'react';\r\nimport ReactPlayer from 'react-player';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { playerService } from './PlayerService';\r\nimport { PlayerState } from './interfaces';\r\nimport { DEFAULT_PLAYER_STATE, STREAM_URL } from './constants';\r\n\r\nimport './Player.css';\r\n\r\nexport class Player extends Component {\r\n    state = DEFAULT_PLAYER_STATE;\r\n    subscription: Subscription | null = null;\r\n    \r\n    componentDidMount () {\r\n        this.subscribeOnPlayerStateChange();\r\n    }\r\n\r\n    subscribeOnPlayerStateChange () {\r\n        this.subscription = playerService.subscribeOnPlayerStateChanges(\r\n            (data: PlayerState) => this.setState(data)\r\n        );\r\n    }\r\n\r\n    componentWillUnmount () {\r\n        this.subscription?.unsubscribe();\r\n    }\r\n\r\n    render () {\r\n        const {\r\n            playing,\r\n            muted,\r\n            volume\r\n        } = this.state;\r\n\r\n        return (\r\n            <div className='audio'>\r\n                <ReactPlayer\r\n                    url={ STREAM_URL }\r\n                    playing={ playing }\r\n                    muted={ muted }\r\n                    volume={ volume }\r\n                    config={{\r\n                        file: {\r\n                            forceAudio: true\r\n                        }\r\n                    }}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Player;","import React from 'react';\r\n\r\nimport {\r\n    HashRouter,\r\n} from 'react-router-dom';\r\n\r\nimport Header from './components/header/Header';\r\nimport Main from './components/main/Main';\r\nimport Player from './components/shared/Player/Player';\r\n\r\nimport './App.css';\r\n\r\n\r\nfunction App() {\r\n    return (\r\n        <HashRouter basename=\"/\">\r\n            <Header />\r\n            <Main />\r\n            <Player />\r\n        </HashRouter>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}